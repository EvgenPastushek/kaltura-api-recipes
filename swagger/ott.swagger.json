{
  "swagger": "2.0",
  "host": "www.kaltura.com",
  "schemes": [
    "http",
    "https"
  ],
  "basePath": "/api_v3",
  "info": {
    "title": "Kaltura",
    "description": "The Kaltura API",
    "version": "3.6.287.19813"
  },
  "securityDefinitions": {
    "ks": {
      "in": "query",
      "name": "ks",
      "type": "apiKey",
      "description": "A session ID generated by calling /service/session/action/start"
    }
  },
  "definitions": {
    "KalturaObjectBase": {},
    "KalturaAnnouncement": {
      "properties": {
        "name": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "enabled": {
          "type": "boolean"
        },
        "startTime": {
          "type": "integer"
        },
        "timezone": {
          "type": "string"
        },
        "status": {
          "readOnly": true,
          "description": "Enum Type: `KalturaAnnouncementStatus`",
          "type": "string",
          "enum": [
            "NotSent",
            "Sending",
            "Sent",
            "Aborted"
          ],
          "x-enumLabels": [
            "NOTSENT",
            "SENDING",
            "SENT",
            "ABORTED"
          ]
        },
        "recipients": {
          "description": "Enum Type: `KalturaAnnouncementRecipientsType`",
          "type": "string",
          "enum": [
            "All",
            "LoggedIn",
            "Guests",
            "Other"
          ],
          "x-enumLabels": [
            "ALL",
            "LOGGEDIN",
            "GUESTS",
            "OTHER"
          ]
        },
        "id": {
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaFilter": {
      "properties": {
        "orderBy": {
          "type": "integer"
        }
      }
    },
    "KalturaAnnouncementFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {}
    },
    "KalturaFilterPager": {
      "description": "The KalturaFilterPager object enables paging management to be applied upon service list actions",
      "properties": {
        "pageSize": {
          "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
          "type": "integer"
        },
        "pageIndex": {
          "description": "The page number for which {pageSize} of objects should be retrieved",
          "type": "integer"
        }
      }
    },
    "KalturaListResponse": {
      "description": "Base list wrapper",
      "properties": {
        "totalCount": {
          "description": "Total items",
          "type": "integer"
        }
      }
    },
    "KalturaRegionalChannel": {
      "properties": {
        "linearChannelId": {
          "description": "The identifier of the linear media representing the channel",
          "type": "integer"
        },
        "channelNumber": {
          "description": "The number of the channel",
          "type": "integer"
        }
      }
    },
    "KalturaRegion": {
      "properties": {
        "id": {
          "description": "Region identifier",
          "type": "integer"
        },
        "name": {
          "description": "Region name",
          "type": "string"
        },
        "externalId": {
          "description": "Region external identifier",
          "type": "string"
        },
        "isDefault": {
          "description": "Indicates whether this is the default region for the partner",
          "type": "boolean"
        },
        "linearChannels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaRegionalChannel"
          }
        }
      }
    },
    "KalturaRegionListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Regions list",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaRegion"
          }
        }
      }
    },
    "KalturaUserAssetRule": {
      "description": "User asset rule - representing different type of rules on an asset(Parental, Geo, User Type, Device)",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Unique rule identifier",
          "type": "integer"
        },
        "ruleType": {
          "description": "Enum Type: `KalturaRuleType`\n\nRule type - possible values: Rule type – Parental, Geo, UserType, Device",
          "type": "string",
          "enum": [
            "parental",
            "geo",
            "user_type",
            "device"
          ],
          "x-enumLabels": [
            "PARENTAL",
            "GEO",
            "USER_TYPE",
            "DEVICE"
          ]
        },
        "name": {
          "description": "Rule display name",
          "type": "string"
        },
        "description": {
          "description": "Additional description for the specific rule",
          "type": "string"
        }
      }
    },
    "KalturaUserAssetRuleListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "GenericRules list",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaUserAssetRule"
          }
        }
      }
    },
    "KalturaValue": {
      "description": "A representation to return an array of values",
      "properties": {
        "description": {
          "type": "string"
        }
      }
    },
    "KalturaLongValue": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaValue"
        }
      ],
      "description": "A string representation to return an array of longs",
      "properties": {
        "value": {
          "type": "integer"
        }
      }
    },
    "KalturaDoubleValue": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaValue"
        }
      ],
      "description": "A string representation to return an array of doubles",
      "properties": {
        "value": {
          "type": "number"
        }
      }
    },
    "KalturaBooleanValue": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaValue"
        }
      ],
      "description": "A string representation to return an array of booleans",
      "properties": {
        "value": {
          "type": "boolean"
        }
      }
    },
    "KalturaIntegerValue": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaValue"
        }
      ],
      "description": "A string representation to return an array of ints",
      "properties": {
        "value": {
          "type": "integer"
        }
      }
    },
    "KalturaStringValue": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaValue"
        }
      ],
      "description": "A string representation to return an array of strings",
      "properties": {
        "value": {
          "type": "string"
        }
      }
    },
    "KalturaCDNAdapterProfile": {
      "description": "CDN Adapter",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "CDN adapter identifier",
          "type": "integer"
        },
        "name": {
          "description": "CDNR adapter name",
          "type": "string"
        },
        "isActive": {
          "description": "CDN adapter active status",
          "type": "boolean"
        },
        "adapterUrl": {
          "description": "CDN adapter URL",
          "type": "string"
        },
        "baseUrl": {
          "description": "CDN adapter base URL",
          "type": "string"
        },
        "settings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          }
        },
        "systemName": {
          "description": "CDN adapter alias",
          "type": "string"
        },
        "sharedSecret": {
          "readOnly": true,
          "description": "CDN shared secret",
          "type": "string"
        }
      }
    },
    "KalturaCDNAdapterProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaCDNAdapterProfile"
          }
        }
      }
    },
    "KalturaSlimAsset": {
      "description": "Slim Asset Details",
      "properties": {
        "id": {
          "description": "Internal identifier of the asset",
          "type": "string"
        },
        "type": {
          "description": "Enum Type: `KalturaAssetType`\n\nThe type of the asset. Possible values: media, recording, epg",
          "type": "string",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ]
        }
      }
    },
    "KalturaBaseOTTUser": {
      "description": "Slim user data",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "User identifier",
          "type": "string"
        },
        "username": {
          "description": "Username",
          "type": "string"
        },
        "firstName": {
          "description": "First name",
          "type": "string"
        },
        "lastName": {
          "description": "Last name",
          "type": "string"
        }
      }
    },
    "KalturaCountry": {
      "description": "Country details",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Country identifier",
          "type": "integer"
        },
        "name": {
          "description": "Country name",
          "type": "string"
        },
        "code": {
          "description": "Country code",
          "type": "string"
        }
      }
    },
    "KalturaOTTUserType": {
      "description": "User type",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "User type identifier",
          "type": "integer"
        },
        "description": {
          "description": "User type description",
          "type": "string"
        }
      }
    },
    "KalturaOTTUser": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseOTTUser"
        }
      ],
      "description": "User",
      "properties": {
        "householdId": {
          "readOnly": true,
          "description": "Household identifier",
          "type": "integer"
        },
        "email": {
          "description": "Email",
          "type": "string"
        },
        "address": {
          "description": "Address",
          "type": "string"
        },
        "city": {
          "description": "City",
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/KalturaCountry"
        },
        "zip": {
          "description": "Zip code",
          "type": "string"
        },
        "phone": {
          "description": "Phone",
          "type": "string"
        },
        "affiliateCode": {
          "description": "Affiliate code",
          "type": "string"
        },
        "externalId": {
          "description": "External user identifier",
          "type": "string"
        },
        "userType": {
          "$ref": "#/definitions/KalturaOTTUserType"
        },
        "dynamicData": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          }
        },
        "isHouseholdMaster": {
          "readOnly": true,
          "description": "Is the user the household master",
          "type": "boolean"
        },
        "suspentionState": {
          "readOnly": true,
          "description": "Enum Type: `KalturaHouseholdSuspentionState`\n\nSuspention state",
          "type": "string",
          "enum": [
            "not_suspended",
            "suspended"
          ],
          "x-enumLabels": [
            "NOT_SUSPENDED",
            "SUSPENDED"
          ]
        },
        "userState": {
          "readOnly": true,
          "description": "Enum Type: `KalturaUserState`\n\nUser state",
          "type": "string",
          "enum": [
            "ok",
            "user_with_no_household",
            "user_created_with_no_role",
            "user_not_activated"
          ],
          "x-enumLabels": [
            "OK",
            "USER_WITH_NO_HOUSEHOLD",
            "USER_CREATED_WITH_NO_ROLE",
            "USER_NOT_ACTIVATED"
          ]
        }
      }
    },
    "KalturaBookmarkPlayerData": {
      "properties": {
        "action": {
          "description": "Enum Type: `KalturaBookmarkActionType`\n\nAction",
          "type": "string",
          "enum": [
            "HIT",
            "PLAY",
            "STOP",
            "PAUSE",
            "FIRST_PLAY",
            "SWOOSH",
            "FULL_SCREEN",
            "SEND_TO_FRIEND",
            "LOAD",
            "FULL_SCREEN_EXIT",
            "FINISH",
            "ERROR",
            "BITRATE_CHANGE",
            "NONE"
          ],
          "x-enumLabels": [
            "HIT",
            "PLAY",
            "STOP",
            "PAUSE",
            "FIRST_PLAY",
            "SWOOSH",
            "FULL_SCREEN",
            "SEND_TO_FRIEND",
            "LOAD",
            "FULL_SCREEN_EXIT",
            "FINISH",
            "ERROR",
            "BITRATE_CHANGE",
            "NONE"
          ]
        },
        "averageBitrate": {
          "description": "Average Bitrate",
          "type": "integer"
        },
        "totalBitrate": {
          "description": "Total Bitrate",
          "type": "integer"
        },
        "currentBitrate": {
          "description": "Current Bitrate",
          "type": "integer"
        },
        "fileId": {
          "description": "Identifier of the file",
          "type": "integer"
        }
      }
    },
    "KalturaBookmark": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSlimAsset"
        }
      ],
      "properties": {
        "userId": {
          "readOnly": true,
          "description": "User identifier",
          "type": "string"
        },
        "position": {
          "description": "The position of the user in the specific asset (in seconds)",
          "type": "integer"
        },
        "positionOwner": {
          "description": "Enum Type: `KalturaPositionOwner`\n\nIndicates who is the owner of this position",
          "type": "string",
          "enum": [
            "household",
            "user"
          ],
          "x-enumLabels": [
            "HOUSEHOLD",
            "USER"
          ]
        },
        "finishedWatching": {
          "description": "Specifies whether the user&#39;s current position exceeded 95% of the duration",
          "type": "boolean"
        },
        "playerData": {
          "$ref": "#/definitions/KalturaBookmarkPlayerData"
        }
      }
    },
    "KalturaBookmarkListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of assets and their bookmarks",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaBookmark"
          }
        }
      }
    },
    "KalturaStringValueArray": {
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          }
        }
      }
    },
    "KalturaMediaImage": {
      "description": "Image details",
      "properties": {
        "ratio": {
          "description": "Image aspect ratio",
          "type": "string"
        },
        "width": {
          "description": "Image width",
          "type": "integer"
        },
        "height": {
          "description": "Image height",
          "type": "integer"
        },
        "url": {
          "description": "Image URL",
          "type": "string"
        },
        "version": {
          "description": "Image Version",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "description": "Image ID",
          "type": "string"
        },
        "isDefault": {
          "description": "Determined whether image was taken from default configuration or not",
          "type": "boolean"
        }
      }
    },
    "KalturaMediaFile": {
      "description": "Media file details",
      "properties": {
        "assetId": {
          "description": "Unique identifier for the asset",
          "type": "integer"
        },
        "id": {
          "readOnly": true,
          "description": "File unique identifier",
          "type": "integer"
        },
        "type": {
          "description": "Device types as defined in the system",
          "type": "string"
        },
        "url": {
          "description": "URL of the media file to be played",
          "type": "string"
        },
        "duration": {
          "description": "Duration of the media file",
          "type": "integer"
        },
        "externalId": {
          "description": "External identifier for the media file",
          "type": "string"
        }
      }
    },
    "KalturaBuzzScore": {
      "description": "Buzz score",
      "properties": {
        "normalizedAvgScore": {
          "description": "Normalized average score",
          "type": "number"
        },
        "updateDate": {
          "description": "Update date",
          "type": "integer"
        },
        "avgScore": {
          "description": "Average score",
          "type": "number"
        }
      }
    },
    "KalturaAssetStatistics": {
      "description": "Asset statistics",
      "properties": {
        "assetId": {
          "description": "Unique identifier for the asset",
          "type": "integer"
        },
        "likes": {
          "description": "Total number of likes for this asset",
          "type": "integer"
        },
        "views": {
          "description": "Total number of views for this asset",
          "type": "integer"
        },
        "ratingCount": {
          "description": "Number of people that rated the asset",
          "type": "integer"
        },
        "rating": {
          "description": "Average rating for the asset",
          "type": "number"
        },
        "buzzScore": {
          "$ref": "#/definitions/KalturaBuzzScore"
        }
      }
    },
    "KalturaBaseAssetInfo": {
      "description": "Slim asset info",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Unique identifier for the asset",
          "type": "integer"
        },
        "type": {
          "description": "Identifies the asset type (EPG, Movie, TV Series, etc). \r\n            Possible values: 0 – EPG linear programs, or any asset type ID according to the asset types IDs defined in the system.",
          "type": "integer"
        },
        "name": {
          "description": "Asset name",
          "type": "string"
        },
        "description": {
          "description": "Asset description",
          "type": "string"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaMediaImage"
          }
        },
        "mediaFiles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaMediaFile"
          }
        }
      }
    },
    "KalturaAsset": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseAssetInfo"
        }
      ],
      "description": "Asset info",
      "properties": {
        "metas": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaValue"
          }
        },
        "tags": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaStringValueArray"
          }
        },
        "startDate": {
          "description": "Date and time represented as epoch. For VOD – since when the asset is available in the catalog. For EPG/Linear – when the program is aired (can be in the future).",
          "type": "integer"
        },
        "endDate": {
          "description": "Date and time represented as epoch. For VOD – till when the asset be available in the catalog. For EPG/Linear – program end time and date",
          "type": "integer"
        },
        "enableCdvr": {
          "description": "Enable cDVR",
          "type": "boolean"
        },
        "enableCatchUp": {
          "description": "Enable catch-up",
          "type": "boolean"
        },
        "enableStartOver": {
          "description": "Enable start over",
          "type": "boolean"
        },
        "enableTrickPlay": {
          "description": "Enable trick-play",
          "type": "boolean"
        }
      }
    },
    "KalturaAssetListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Asset wrapper",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaAsset"
          }
        }
      }
    },
    "KalturaProgramAsset": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAsset"
        }
      ],
      "description": "Program-asset info",
      "properties": {
        "epgChannelId": {
          "description": "EPG channel identifier",
          "type": "integer"
        },
        "epgId": {
          "description": "EPG identifier",
          "type": "string"
        },
        "relatedMediaId": {
          "description": "Ralated media identifier",
          "type": "integer"
        },
        "crid": {
          "description": "Unique identifier for the program",
          "type": "string"
        }
      }
    },
    "KalturaMediaAsset": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAsset"
        }
      ],
      "description": "Media-asset info",
      "properties": {
        "systemStartDate": {
          "description": "Date and time represented as epoch.",
          "type": "integer"
        },
        "systemFinalDate": {
          "description": "Date and time represented as epoch.",
          "type": "integer"
        },
        "externalIds": {
          "description": "External identifiers",
          "type": "string"
        },
        "catchUpBuffer": {
          "description": "Catch-up buffer",
          "type": "integer"
        },
        "trickPlayBuffer": {
          "description": "Trick-play buffer",
          "type": "integer"
        },
        "enableRecordingPlaybackNonEntitledChannel": {
          "readOnly": true,
          "description": "Enable Recording playback for non entitled channel",
          "type": "boolean"
        },
        "enableRecordingPlaybackNonExistingChannel": {
          "readOnly": true,
          "description": "Enable Recording playback for non existing channel",
          "type": "boolean"
        }
      }
    },
    "KalturaAssetComment": {
      "description": "Asset Comment",
      "properties": {
        "id": {
          "description": "Comment ID",
          "type": "integer"
        },
        "assetId": {
          "description": "Asset identifier",
          "type": "string"
        },
        "assetType": {
          "description": "Enum Type: `KalturaAssetType`\n\nAsset Type",
          "type": "string",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ]
        },
        "header": {
          "description": "Header",
          "type": "string"
        },
        "subHeader": {
          "description": "Sub Header",
          "type": "string"
        },
        "text": {
          "description": "Text",
          "type": "string"
        },
        "createDate": {
          "description": "CreateDate",
          "type": "integer"
        },
        "writer": {
          "description": "Writer",
          "type": "string"
        }
      }
    },
    "KalturaAssetCommentListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Asset Comment Response",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaAssetComment"
          }
        }
      }
    },
    "KalturaSeriesRecording": {
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Kaltura unique ID representing the series recording identifier",
          "type": "integer"
        },
        "epgId": {
          "description": "Kaltura EpgId",
          "type": "integer"
        },
        "channelId": {
          "description": "Kaltura ChannelId",
          "type": "integer"
        },
        "seriesId": {
          "description": "Kaltura SeriesId",
          "type": "string"
        },
        "seasonNumber": {
          "description": "Kaltura SeasonNumber",
          "type": "integer"
        },
        "type": {
          "description": "Enum Type: `KalturaRecordingType`\n\nRecording Type: single/series/season",
          "type": "string",
          "enum": [
            "SINGLE",
            "SEASON",
            "SERIES"
          ],
          "x-enumLabels": [
            "SINGLE",
            "SEASON",
            "SERIES"
          ]
        },
        "createDate": {
          "readOnly": true,
          "description": "Specifies when was the series recording created. Date and time represented as epoch.",
          "type": "integer"
        },
        "updateDate": {
          "readOnly": true,
          "description": "Specifies when was the series recording last updated. Date and time represented as epoch.",
          "type": "integer"
        },
        "excludedSeasons": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          }
        }
      }
    },
    "KalturaSeriesRecordingListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Series Recordings info wrapper",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaSeriesRecording"
          }
        }
      }
    },
    "KalturaPremiumService": {
      "description": "Premium service",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Service identifier",
          "type": "integer"
        },
        "name": {
          "description": "Service name / description",
          "type": "string"
        }
      }
    },
    "KalturaHouseholdPremiumService": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPremiumService"
        }
      ],
      "description": "Houshold premium service",
      "properties": {}
    },
    "KalturaHouseholdPremiumServiceListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Premium services list",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaHouseholdPremiumService"
          }
        }
      }
    },
    "KalturaCDVRAdapterProfile": {
      "description": "C-DVR Adapter",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "C-DVR adapter identifier",
          "type": "integer"
        },
        "name": {
          "description": "C-DVR adapter name",
          "type": "string"
        },
        "isActive": {
          "description": "C-DVR adapter active status",
          "type": "boolean"
        },
        "adapterUrl": {
          "description": "C-DVR adapter adapter URL",
          "type": "string"
        },
        "settings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          }
        },
        "externalIdentifier": {
          "description": "C-DVR adapter external identifier",
          "type": "string"
        },
        "sharedSecret": {
          "readOnly": true,
          "description": "C-DVR shared secret",
          "type": "string"
        },
        "dynamicLinksSupport": {
          "description": "Indicates whether the C-DVR adapter supports dynamic URLs",
          "type": "boolean"
        }
      }
    },
    "KalturaCDVRAdapterProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "C-DVR adapter profiles",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaCDVRAdapterProfile"
          }
        }
      }
    },
    "KalturaExportTask": {
      "description": "Bulk export task",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Task identifier",
          "type": "integer"
        },
        "alias": {
          "description": "Alias for the task used to solicit an export using API",
          "type": "string"
        },
        "name": {
          "description": "Task display name",
          "type": "string"
        },
        "dataType": {
          "description": "Enum Type: `KalturaExportDataType`\n\nThe data type exported in this task",
          "type": "string",
          "enum": [
            "vod",
            "epg",
            "users"
          ],
          "x-enumLabels": [
            "VOD",
            "EPG",
            "USERS"
          ]
        },
        "filter": {
          "description": "Filter to apply on the export, utilize KSQL.\r\n            Note: KSQL currently applies to media assets only. It cannot be used for USERS filtering",
          "type": "string"
        },
        "exportType": {
          "description": "Enum Type: `KalturaExportType`\n\nType of export batch – full or incremental",
          "type": "string",
          "enum": [
            "full",
            "incremental"
          ],
          "x-enumLabels": [
            "FULL",
            "INCREMENTAL"
          ]
        },
        "frequency": {
          "description": "How often the export should occur, reasonable minimum threshold should apply, configurable in minutes",
          "type": "integer"
        },
        "notificationUrl": {
          "description": "The URL for sending a notification when the task&#39;s export process is done",
          "type": "string"
        },
        "vodTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          }
        },
        "isActive": {
          "description": "Indicates if the task is active or not",
          "type": "boolean"
        }
      }
    },
    "KalturaExportTaskListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Export task list wrapper",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaExportTask"
          }
        }
      }
    },
    "KalturaChannelEnrichmentHolder": {
      "description": "Holder object for channel enrichment enum",
      "properties": {
        "type": {
          "description": "Enum Type: `KalturaChannelEnrichment`",
          "type": "string",
          "enum": [
            "ClientLocation",
            "UserId",
            "HouseholdId",
            "DeviceId",
            "DeviceType",
            "UTCOffset",
            "Language",
            "NPVRSupport",
            "Catchup",
            "Parental",
            "DTTRegion",
            "AtHome"
          ],
          "x-enumLabels": [
            "CLIENTLOCATION",
            "USERID",
            "HOUSEHOLDID",
            "DEVICEID",
            "DEVICETYPE",
            "UTCOFFSET",
            "LANGUAGE",
            "NPVRSUPPORT",
            "CATCHUP",
            "PARENTAL",
            "DTTREGION",
            "ATHOME"
          ]
        }
      }
    },
    "KalturaExternalChannelProfile": {
      "description": "OSS Adapter",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "External channel id",
          "type": "integer"
        },
        "name": {
          "description": "External channel name",
          "type": "string"
        },
        "isActive": {
          "description": "External channel active status",
          "type": "boolean"
        },
        "externalIdentifier": {
          "description": "External channel external identifier",
          "type": "string"
        },
        "filterExpression": {
          "description": "Filter expression",
          "type": "string"
        },
        "recommendationEngineId": {
          "description": "Recommendation engine id",
          "type": "integer"
        },
        "enrichments": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaChannelEnrichmentHolder"
          }
        }
      }
    },
    "KalturaExternalChannelProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "External channel profiles",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaExternalChannelProfile"
          }
        }
      }
    },
    "KalturaRecommendationProfile": {
      "description": "PaymentGW",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "recommendation engine id",
          "type": "integer"
        },
        "name": {
          "description": "recommendation engine name",
          "type": "string"
        },
        "isActive": {
          "description": "recommendation engine is active status",
          "type": "boolean"
        },
        "adapterUrl": {
          "description": "recommendation engine adapter URL",
          "type": "string"
        },
        "recommendationEngineSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          }
        },
        "externalIdentifier": {
          "description": "recommendation engine external identifier",
          "type": "string"
        },
        "sharedSecret": {
          "readOnly": true,
          "description": "Shared Secret",
          "type": "string"
        }
      }
    },
    "KalturaRecommendationProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of recommendation profiles.",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaRecommendationProfile"
          }
        }
      }
    },
    "KalturaRegistrySettings": {
      "properties": {
        "key": {
          "description": "Permission item identifier",
          "type": "string"
        },
        "value": {
          "description": "Permission item name",
          "type": "string"
        }
      }
    },
    "KalturaRegistrySettingsListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of registry settings.",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaRegistrySettings"
          }
        }
      }
    },
    "KalturaHouseholdPaymentMethod": {
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Household payment method identifier (internal)",
          "type": "integer"
        },
        "paymentGatewayId": {
          "description": "Payment-gateway identifier",
          "type": "integer"
        },
        "name": {
          "description": "Payment method name",
          "type": "string"
        },
        "allowMultiInstance": {
          "description": "Indicates whether the payment method allow multiple instances",
          "type": "boolean"
        }
      }
    },
    "KalturaHouseholdPaymentMethodListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of household payment methods.",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaHouseholdPaymentMethod"
          }
        }
      }
    },
    "KalturaPaymentMethodProfile": {
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Payment method identifier (internal)",
          "type": "integer"
        },
        "paymentGatewayId": {
          "description": "Payment gateway identifier (internal)",
          "type": "integer"
        },
        "name": {
          "description": "Payment method name",
          "type": "string"
        },
        "allowMultiInstance": {
          "description": "Indicates whether the payment method allow multiple instances",
          "type": "boolean"
        }
      }
    },
    "KalturaPaymentMethodProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of payment method profiles.",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaPaymentMethodProfile"
          }
        }
      }
    },
    "KalturaPrice": {
      "description": "Price",
      "properties": {
        "amount": {
          "description": "Price",
          "type": "number"
        },
        "currency": {
          "description": "Currency",
          "type": "string"
        },
        "currencySign": {
          "description": "Currency Sign",
          "type": "string"
        }
      }
    },
    "KalturaProductPrice": {
      "properties": {
        "productId": {
          "description": "Product identifier",
          "type": "string"
        },
        "productType": {
          "description": "Enum Type: `KalturaTransactionType`\n\nProduct Type",
          "type": "string",
          "enum": [
            "ppv",
            "subscription",
            "collection"
          ],
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "COLLECTION"
          ]
        },
        "price": {
          "$ref": "#/definitions/KalturaPrice"
        },
        "purchaseStatus": {
          "description": "Enum Type: `KalturaPurchaseStatus`\n\nProduct purchase status",
          "type": "string",
          "enum": [
            "ppv_purchased",
            "free",
            "for_purchase_subscription_only",
            "subscription_purchased",
            "for_purchase",
            "subscription_purchased_wrong_currency",
            "pre_paid_purchased",
            "geo_commerce_blocked",
            "entitled_to_preview_module",
            "first_device_limitation",
            "collection_purchased",
            "user_suspended",
            "not_for_purchase"
          ],
          "x-enumLabels": [
            "PPV_PURCHASED",
            "FREE",
            "FOR_PURCHASE_SUBSCRIPTION_ONLY",
            "SUBSCRIPTION_PURCHASED",
            "FOR_PURCHASE",
            "SUBSCRIPTION_PURCHASED_WRONG_CURRENCY",
            "PRE_PAID_PURCHASED",
            "GEO_COMMERCE_BLOCKED",
            "ENTITLED_TO_PREVIEW_MODULE",
            "FIRST_DEVICE_LIMITATION",
            "COLLECTION_PURCHASED",
            "USER_SUSPENDED",
            "NOT_FOR_PURCHASE"
          ]
        }
      }
    },
    "KalturaTranslationToken": {
      "description": "Container for translation",
      "properties": {
        "language": {
          "description": "Language code",
          "type": "string"
        },
        "value": {
          "description": "Translated value",
          "type": "string"
        }
      }
    },
    "KalturaPpvPrice": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaProductPrice"
        }
      ],
      "description": "PPV price details",
      "properties": {
        "fileId": {
          "description": "Media file identifier",
          "type": "integer"
        },
        "ppvModuleId": {
          "description": "The associated PPV module identifier",
          "type": "string"
        },
        "isSubscriptionOnly": {
          "description": "Denotes whether this object is available only as part of a subscription or can be sold separately",
          "type": "boolean"
        },
        "fullPrice": {
          "$ref": "#/definitions/KalturaPrice"
        },
        "subscriptionId": {
          "description": "The identifier of the relevant subscription",
          "type": "string"
        },
        "collectionId": {
          "description": "The identifier of the relevant collection",
          "type": "string"
        },
        "prePaidId": {
          "description": "The identifier of the relevant pre paid",
          "type": "string"
        },
        "ppvDescriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          }
        },
        "purchaseUserId": {
          "description": "If the item already purchased - the identifier of the user (in the household) who purchased this item",
          "type": "string"
        },
        "purchasedMediaFileId": {
          "description": "If the item already purchased - the identifier of the purchased file",
          "type": "integer"
        },
        "relatedMediaFileIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          }
        },
        "startDate": {
          "description": "If the item already purchased - since when the user can start watching the item",
          "type": "integer"
        },
        "endDate": {
          "description": "If the item already purchased - until when the user can watch the item",
          "type": "integer"
        },
        "discountEndDate": {
          "description": "Discount end date",
          "type": "integer"
        },
        "firstDeviceName": {
          "description": "If the item already purchased and played - the name of the device on which it was first played",
          "type": "string"
        },
        "isInCancelationPeriod": {
          "description": "If waiver period is enabled - donates whether the user is still in the cancelation window",
          "type": "boolean"
        },
        "ppvProductCode": {
          "description": "The PPV product code",
          "type": "string"
        }
      }
    },
    "KalturaPPVItemPriceDetails": {
      "description": "PPV item price details",
      "properties": {
        "ppvModuleId": {
          "description": "The associated PPV module identifier",
          "type": "string"
        },
        "isSubscriptionOnly": {
          "description": "Denotes whether this object is available only as part of a subscription or can be sold separately",
          "type": "boolean"
        },
        "price": {
          "$ref": "#/definitions/KalturaPrice"
        },
        "fullPrice": {
          "$ref": "#/definitions/KalturaPrice"
        },
        "purchaseStatus": {
          "description": "Enum Type: `KalturaPurchaseStatus`\n\nSubscription purchase status",
          "type": "string",
          "enum": [
            "ppv_purchased",
            "free",
            "for_purchase_subscription_only",
            "subscription_purchased",
            "for_purchase",
            "subscription_purchased_wrong_currency",
            "pre_paid_purchased",
            "geo_commerce_blocked",
            "entitled_to_preview_module",
            "first_device_limitation",
            "collection_purchased",
            "user_suspended",
            "not_for_purchase"
          ],
          "x-enumLabels": [
            "PPV_PURCHASED",
            "FREE",
            "FOR_PURCHASE_SUBSCRIPTION_ONLY",
            "SUBSCRIPTION_PURCHASED",
            "FOR_PURCHASE",
            "SUBSCRIPTION_PURCHASED_WRONG_CURRENCY",
            "PRE_PAID_PURCHASED",
            "GEO_COMMERCE_BLOCKED",
            "ENTITLED_TO_PREVIEW_MODULE",
            "FIRST_DEVICE_LIMITATION",
            "COLLECTION_PURCHASED",
            "USER_SUSPENDED",
            "NOT_FOR_PURCHASE"
          ]
        },
        "subscriptionId": {
          "description": "The identifier of the relevant subscription",
          "type": "string"
        },
        "collectionId": {
          "description": "The identifier of the relevant collection",
          "type": "string"
        },
        "prePaidId": {
          "description": "The identifier of the relevant pre paid",
          "type": "string"
        },
        "ppvDescriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          }
        },
        "purchaseUserId": {
          "description": "If the item already purchased - the identifier of the user (in the household) who purchased this item",
          "type": "string"
        },
        "purchasedMediaFileId": {
          "description": "If the item already purchased - the identifier of the purchased file",
          "type": "integer"
        },
        "relatedMediaFileIds": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          }
        },
        "startDate": {
          "description": "If the item already purchased - since when the user can start watching the item",
          "type": "integer"
        },
        "endDate": {
          "description": "If the item already purchased - until when the user can watch the item",
          "type": "integer"
        },
        "discountEndDate": {
          "description": "Discount end date",
          "type": "integer"
        },
        "firstDeviceName": {
          "description": "If the item already purchased and played - the name of the device on which it was first played",
          "type": "string"
        },
        "isInCancelationPeriod": {
          "description": "If waiver period is enabled - donates whether the user is still in the cancelation window",
          "type": "boolean"
        },
        "ppvProductCode": {
          "description": "The PPV product code",
          "type": "string"
        }
      }
    },
    "KalturaItemPrice": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaProductPrice"
        }
      ],
      "description": "PPV price details",
      "properties": {
        "fileId": {
          "description": "Media file identifier",
          "type": "integer"
        },
        "ppvPriceDetails": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaPPVItemPriceDetails"
          }
        }
      }
    },
    "KalturaSubscriptionPrice": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaProductPrice"
        }
      ],
      "description": "Subscription price details",
      "properties": {}
    },
    "KalturaHouseholdPaymentGateway": {
      "properties": {
        "id": {
          "readOnly": true,
          "description": "payment gateway id",
          "type": "integer"
        },
        "name": {
          "description": "payment gateway name",
          "type": "string"
        },
        "isDefault": {
          "description": "Payment gateway default (true/false)",
          "type": "boolean"
        },
        "selectedBy": {
          "description": "Enum Type: `KalturaHouseholdPaymentGatewaySelectedBy`\n\ndistinction payment gateway selected by account or household",
          "type": "string",
          "enum": [
            "none",
            "account",
            "household"
          ],
          "x-enumLabels": [
            "NONE",
            "ACCOUNT",
            "HOUSEHOLD"
          ]
        }
      }
    },
    "KalturaHouseholdPaymentGatewayListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of household payment gateways.",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaHouseholdPaymentGateway"
          }
        }
      }
    },
    "KalturaPaymentGatewayBaseProfile": {
      "description": "Payment gateway base profile",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "payment gateway id",
          "type": "integer"
        },
        "name": {
          "description": "payment gateway name",
          "type": "string"
        },
        "isDefault": {
          "description": "Payment gateway default (true/false)",
          "type": "boolean"
        },
        "selectedBy": {
          "description": "Enum Type: `KalturaHouseholdPaymentGatewaySelectedBy`\n\ndistinction payment gateway selected by account or household",
          "type": "string",
          "enum": [
            "none",
            "account",
            "household"
          ],
          "x-enumLabels": [
            "NONE",
            "ACCOUNT",
            "HOUSEHOLD"
          ]
        }
      }
    },
    "KalturaPaymentGatewayProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPaymentGatewayBaseProfile"
        }
      ],
      "description": "Payment gateway profile",
      "properties": {
        "isActive": {
          "description": "Payment gateway is active status",
          "type": "integer"
        },
        "adapterUrl": {
          "description": "Payment gateway adapter URL",
          "type": "string"
        },
        "transactUrl": {
          "description": "Payment gateway transact URL",
          "type": "string"
        },
        "statusUrl": {
          "description": "Payment gateway status URL",
          "type": "string"
        },
        "renewUrl": {
          "description": "Payment gateway renew URL",
          "type": "string"
        },
        "paymentGatewayeSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          }
        },
        "externalIdentifier": {
          "description": "Payment gateway external identifier",
          "type": "string"
        },
        "pendingInterval": {
          "description": "Pending Interval in minutes",
          "type": "integer"
        },
        "pendingRetries": {
          "description": "Pending Retries",
          "type": "integer"
        },
        "sharedSecret": {
          "description": "Shared Secret",
          "type": "string"
        },
        "renewIntervalMinutes": {
          "description": "Renew Interval Minutes",
          "type": "integer"
        },
        "renewStartMinutes": {
          "description": "Renew Start Minutes",
          "type": "integer"
        }
      }
    },
    "KalturaPaymentGatewayProfileListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "PaymentGatewayProfile list",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaPaymentGatewayProfile"
          }
        }
      }
    },
    "KalturaParentalRule": {
      "description": "Parental rule",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Unique parental rule identifier",
          "type": "integer"
        },
        "name": {
          "description": "Rule display name",
          "type": "string"
        },
        "description": {
          "description": "Explanatory description",
          "type": "string"
        },
        "order": {
          "description": "Rule order within the full list of rules",
          "type": "integer"
        },
        "mediaTag": {
          "description": "Media asset tag ID to in which to look for corresponding trigger values",
          "type": "integer"
        },
        "epgTag": {
          "description": "EPG asset tag ID to in which to look for corresponding trigger values",
          "type": "integer"
        },
        "blockAnonymousAccess": {
          "description": "Content that correspond to this rule is not available for guests",
          "type": "boolean"
        },
        "ruleType": {
          "description": "Enum Type: `KalturaParentalRuleType`\n\nRule type – Movies, TV series or both",
          "type": "string",
          "enum": [
            "ALL",
            "MOVIES",
            "TV_SERIES"
          ],
          "x-enumLabels": [
            "ALL",
            "MOVIES",
            "TV_SERIES"
          ]
        },
        "mediaTagValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          }
        },
        "epgTagValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          }
        },
        "isDefault": {
          "description": "Is the rule the default rule of the account",
          "type": "boolean"
        },
        "origin": {
          "description": "Enum Type: `KalturaRuleLevel`\n\nWhere was this rule defined account, household or user",
          "type": "string",
          "enum": [
            "invalid",
            "user",
            "household",
            "account"
          ],
          "x-enumLabels": [
            "INVALID",
            "USER",
            "HOUSEHOLD",
            "ACCOUNT"
          ]
        }
      }
    },
    "KalturaParentalRuleListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "ParentalRules list",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaParentalRule"
          }
        }
      }
    },
    "KalturaRecording": {
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Kaltura unique ID representing the recording identifier",
          "type": "integer"
        },
        "status": {
          "readOnly": true,
          "description": "Enum Type: `KalturaRecordingStatus`\n\nRecording state: scheduled/recording/recorded/canceled/failed/does_not_exists/deleted",
          "type": "string",
          "enum": [
            "SCHEDULED",
            "RECORDING",
            "RECORDED",
            "CANCELED",
            "FAILED",
            "DELETED"
          ],
          "x-enumLabels": [
            "SCHEDULED",
            "RECORDING",
            "RECORDED",
            "CANCELED",
            "FAILED",
            "DELETED"
          ]
        },
        "assetId": {
          "description": "Kaltura unique ID representing the program identifier",
          "type": "integer"
        },
        "type": {
          "description": "Enum Type: `KalturaRecordingType`\n\nRecording Type: single/season/series",
          "type": "string",
          "enum": [
            "SINGLE",
            "SEASON",
            "SERIES"
          ],
          "x-enumLabels": [
            "SINGLE",
            "SEASON",
            "SERIES"
          ]
        },
        "viewableUntilDate": {
          "description": "Specifies until when the recording is available for viewing. Date and time represented as epoch.",
          "type": "integer"
        },
        "isProtected": {
          "description": "Specifies whether or not the recording is protected",
          "type": "boolean"
        },
        "createDate": {
          "description": "Specifies when was the recording created. Date and time represented as epoch.",
          "type": "integer"
        },
        "updateDate": {
          "description": "Specifies when was the recording last updated. Date and time represented as epoch.",
          "type": "integer"
        }
      }
    },
    "KalturaRecordingListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Recordings info wrapper",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaRecording"
          }
        }
      }
    },
    "KalturaBillingTransaction": {
      "description": "Billing Transaction",
      "properties": {
        "recieptCode": {
          "readOnly": true,
          "description": "Reciept Code",
          "type": "string"
        },
        "purchasedItemName": {
          "readOnly": true,
          "description": "Purchased Item Name",
          "type": "string"
        },
        "purchasedItemCode": {
          "readOnly": true,
          "description": "Purchased Item Code",
          "type": "string"
        },
        "itemType": {
          "readOnly": true,
          "description": "Enum Type: `KalturaBillingItemsType`\n\nItem Type",
          "type": "string",
          "enum": [
            "unknown",
            "ppv",
            "subscription",
            "pre_paid",
            "pre_paid_expired",
            "collection"
          ],
          "x-enumLabels": [
            "UNKNOWN",
            "PPV",
            "SUBSCRIPTION",
            "PRE_PAID",
            "PRE_PAID_EXPIRED",
            "COLLECTION"
          ]
        },
        "billingAction": {
          "readOnly": true,
          "description": "Enum Type: `KalturaBillingAction`\n\nBilling Action",
          "type": "string",
          "enum": [
            "unknown",
            "purchase",
            "renew_payment",
            "renew_canceled_subscription",
            "cancel_subscription_order",
            "subscription_date_changed"
          ],
          "x-enumLabels": [
            "UNKNOWN",
            "PURCHASE",
            "RENEW_PAYMENT",
            "RENEW_CANCELED_SUBSCRIPTION",
            "CANCEL_SUBSCRIPTION_ORDER",
            "SUBSCRIPTION_DATE_CHANGED"
          ]
        },
        "price": {
          "$ref": "#/definitions/KalturaPrice"
        },
        "actionDate": {
          "readOnly": true,
          "description": "Action Date",
          "type": "integer"
        },
        "startDate": {
          "readOnly": true,
          "description": "Start Date",
          "type": "integer"
        },
        "endDate": {
          "readOnly": true,
          "description": "End Date",
          "type": "integer"
        },
        "paymentMethod": {
          "readOnly": true,
          "description": "Enum Type: `KalturaPaymentMethodType`\n\nPayment Method",
          "type": "string",
          "enum": [
            "unknown",
            "credit_card",
            "sms",
            "pay_pal",
            "debit_card",
            "ideal",
            "incaso",
            "gift",
            "visa",
            "master_card",
            "in_app",
            "m1",
            "change_subscription",
            "offline"
          ],
          "x-enumLabels": [
            "UNKNOWN",
            "CREDIT_CARD",
            "SMS",
            "PAY_PAL",
            "DEBIT_CARD",
            "IDEAL",
            "INCASO",
            "GIFT",
            "VISA",
            "MASTER_CARD",
            "IN_APP",
            "M1",
            "CHANGE_SUBSCRIPTION",
            "OFFLINE"
          ]
        },
        "paymentMethodExtraDetails": {
          "readOnly": true,
          "description": "Payment Method Extra Details",
          "type": "string"
        },
        "isRecurring": {
          "readOnly": true,
          "description": "Is Recurring",
          "type": "boolean"
        },
        "billingProviderRef": {
          "readOnly": true,
          "description": "Billing Provider Ref",
          "type": "integer"
        },
        "purchaseId": {
          "readOnly": true,
          "description": "Purchase ID",
          "type": "integer"
        },
        "remarks": {
          "readOnly": true,
          "description": "Remarks",
          "type": "string"
        }
      }
    },
    "KalturaBillingTransactionListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Billing Transactions",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaBillingTransaction"
          }
        }
      }
    },
    "KalturaPermissionItem": {
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Permission item identifier",
          "type": "integer"
        },
        "name": {
          "description": "Permission item name",
          "type": "string"
        }
      }
    },
    "KalturaPermission": {
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Permission identifier",
          "type": "integer"
        },
        "name": {
          "description": "Permission name",
          "type": "string"
        },
        "permissionItems": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaPermissionItem"
          }
        }
      }
    },
    "KalturaUserRole": {
      "properties": {
        "id": {
          "readOnly": true,
          "description": "User role identifier",
          "type": "integer"
        },
        "name": {
          "description": "User role name",
          "type": "string"
        },
        "permissions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaPermission"
          }
        }
      }
    },
    "KalturaUserRoleListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "User-roles list",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaUserRole"
          }
        }
      }
    },
    "KalturaGroupPermission": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermission"
        }
      ],
      "properties": {
        "group": {
          "description": "Permission identifier",
          "type": "string"
        }
      }
    },
    "KalturaApiParameterPermissionItem": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItem"
        }
      ],
      "properties": {
        "object": {
          "description": "API object name",
          "type": "string"
        },
        "parameter": {
          "description": "API parameter name",
          "type": "string"
        },
        "action": {
          "description": "Enum Type: `KalturaApiParameterPermissionItemAction`\n\nAPI action type",
          "type": "string",
          "enum": [
            "READ",
            "INSERT",
            "UPDATE",
            "USAGE"
          ],
          "x-enumLabels": [
            "READ",
            "INSERT",
            "UPDATE",
            "USAGE"
          ]
        }
      }
    },
    "KalturaApiActionPermissionItem": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPermissionItem"
        }
      ],
      "properties": {
        "service": {
          "description": "API service name",
          "type": "string"
        },
        "action": {
          "description": "API action name",
          "type": "string"
        }
      }
    },
    "KalturaInboxMessage": {
      "properties": {
        "id": {
          "readOnly": true,
          "description": "message id",
          "type": "string"
        },
        "message": {
          "description": "message",
          "type": "string"
        },
        "status": {
          "readOnly": true,
          "description": "Enum Type: `KalturaInboxMessageStatus`\n\nStatus",
          "type": "string",
          "enum": [
            "Unread",
            "Read",
            "Deleted"
          ],
          "x-enumLabels": [
            "UNREAD",
            "READ",
            "DELETED"
          ]
        },
        "type": {
          "description": "Enum Type: `KalturaInboxMessageType`\n\nType",
          "type": "string",
          "enum": [
            "SystemAnnouncement",
            "Followed"
          ],
          "x-enumLabels": [
            "SYSTEMANNOUNCEMENT",
            "FOLLOWED"
          ]
        },
        "createdAt": {
          "readOnly": true,
          "description": "Created at",
          "type": "integer"
        },
        "url": {
          "description": "url",
          "type": "string"
        }
      }
    },
    "KalturaInboxMessageListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of inbox message.",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaInboxMessage"
          }
        }
      }
    },
    "KalturaFollowDataBase": {
      "properties": {
        "announcementId": {
          "readOnly": true,
          "description": "Announcement Id",
          "type": "integer"
        },
        "status": {
          "readOnly": true,
          "description": "Status",
          "type": "integer"
        },
        "title": {
          "readOnly": true,
          "description": "Title",
          "type": "string"
        },
        "timestamp": {
          "readOnly": true,
          "description": "Timestamp",
          "type": "integer"
        },
        "followPhrase": {
          "readOnly": true,
          "description": "Follow Phrase",
          "type": "string"
        }
      }
    },
    "KalturaFollowTvSeries": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFollowDataBase"
        }
      ],
      "properties": {
        "assetId": {
          "readOnly": true,
          "description": "Asset Id",
          "type": "integer"
        }
      }
    },
    "KalturaFollowTvSeriesListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of message follow data.",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaFollowTvSeries"
          }
        }
      }
    },
    "KalturaAnnouncementListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of message announcements from DB.",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaAnnouncement"
          }
        }
      }
    },
    "KalturaFeed": {
      "properties": {
        "assetId": {
          "readOnly": true,
          "type": "integer"
        }
      }
    },
    "KalturaPersonalFeed": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFeed"
        }
      ],
      "properties": {}
    },
    "KalturaPersonalFeedListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of message follow data.",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaPersonalFeed"
          }
        }
      }
    },
    "KalturaTopic": {
      "properties": {
        "id": {
          "readOnly": true,
          "description": "message id",
          "type": "string"
        },
        "name": {
          "description": "message",
          "type": "string"
        },
        "subscribersAmount": {
          "description": "message",
          "type": "string"
        },
        "automaticIssueNotification": {
          "description": "Enum Type: `KalturaTopicAutomaticIssueNotification`\n\nautomaticIssueNotification",
          "type": "string",
          "enum": [
            "Inherit",
            "Yes",
            "No"
          ],
          "x-enumLabels": [
            "INHERIT",
            "YES",
            "NO"
          ]
        },
        "lastMessageSentDateSec": {
          "description": "lastMessageSentDateSec",
          "type": "integer"
        }
      }
    },
    "KalturaTopicListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of inbox message.",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaTopic"
          }
        }
      }
    },
    "KalturaProductPriceListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Prices list",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaProductPrice"
          }
        }
      }
    },
    "KalturaItemPriceListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "ItemPrice list",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaItemPrice"
          }
        }
      }
    },
    "KalturaBaseChannel": {
      "description": "Slim channel",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Unique identifier for the channel",
          "type": "integer"
        },
        "name": {
          "description": "Channel name",
          "type": "string"
        }
      }
    },
    "KalturaChannel": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaBaseChannel"
        }
      ],
      "description": "Channel details",
      "properties": {
        "description": {
          "description": "Cannel description",
          "type": "string"
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaMediaImage"
          }
        },
        "assetTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          }
        },
        "filterExpression": {
          "description": "Filter expression",
          "type": "string"
        },
        "isActive": {
          "description": "active status",
          "type": "boolean"
        },
        "order": {
          "description": "Enum Type: `KalturaAssetOrderBy`\n\nChannel order",
          "type": "string",
          "enum": [
            "RELEVANCY_DESC",
            "NAME_ASC",
            "NAME_DESC",
            "VIEWS_DESC",
            "RATINGS_DESC",
            "VOTES_DESC",
            "START_DATE_DESC",
            "START_DATE_ASC",
            "LIKES_DESC"
          ],
          "x-enumLabels": [
            "RELEVANCY_DESC",
            "NAME_ASC",
            "NAME_DESC",
            "VIEWS_DESC",
            "RATINGS_DESC",
            "VOTES_DESC",
            "START_DATE_DESC",
            "START_DATE_ASC",
            "LIKES_DESC"
          ]
        }
      }
    },
    "KalturaPriceDetails": {
      "description": "Price details",
      "properties": {
        "id": {
          "description": "The price code identifier",
          "type": "integer"
        },
        "name": {
          "description": "The price code name",
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/KalturaPrice"
        },
        "descriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          }
        }
      }
    },
    "KalturaDiscountModule": {
      "description": "Discount module",
      "properties": {
        "percent": {
          "description": "The discount percentage",
          "type": "number"
        },
        "startDate": {
          "description": "The first date the discount is available",
          "type": "integer"
        },
        "endDate": {
          "description": "The last date the discount is available",
          "type": "integer"
        }
      }
    },
    "KalturaCouponsGroup": {
      "description": "Coupons group details",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Coupon group identifier",
          "type": "string"
        },
        "name": {
          "description": "Coupon group name",
          "type": "string"
        },
        "descriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          }
        },
        "startDate": {
          "description": "The first date the coupons in this coupons group are valid",
          "type": "integer"
        },
        "endDate": {
          "description": "The last date the coupons in this coupons group are valid",
          "type": "integer"
        },
        "maxUsesNumber": {
          "description": "Maximum number of uses for each coupon in the group",
          "type": "integer"
        },
        "maxUsesNumberOnRenewableSub": {
          "description": "Maximum number of uses for each coupon in the group on a renewable subscription",
          "type": "integer"
        }
      }
    },
    "KalturaUsageModule": {
      "description": "Pricing usage module",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Usage module identifier",
          "type": "integer"
        },
        "name": {
          "description": "Usage module name",
          "type": "string"
        },
        "maxViewsNumber": {
          "description": "The maximum number of times an item in this usage module can be viewed",
          "type": "integer"
        },
        "viewLifeCycle": {
          "description": "The amount time an item is available for viewing since a user started watching the item",
          "type": "integer"
        },
        "fullLifeCycle": {
          "description": "The amount time an item is available for viewing",
          "type": "integer"
        },
        "couponId": {
          "description": "Identifies a specific coupon linked to this object",
          "type": "integer"
        },
        "waiverPeriod": {
          "description": "Time period during which the end user can waive his rights to cancel a purchase. When the time period is passed, the purchase can no longer be cancelled",
          "type": "integer"
        },
        "isWaiverEnabled": {
          "description": "Indicates whether or not the end user has the right to waive his rights to cancel a purchase",
          "type": "boolean"
        },
        "isOfflinePlayback": {
          "description": "Indicates that usage is targeted for offline playback",
          "type": "boolean"
        }
      }
    },
    "KalturaPricePlan": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaUsageModule"
        }
      ],
      "description": "Price plan",
      "properties": {
        "isRenewable": {
          "description": "Denotes whether or not this object can be renewed",
          "type": "boolean"
        },
        "renewalsNumber": {
          "description": "Defines the number of times the module will be renewed (for the life_cycle period)",
          "type": "integer"
        },
        "priceId": {
          "description": "Unique identifier associated with this object&#39;s price",
          "type": "integer"
        },
        "discountId": {
          "description": "The discount module identifier of the price plan",
          "type": "integer"
        }
      }
    },
    "KalturaPreviewModule": {
      "description": "Preview module",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Preview module identifier",
          "type": "integer"
        },
        "name": {
          "description": "Preview module name",
          "type": "string"
        },
        "lifeCycle": {
          "description": "Preview module life cycle - for how long the preview module is active",
          "type": "integer"
        },
        "nonRenewablePeriod": {
          "description": "The time you can&#39;t buy the item to which the preview module is assigned to again",
          "type": "integer"
        }
      }
    },
    "KalturaSubscription": {
      "description": "Subscription details",
      "properties": {
        "id": {
          "description": "Subscription identifier",
          "type": "string"
        },
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaBaseChannel"
          }
        },
        "startDate": {
          "description": "The first date the subscription is available for purchasing",
          "type": "integer"
        },
        "endDate": {
          "description": "The last date the subscription is available for purchasing",
          "type": "integer"
        },
        "fileTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          }
        },
        "isRenewable": {
          "description": "Denotes whether or not this subscription can be renewed",
          "type": "boolean"
        },
        "renewalsNumber": {
          "description": "Defines the number of times this subscription will be renewed",
          "type": "integer"
        },
        "isInfiniteRenewal": {
          "description": "Indicates whether the subscription will renew forever",
          "type": "boolean"
        },
        "price": {
          "$ref": "#/definitions/KalturaPriceDetails"
        },
        "discountModule": {
          "$ref": "#/definitions/KalturaDiscountModule"
        },
        "couponsGroup": {
          "$ref": "#/definitions/KalturaCouponsGroup"
        },
        "names": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          }
        },
        "descriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          }
        },
        "mediaId": {
          "description": "Identifier of the media associated with the subscription",
          "type": "integer"
        },
        "prorityInOrder": {
          "description": "Subscription order (when returned in methods that retrieve subscriptions)",
          "type": "integer"
        },
        "productCode": {
          "description": "Product code for the subscription",
          "type": "string"
        },
        "pricePlans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaPricePlan"
          }
        },
        "previewModule": {
          "$ref": "#/definitions/KalturaPreviewModule"
        },
        "householdLimitationsId": {
          "description": "The household limitation module identifier associated with this subscription",
          "type": "integer"
        },
        "gracePeriodMinutes": {
          "description": "The subscription grace period in minutes",
          "type": "integer"
        },
        "premiumServices": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaPremiumService"
          }
        },
        "maxViewsNumber": {
          "description": "The maximum number of times an item in this usage module can be viewed",
          "type": "integer"
        },
        "viewLifeCycle": {
          "description": "The amount time an item is available for viewing since a user started watching the item",
          "type": "integer"
        },
        "waiverPeriod": {
          "description": "Time period during which the end user can waive his rights to cancel a purchase. When the time period is passed, the purchase can no longer be cancelled",
          "type": "integer"
        },
        "isWaiverEnabled": {
          "description": "Indicates whether or not the end user has the right to waive his rights to cancel a purchase",
          "type": "boolean"
        },
        "userTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaOTTUserType"
          }
        }
      }
    },
    "KalturaSubscriptionListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Subscriptions list",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaSubscription"
          }
        }
      }
    },
    "KalturaProductsPriceListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Prices list",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaProductPrice"
          }
        }
      }
    },
    "KalturaEntitlement": {
      "description": "Entitlement",
      "properties": {
        "type": {
          "readOnly": true,
          "description": "Enum Type: `KalturaTransactionType`\n\nEntitlement type",
          "type": "string",
          "enum": [
            "ppv",
            "subscription",
            "collection"
          ],
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "COLLECTION"
          ]
        },
        "entitlementId": {
          "readOnly": true,
          "description": "Entitlement identifier",
          "type": "string"
        },
        "currentUses": {
          "readOnly": true,
          "description": "The current number of uses",
          "type": "integer"
        },
        "endDate": {
          "readOnly": true,
          "description": "The end date of the entitlement",
          "type": "integer"
        },
        "currentDate": {
          "readOnly": true,
          "description": "Current date",
          "type": "integer"
        },
        "lastViewDate": {
          "readOnly": true,
          "description": "The last date the item was viewed",
          "type": "integer"
        },
        "purchaseDate": {
          "readOnly": true,
          "description": "Purchase date",
          "type": "integer"
        },
        "purchaseId": {
          "readOnly": true,
          "description": "Purchase identifier (for subscriptions and collections only)",
          "type": "integer"
        },
        "paymentMethod": {
          "readOnly": true,
          "description": "Enum Type: `KalturaPaymentMethodType`\n\nPayment Method",
          "type": "string",
          "enum": [
            "unknown",
            "credit_card",
            "sms",
            "pay_pal",
            "debit_card",
            "ideal",
            "incaso",
            "gift",
            "visa",
            "master_card",
            "in_app",
            "m1",
            "change_subscription",
            "offline"
          ],
          "x-enumLabels": [
            "UNKNOWN",
            "CREDIT_CARD",
            "SMS",
            "PAY_PAL",
            "DEBIT_CARD",
            "IDEAL",
            "INCASO",
            "GIFT",
            "VISA",
            "MASTER_CARD",
            "IN_APP",
            "M1",
            "CHANGE_SUBSCRIPTION",
            "OFFLINE"
          ]
        },
        "deviceUdid": {
          "readOnly": true,
          "description": "The UDID of the device from which the purchase was made",
          "type": "string"
        },
        "deviceName": {
          "readOnly": true,
          "description": "The name of the device from which the purchase was made",
          "type": "string"
        },
        "isCancelationWindowEnabled": {
          "readOnly": true,
          "description": "Indicates whether a cancelation window period is enabled",
          "type": "boolean"
        },
        "maxUses": {
          "readOnly": true,
          "description": "The maximum number of uses available for this item (only for subscription and PPV)",
          "type": "integer"
        },
        "nextRenewalDate": {
          "readOnly": true,
          "description": "The date of the next renewal (only for subscription)",
          "type": "integer"
        },
        "isRenewableForPurchase": {
          "readOnly": true,
          "description": "Indicates whether the subscription is renewable in this purchase (only for subscription)",
          "type": "boolean"
        },
        "isRenewable": {
          "readOnly": true,
          "description": "Indicates whether a subscription is renewable (only for subscription)",
          "type": "boolean"
        },
        "mediaFileId": {
          "readOnly": true,
          "description": "Media file identifier (only for PPV)",
          "type": "integer"
        },
        "mediaId": {
          "readOnly": true,
          "description": "Media identifier (only for PPV)",
          "type": "integer"
        },
        "isInGracePeriod": {
          "readOnly": true,
          "description": "Indicates whether the user is currently in his grace period entitlement",
          "type": "boolean"
        }
      }
    },
    "KalturaEntitlementListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Entitlements list",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaEntitlement"
          }
        }
      }
    },
    "KalturaHomeNetwork": {
      "description": "Home network details",
      "properties": {
        "externalId": {
          "description": "Home network identifier",
          "type": "string"
        },
        "name": {
          "description": "Home network name",
          "type": "string"
        },
        "description": {
          "description": "Home network description",
          "type": "string"
        },
        "isActive": {
          "description": "Is home network is active",
          "type": "boolean"
        }
      }
    },
    "KalturaHomeNetworkListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Home networks",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaHomeNetwork"
          }
        }
      }
    },
    "KalturaFavorite": {
      "description": "Favorite details",
      "properties": {
        "assetId": {
          "description": "AssetInfo Model",
          "type": "integer"
        },
        "extraData": {
          "description": "Extra Value",
          "type": "string"
        },
        "createDate": {
          "readOnly": true,
          "description": "Specifies when was the favorite created. Date and time represented as epoch.",
          "type": "integer"
        }
      }
    },
    "KalturaFavoriteListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Favorite list",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaFavorite"
          }
        }
      }
    },
    "KalturaOTTUserListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Users list",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaOTTUser"
          }
        }
      }
    },
    "KalturaAssetStatisticsListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "List of assets statistics",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaAssetStatistics"
          }
        }
      }
    },
    "KalturaSlimAssetInfoWrapper": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Slim assets wrapper",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaBaseAssetInfo"
          }
        }
      }
    },
    "KalturaAssetHistory": {
      "description": "Watch history asset info",
      "properties": {
        "assetId": {
          "readOnly": true,
          "description": "Asset identifier",
          "type": "integer"
        },
        "position": {
          "readOnly": true,
          "description": "Position in seconds of the relevant asset",
          "type": "integer"
        },
        "duration": {
          "readOnly": true,
          "description": "Duration in seconds of the relevant asset",
          "type": "integer"
        },
        "watchedDate": {
          "readOnly": true,
          "description": "The date when the media was last watched",
          "type": "integer"
        },
        "finishedWatching": {
          "readOnly": true,
          "description": "Boolean which specifies whether the user finished watching the movie or not",
          "type": "boolean"
        }
      }
    },
    "KalturaAssetHistoryListResponse": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaListResponse"
        }
      ],
      "description": "Watch history asset wrapper",
      "properties": {
        "objects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaAssetHistory"
          }
        }
      }
    },
    "KalturaAppToken": {
      "description": "Application token",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "The id of the application token",
          "type": "string"
        },
        "expiry": {
          "description": "Expiry time of current token (unix timestamp in seconds)",
          "type": "integer"
        },
        "partnerId": {
          "description": "Partner identifier",
          "type": "integer"
        },
        "sessionDuration": {
          "description": "Expiry duration of KS (Kaltura Session) that created using the current token (in seconds)",
          "type": "integer"
        },
        "hashType": {
          "description": "Enum Type: `KalturaAppTokenHashType`\n\nThe hash type of the token",
          "type": "string",
          "enum": [
            "SHA1",
            "SHA256",
            "SHA512",
            "MD5"
          ],
          "x-enumLabels": [
            "SHA1",
            "SHA256",
            "SHA512",
            "MD5"
          ]
        },
        "sessionPrivileges": {
          "description": "Comma separated privileges to be applied on KS (Kaltura Session) that created using the current token",
          "type": "string"
        },
        "sessionType": {
          "description": "Enum Type: `KalturaSessionType`\n\nType of KS (Kaltura Session) that created using the current token",
          "type": "integer",
          "enum": [
            0,
            2
          ],
          "x-enumLabels": [
            "USER",
            "ADMIN"
          ]
        },
        "status": {
          "readOnly": true,
          "description": "Enum Type: `KalturaAppTokenStatus`\n\nApplication token status",
          "type": "integer",
          "enum": [
            0,
            1,
            2
          ],
          "x-enumLabels": [
            "DELETED",
            "DISABLED",
            "ACTIVE"
          ]
        },
        "token": {
          "description": "The application token",
          "type": "string"
        },
        "sessionUserId": {
          "description": "User id of KS (Kaltura Session) that created using the current token",
          "type": "string"
        }
      }
    },
    "KalturaSession": {
      "description": "Kaltura Session",
      "properties": {
        "ks": {
          "description": "KS",
          "type": "string"
        },
        "sessionType": {
          "description": "Enum Type: `KalturaSessionType`\n\nSession type",
          "type": "integer",
          "enum": [
            0,
            2
          ],
          "x-enumLabels": [
            "USER",
            "ADMIN"
          ]
        },
        "partnerId": {
          "description": "Partner identifier",
          "type": "integer"
        },
        "userId": {
          "description": "User identifier",
          "type": "string"
        },
        "expiry": {
          "description": "Expiry",
          "type": "integer"
        },
        "privileges": {
          "description": "Privileges",
          "type": "string"
        },
        "udid": {
          "description": "udid",
          "type": "string"
        }
      }
    },
    "KalturaSessionInfo": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSession"
        }
      ],
      "description": "Kaltura Session",
      "properties": {}
    },
    "KalturaCatalogWithHolder": {
      "description": "Holder object for Catalog With enum",
      "properties": {
        "type": {
          "description": "Enum Type: `KalturaCatalogWith`",
          "type": "string",
          "enum": [
            "images",
            "files",
            "stats"
          ],
          "x-enumLabels": [
            "IMAGES",
            "FILES",
            "STATS"
          ]
        }
      }
    },
    "KalturaAssetFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {}
    },
    "KalturaBundleFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "properties": {
        "idEqual": {
          "description": "Bundle Id.",
          "type": "integer"
        },
        "typeIn": {
          "description": "Comma separated list of asset types to search within. \r\n            Possible values: 0 – EPG linear programs entries, any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted – all types should be included.",
          "type": "string"
        },
        "bundleTypeEqual": {
          "description": "Enum Type: `KalturaBundleType`\n\nbundleType - possible values: Subscription or Collection",
          "type": "string",
          "enum": [
            "subscription",
            "collection"
          ],
          "x-enumLabels": [
            "SUBSCRIPTION",
            "COLLECTION"
          ]
        }
      }
    },
    "KalturaChannelExternalFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "properties": {
        "idEqual": {
          "description": "External Channel Id.",
          "type": "integer"
        },
        "utcOffsetEqual": {
          "description": "UtcOffsetEqual",
          "type": "string"
        },
        "freeText": {
          "description": "FreeTextEqual",
          "type": "string"
        }
      }
    },
    "KalturaChannelFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "properties": {
        "idEqual": {
          "description": "Channel Id",
          "type": "integer"
        },
        "kSql": {
          "type": "string"
        }
      }
    },
    "KalturaRelatedFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "properties": {
        "kSql": {
          "description": "Search assets using dynamic criteria. Provided collection of nested expressions with key, comparison operators, value, and logical conjunction.\r\n            Possible keys: any Tag or Meta defined in the system and the following reserved keys: start_date, end_date. \r\n            epg_id, media_id - for specific asset IDs.\r\n            geo_block - only valid value is &quot;true&quot;: When enabled, only assets that are not restriced to the user by geo-block rules will return.\r\n            parental_rules - only valid value is &quot;true&quot;: When enabled, only assets that the user doesn&#39;t need to provide PIN code will return.\r\n            epg_channel_id – the channel identifier of the EPG program.\r\n            entitled_assets - valid values: &quot;free&quot;, &quot;entitled&quot;, &quot;both&quot;. free - gets only free to watch assets. entitled - only those that the user is implicitly entitled to watch.\r\n            Comparison operators: for numerical fields =, &gt;, &gt;=, &lt;, &lt;=, : (in). For alpha-numerical fields =, != (not), ~ (like), !~, ^ (starts with). Logical conjunction: and, or. \r\n            Search values are limited to 20 characters each.\r\n            (maximum length of entire filter is 1024 characters)",
          "type": "string"
        },
        "idEqual": {
          "description": "the ID of the asset for which to return related assets",
          "type": "string"
        },
        "typeIn": {
          "description": "Comma separated list of asset types to search within. \r\n            Possible values: 0 – EPG linear programs entries, any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted – all types should be included.",
          "type": "string"
        }
      }
    },
    "KalturaRelatedExternalFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "properties": {
        "idEqual": {
          "description": "the External ID of the asset for which to return related assets",
          "type": "integer"
        },
        "typeIn": {
          "description": "Comma separated list of asset types to search within. \r\n            Possible values: 0 – EPG linear programs entries, any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted – all types should be included.",
          "type": "string"
        },
        "utcOffsetEqual": {
          "description": "UtcOffsetEqual",
          "type": "integer"
        },
        "freeText": {
          "description": "FreeText",
          "type": "string"
        }
      }
    },
    "KalturaSearchAssetFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "properties": {
        "kSql": {
          "description": "Search assets using dynamic criteria. Provided collection of nested expressions with key, comparison operators, value, and logical conjunction.\r\n            Possible keys: any Tag or Meta defined in the system and the following reserved keys: start_date, end_date. \r\n            epg_id, media_id - for specific asset IDs.\r\n            geo_block - only valid value is &quot;true&quot;: When enabled, only assets that are not restriced to the user by geo-block rules will return.\r\n            parental_rules - only valid value is &quot;true&quot;: When enabled, only assets that the user doesn&#39;t need to provide PIN code will return.\r\n            epg_channel_id – the channel identifier of the EPG program.\r\n            entitled_assets - valid values: &quot;free&quot;, &quot;entitled&quot;, &quot;both&quot;. free - gets only free to watch assets. entitled - only those that the user is implicitly entitled to watch.\r\n            Comparison operators: for numerical fields =, &gt;, &gt;=, &lt;, &lt;=, : (in). For alpha-numerical fields =, != (not), ~ (like), !~, ^ (starts with). Logical conjunction: and, or. \r\n            Search values are limited to 20 characters each.\r\n            (maximum length of entire filter is 1024 characters)",
          "type": "string"
        },
        "typeIn": {
          "description": "Comma separated list of asset types to search within. \r\n            Possible values: 0 – EPG linear programs entries, any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted – all types should be included.",
          "type": "string"
        },
        "idIn": {
          "description": "Comma separated list of EPG channel ids to search within.",
          "type": "string"
        }
      }
    },
    "KalturaSearchExternalFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaAssetFilter"
        }
      ],
      "properties": {
        "query": {
          "description": "Query",
          "type": "string"
        },
        "utcOffsetEqual": {
          "description": "UtcOffsetEqual",
          "type": "integer"
        },
        "typeIn": {
          "description": "Comma separated list of asset types to search within. \r\n            Possible values: 0 – EPG linear programs entries, any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted – all types should be included.",
          "type": "string"
        }
      }
    },
    "KalturaAssetFileContext": {
      "properties": {
        "viewLifeCycle": {
          "readOnly": true,
          "description": "viewLifeCycle",
          "type": "string"
        },
        "fullLifeCycle": {
          "readOnly": true,
          "description": "fullLifeCycle",
          "type": "string"
        },
        "isOfflinePlayBack": {
          "readOnly": true,
          "description": "isOfflinePlayBack",
          "type": "boolean"
        }
      }
    },
    "KalturaAssetStatisticsQuery": {
      "properties": {
        "assetIdIn": {
          "description": "Comma separated list of asset identifiers.",
          "type": "string"
        },
        "assetTypeEqual": {
          "description": "Enum Type: `KalturaAssetType`\n\nAsset type",
          "type": "string",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ]
        },
        "startDateGreaterThanOrEqual": {
          "description": "The beginning of the time window to get the statistics for (in epoch).",
          "type": "integer"
        },
        "endDateGreaterThanOrEqual": {
          "description": "/// The end of the time window to get the statistics for (in epoch).",
          "type": "integer"
        }
      }
    },
    "KalturaCDNPartnerSettings": {
      "properties": {
        "defaultAdapterId": {
          "description": "Default CDN adapter identifier",
          "type": "integer"
        },
        "defaultRecordingAdapterId": {
          "description": "Default recording CDN adapter identifier",
          "type": "integer"
        }
      }
    },
    "KalturaRegionFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "externalIdIn": {
          "description": "List of comma separated regions external identifiers",
          "type": "string"
        }
      }
    },
    "KalturaAssetCommentFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "assetIdEqual": {
          "description": "Asset Id",
          "type": "integer"
        },
        "assetTypeEqual": {
          "description": "Enum Type: `KalturaAssetType`\n\nAsset Type",
          "type": "string",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ]
        }
      }
    },
    "KalturaProductPriceFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "subscriptionIdIn": {
          "description": "Comma separated subscriptions identifiers",
          "type": "string"
        },
        "fileIdIn": {
          "description": "Comma separated media files identifiers",
          "type": "string"
        },
        "isLowest": {
          "description": "A flag that indicates if only the lowest price of an item should return",
          "type": "boolean"
        },
        "couponCodeEqual": {
          "description": "Discount coupon code",
          "type": "string"
        }
      }
    },
    "KalturaSeriesRecordingFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Filtering recordings",
      "properties": {}
    },
    "KalturaHouseholdQuota": {
      "properties": {
        "householdId": {
          "readOnly": true,
          "description": "Household identifier",
          "type": "integer"
        },
        "totalQuota": {
          "readOnly": true,
          "description": "Total quota that is allocated to the household",
          "type": "integer"
        },
        "availableQuota": {
          "readOnly": true,
          "description": "Available quota that household has remaining",
          "type": "integer"
        }
      }
    },
    "KalturaInboxMessageFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "typeIn": {
          "description": "List of inbox message types to search within.",
          "type": "string"
        },
        "createdAtGreaterThanOrEqual": {
          "description": "createdAtGreaterThanOrEqual",
          "type": "integer"
        },
        "createdAtLessThanOrEqual": {
          "description": "createdAtLessThanOrEqual",
          "type": "integer"
        }
      }
    },
    "KalturaMessageTemplate": {
      "properties": {
        "message": {
          "description": "The message template with placeholders",
          "type": "string"
        },
        "dateFormat": {
          "description": "Default date format for the date &amp; time entries used in the template",
          "type": "string"
        },
        "assetType": {
          "description": "Enum Type: `KalturaOTTAssetType`\n\nTemplate type. Possible values: Series",
          "type": "integer",
          "enum": [
            0
          ],
          "x-enumLabels": [
            "SERIES"
          ]
        },
        "sound": {
          "description": "Sound file name to play upon message arrival to the device (if supported by target device)",
          "type": "string"
        },
        "action": {
          "description": "an optional action",
          "type": "string"
        },
        "url": {
          "description": "URL template for deep linking. Example - /app/location/{mediaId}",
          "type": "string"
        }
      }
    },
    "KalturaFollowTvSeriesFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {}
    },
    "KalturaPersonalFeedFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {}
    },
    "KalturaPpv": {
      "description": "PPV details",
      "properties": {
        "id": {
          "description": "PPV identifier",
          "type": "string"
        },
        "name": {
          "description": "the name for the ppv",
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/KalturaPriceDetails"
        },
        "fileTypes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaIntegerValue"
          }
        },
        "discountModules": {
          "$ref": "#/definitions/KalturaDiscountModule"
        },
        "couponsGroup": {
          "$ref": "#/definitions/KalturaCouponsGroup"
        },
        "descriptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaTranslationToken"
          }
        },
        "productCode": {
          "description": "Product code for the ppv",
          "type": "string"
        },
        "isSubscriptionOnly": {
          "description": "Indicates whether or not this ppv can be purchased standalone or only as part of a subscription",
          "type": "boolean"
        },
        "firstDeviceLimitation": {
          "description": "Indicates whether or not this ppv can be consumed only on the first device",
          "type": "boolean"
        },
        "usageModule": {
          "$ref": "#/definitions/KalturaUsageModule"
        }
      }
    },
    "KalturaRecordingFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Filtering recordings",
      "properties": {
        "statusIn": {
          "description": "Recording Statuses",
          "type": "string"
        },
        "filterExpression": {
          "description": "KSQL expression",
          "type": "string"
        }
      }
    },
    "KalturaLicensedUrl": {
      "properties": {
        "mainUrl": {
          "description": "Main licensed URL",
          "type": "string"
        },
        "altUrl": {
          "description": "An alternate URL to use in case the main fails",
          "type": "string"
        }
      }
    },
    "KalturaLicensedUrlBaseRequest": {
      "properties": {
        "assetId": {
          "description": "Asset identifier",
          "type": "string"
        }
      }
    },
    "KalturaLicensedUrlMediaRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLicensedUrlBaseRequest"
        }
      ],
      "properties": {
        "contentId": {
          "description": "Identifier of the content to get the link for (file identifier)",
          "type": "integer"
        },
        "baseUrl": {
          "description": "Base URL for the licensed URLs",
          "type": "string"
        }
      }
    },
    "KalturaLicensedUrlEpgRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLicensedUrlMediaRequest"
        }
      ],
      "properties": {
        "streamType": {
          "description": "Enum Type: `KalturaStreamType`\n\nThe stream type to get the URL for",
          "type": "string",
          "enum": [
            "catchup",
            "start_over",
            "trick_play"
          ],
          "x-enumLabels": [
            "CATCHUP",
            "START_OVER",
            "TRICK_PLAY"
          ]
        },
        "startDate": {
          "description": "The start date of the stream (epoch)",
          "type": "integer"
        }
      }
    },
    "KalturaLicensedUrlRecordingRequest": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaLicensedUrlBaseRequest"
        }
      ],
      "properties": {
        "startDate": {
          "description": "The start date of the recording (epoch)",
          "type": "integer"
        },
        "fileType": {
          "description": "The file type for the URL",
          "type": "string"
        }
      }
    },
    "KalturaRegistryResponse": {
      "properties": {
        "announcementId": {
          "description": "Announcement Id",
          "type": "integer"
        },
        "key": {
          "description": "Key",
          "type": "string"
        },
        "url": {
          "description": "URL",
          "type": "string"
        }
      }
    },
    "KalturaNotificationsPartnerSettings": {
      "properties": {
        "pushNotificationEnabled": {
          "description": "Push notification capability is enabled for the account",
          "type": "boolean"
        },
        "pushSystemAnnouncementsEnabled": {
          "description": "System announcement capability is enabled for the account",
          "type": "boolean"
        },
        "pushStartHour": {
          "description": "Window start time (UTC) for send automated push messages",
          "type": "integer"
        },
        "pushEndHour": {
          "description": "Window end time (UTC) for send automated push messages",
          "type": "integer"
        },
        "inboxEnabled": {
          "description": "Inbox enabled",
          "type": "boolean"
        },
        "messageTTLDays": {
          "description": "Message TTL in days",
          "type": "integer"
        },
        "automaticIssueFollowNotification": {
          "description": "Automatic issue follow notification",
          "type": "boolean"
        },
        "topicExpirationDurationDays": {
          "description": "Topic expiration duration in days",
          "type": "integer"
        }
      }
    },
    "KalturaNotificationsSettings": {
      "properties": {
        "pushNotificationEnabled": {
          "description": "Specify if the user want to receive push notifications or not",
          "type": "boolean"
        },
        "pushFollowEnabled": {
          "description": "Specify if the user will be notified for followed content via push. (requires push_notification_enabled to be enabled)",
          "type": "boolean"
        }
      }
    },
    "KalturaPaymentMethodProfileFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "paymentGatewayIdEqual": {
          "description": "Payment gateway identifier to list the payment methods for",
          "type": "integer"
        }
      }
    },
    "KalturaTimeShiftedTvPartnerSettings": {
      "properties": {
        "catchUpEnabled": {
          "description": "Is catch-up enabled",
          "type": "boolean"
        },
        "cdvrEnabled": {
          "description": "Is c-dvr enabled",
          "type": "boolean"
        },
        "startOverEnabled": {
          "description": "Is start-over enabled",
          "type": "boolean"
        },
        "trickPlayEnabled": {
          "description": "Is trick-play enabled",
          "type": "boolean"
        },
        "recordingScheduleWindowEnabled": {
          "description": "Is recording schedule window enabled",
          "type": "boolean"
        },
        "protectionEnabled": {
          "description": "Is recording protection enabled",
          "type": "boolean"
        },
        "catchUpBufferLength": {
          "description": "Catch-up buffer length",
          "type": "integer"
        },
        "trickPlayBufferLength": {
          "description": "Trick play buffer length",
          "type": "integer"
        },
        "recordingScheduleWindow": {
          "description": "Recording schedule window. Indicates how long (in minutes) after the program starts it is allowed to schedule the recording",
          "type": "integer"
        },
        "paddingBeforeProgramStarts": {
          "description": "Indicates how long (in seconds) before the program starts the recording will begin",
          "type": "integer"
        },
        "paddingAfterProgramEnds": {
          "description": "Indicates how long (in seconds) after the program ends the recording will end",
          "type": "integer"
        },
        "protectionPeriod": {
          "description": "Specify the time in days that a recording should be protected. Start time begins at protection request.",
          "type": "integer"
        },
        "protectionQuotaPercentage": {
          "description": "Indicates how long (in seconds) after the program ends the recording will end",
          "type": "integer"
        },
        "recordingLifetimePeriod": {
          "description": "Specify the time in days that a recording should be kept for user. Start time begins with the program end date.",
          "type": "integer"
        },
        "cleanupNoticePeroid": {
          "description": "The time in days before the recording lifetime is due from which the client should be able to warn user about deletion.",
          "type": "integer"
        },
        "seriesRecordingEnabled": {
          "description": "The time in days before the recording lifetime is due from which the client should be able to warn user about deletion.",
          "type": "boolean"
        },
        "nonEntitledChannelPlaybackEnabled": {
          "description": "Is recording playback for non-entitled channel enables",
          "type": "boolean"
        },
        "nonExistingChannelPlaybackEnabled": {
          "description": "Is recording playback for non-existing channel enables",
          "type": "boolean"
        }
      }
    },
    "KalturaTopicFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {}
    },
    "KalturaUserAssetsListItem": {
      "description": "An item of user asset list",
      "properties": {
        "id": {
          "description": "Asset identifier",
          "type": "string"
        },
        "orderIndex": {
          "description": "The order index of the asset in the list",
          "type": "integer"
        },
        "type": {
          "description": "Enum Type: `KalturaUserAssetsListItemType`\n\nThe type of the asset",
          "type": "string",
          "enum": [
            "all",
            "media"
          ],
          "x-enumLabels": [
            "ALL",
            "MEDIA"
          ]
        },
        "userId": {
          "readOnly": true,
          "description": "The identifier of the user who added the item to the list",
          "type": "string"
        },
        "listType": {
          "description": "Enum Type: `KalturaUserAssetsListType`\n\nThe type of the list",
          "type": "string",
          "enum": [
            "all",
            "watch",
            "purchase",
            "library"
          ],
          "x-enumLabels": [
            "ALL",
            "WATCH",
            "PURCHASE",
            "LIBRARY"
          ]
        }
      }
    },
    "KalturaDeviceFamilyBase": {
      "description": "Device family details",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Device family identifier",
          "type": "integer"
        },
        "name": {
          "description": "Device family name",
          "type": "string"
        },
        "deviceLimit": {
          "description": "Max number of devices allowed for this family",
          "type": "integer"
        },
        "concurrentLimit": {
          "description": "Max number of streams allowed for this family",
          "type": "integer"
        }
      }
    },
    "KalturaHouseholdDevice": {
      "description": "Device details",
      "properties": {
        "householdId": {
          "description": "Household identifier",
          "type": "integer"
        },
        "udid": {
          "description": "Device UDID",
          "type": "string"
        },
        "name": {
          "description": "Device name",
          "type": "string"
        },
        "brand": {
          "description": "Device brand name",
          "type": "string"
        },
        "brandId": {
          "description": "Device brand identifier",
          "type": "integer"
        },
        "activatedOn": {
          "description": "Device activation date (epoch)",
          "type": "integer"
        },
        "status": {
          "readOnly": true,
          "description": "Enum Type: `KalturaDeviceStatus`\n\nDevice state",
          "type": "string",
          "enum": [
            "PENDING",
            "ACTIVATED",
            "NOT_ACTIVATED"
          ],
          "x-enumLabels": [
            "PENDING",
            "ACTIVATED",
            "NOT_ACTIVATED"
          ]
        }
      }
    },
    "KalturaHouseholdDeviceFamilyLimitations": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaDeviceFamilyBase"
        }
      ],
      "description": "Device family limitations details",
      "properties": {
        "frequency": {
          "description": "Allowed device change frequency code",
          "type": "integer"
        }
      }
    },
    "KalturaHouseholdLimitations": {
      "description": "Household limitations details",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Household limitation module identifier",
          "type": "integer"
        },
        "name": {
          "description": "Household limitation module name",
          "type": "string"
        },
        "concurrentLimit": {
          "description": "Max number of streams allowed for the household",
          "type": "integer"
        },
        "deviceLimit": {
          "description": "Max number of devices allowed for the household",
          "type": "integer"
        },
        "deviceFrequency": {
          "description": "Allowed device change frequency code",
          "type": "integer"
        },
        "deviceFrequencyDescription": {
          "description": "Allowed device change frequency description",
          "type": "string"
        },
        "userFrequency": {
          "description": "Allowed user change frequency code",
          "type": "integer"
        },
        "userFrequencyDescription": {
          "description": "Allowed user change frequency description",
          "type": "string"
        },
        "npvrQuotaInSeconds": {
          "description": "Allowed NPVR Quota in Seconds",
          "type": "integer"
        },
        "usersLimit": {
          "description": "Max number of users allowed for the household",
          "type": "integer"
        },
        "deviceFamiliesLimitations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaHouseholdDeviceFamilyLimitations"
          }
        }
      }
    },
    "KalturaExportTaskFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Bulk export tasks filter",
      "properties": {
        "idIn": {
          "description": "Comma separated tasks identifiers",
          "type": "string"
        }
      }
    },
    "KalturaPartnerConfiguration": {
      "description": "Partner  base configuration",
      "properties": {}
    },
    "KalturaPartnerConfigurationHolder": {
      "description": "Holder object for channel enrichment enum",
      "properties": {
        "type": {
          "description": "Enum Type: `KalturaPartnerConfigurationType`",
          "type": "string",
          "enum": [
            "DefaultPaymentGateway",
            "EnablePaymentGatewaySelection",
            "OSSAdapter"
          ],
          "x-enumLabels": [
            "DEFAULTPAYMENTGATEWAY",
            "ENABLEPAYMENTGATEWAYSELECTION",
            "OSSADAPTER"
          ]
        }
      }
    },
    "KalturaBillingPartnerConfig": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPartnerConfiguration"
        }
      ],
      "description": "Partner billing configuration",
      "properties": {
        "value": {
          "description": "configuration value",
          "type": "string"
        },
        "type": {
          "description": "Enum Type: `KalturaPartnerConfigurationType`\n\npartner configuration type",
          "type": "string",
          "enum": [
            "DefaultPaymentGateway",
            "EnablePaymentGatewaySelection",
            "OSSAdapter"
          ],
          "x-enumLabels": [
            "DEFAULTPAYMENTGATEWAY",
            "ENABLEPAYMENTGATEWAYSELECTION",
            "OSSADAPTER"
          ]
        }
      }
    },
    "KalturaOSSAdapterBaseProfile": {
      "description": "OSS adapter basic",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "OSS adapter id",
          "type": "integer"
        },
        "name": {
          "description": "OSS adapter name",
          "type": "string"
        }
      }
    },
    "KalturaOSSAdapterProfile": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaOSSAdapterBaseProfile"
        }
      ],
      "description": "OSS Adapter",
      "properties": {
        "isActive": {
          "description": "OSS adapter active status",
          "type": "boolean"
        },
        "adapterUrl": {
          "description": "OSS adapter adapter URL",
          "type": "string"
        },
        "ossAdapterSettings": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaStringValue"
          }
        },
        "externalIdentifier": {
          "description": "OSS adapter external identifier",
          "type": "string"
        },
        "sharedSecret": {
          "readOnly": true,
          "description": "Shared Secret",
          "type": "string"
        }
      }
    },
    "KalturaLoginSession": {
      "description": "Login response",
      "properties": {
        "ks": {
          "description": "Access token in a KS format",
          "type": "string"
        },
        "refreshToken": {
          "description": "Refresh Token",
          "type": "string"
        }
      }
    },
    "KalturaUserAssetRuleFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "User asset rule filter",
      "properties": {
        "assetIdEqual": {
          "description": "Asset identifier to filter by",
          "type": "integer"
        },
        "assetTypeEqual": {
          "description": "Asset type to filter by - 0 = EPG, 1 = media",
          "type": "integer"
        }
      }
    },
    "KalturaAssetHistoryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "typeIn": {
          "description": "Comma separated list of asset types to search within.\r\n            Possible values: 0 – EPG linear programs entries, any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted – all types should be included.",
          "type": "string"
        },
        "assetIdIn": {
          "description": "Comma separated list of asset identifiers.",
          "type": "string"
        },
        "statusEqual": {
          "description": "Enum Type: `KalturaWatchStatus`\n\nWhich type of recently watched media to include in the result – those that finished watching, those that are in progress or both.\r\n            If omitted or specified filter = all – return all types.\r\n            Allowed values: progress – return medias that are in-progress, done – return medias that finished watching.",
          "type": "string",
          "enum": [
            "progress",
            "done",
            "all"
          ],
          "x-enumLabels": [
            "PROGRESS",
            "DONE",
            "ALL"
          ]
        }
      }
    },
    "KalturaHousehold": {
      "description": "Household details",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Household identifier",
          "type": "integer"
        },
        "name": {
          "description": "Household name",
          "type": "string"
        },
        "description": {
          "description": "Household description",
          "type": "string"
        },
        "externalId": {
          "description": "Household external identifier",
          "type": "string"
        },
        "householdLimitationsId": {
          "description": "Household limitation module identifier",
          "type": "integer"
        },
        "devicesLimit": {
          "description": "The max number of the devices that can be added to the household",
          "type": "integer"
        },
        "usersLimit": {
          "description": "The max number of the users that can be added to the household",
          "type": "integer"
        },
        "concurrentLimit": {
          "description": "The max number of concurrent streams in the household",
          "type": "integer"
        },
        "regionId": {
          "description": "The households region identifier",
          "type": "integer"
        },
        "state": {
          "readOnly": true,
          "description": "Enum Type: `KalturaHouseholdState`\n\nHousehold state",
          "type": "string",
          "enum": [
            "ok",
            "created_without_npvr_account",
            "suspended",
            "no_users_in_household"
          ],
          "x-enumLabels": [
            "OK",
            "CREATED_WITHOUT_NPVR_ACCOUNT",
            "SUSPENDED",
            "NO_USERS_IN_HOUSEHOLD"
          ]
        },
        "isFrequencyEnabled": {
          "description": "Is household frequency enabled",
          "type": "boolean"
        },
        "frequencyNextDeviceAction": {
          "description": "The next time a device is allowed to be removed from the household (epoch)",
          "type": "integer"
        },
        "frequencyNextUserAction": {
          "description": "The next time a user is allowed to be removed from the household (epoch)",
          "type": "integer"
        },
        "restriction": {
          "description": "Enum Type: `KalturaHouseholdRestriction`\n\nHousehold restriction",
          "type": "string",
          "enum": [
            "not_restricted",
            "user_master_restricted",
            "device_master_restricted",
            "device_user_master_restricted"
          ],
          "x-enumLabels": [
            "NOT_RESTRICTED",
            "USER_MASTER_RESTRICTED",
            "DEVICE_MASTER_RESTRICTED",
            "DEVICE_USER_MASTER_RESTRICTED"
          ]
        }
      }
    },
    "KalturaDeviceRegistrationStatusHolder": {
      "description": "Holder object for household device registration status enum",
      "properties": {
        "status": {
          "description": "Enum Type: `KalturaDeviceRegistrationStatus`\n\nHousehold device registration status",
          "type": "string",
          "enum": [
            "not_registered",
            "registered",
            "registered_to_another_household"
          ],
          "x-enumLabels": [
            "NOT_REGISTERED",
            "REGISTERED",
            "REGISTERED_TO_ANOTHER_HOUSEHOLD"
          ]
        }
      }
    },
    "KalturaDevicePin": {
      "description": "Device pin",
      "properties": {
        "pin": {
          "description": "Device pin",
          "type": "string"
        }
      }
    },
    "KalturaBookmarkFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Filtering Assets requests",
      "properties": {
        "assetIdIn": {
          "description": "Comma separated list of assets identifiers",
          "type": "string"
        },
        "assetTypeEqual": {
          "description": "Enum Type: `KalturaAssetType`\n\nAsset type",
          "type": "string",
          "enum": [
            "media",
            "recording",
            "epg"
          ],
          "x-enumLabels": [
            "MEDIA",
            "RECORDING",
            "EPG"
          ]
        }
      }
    },
    "KalturaPlayerAssetData": {
      "description": "Kaltura bookmark data",
      "properties": {
        "action": {
          "description": "Action: HIT/PLAY/STOP/PAUSE/FIRST_PLAY/SWOOSH/FULL_SCREEN/SEND_TO_FRIEND/LOAD/FULL_SCREEN_EXIT/FINISH/BITRATE_CHANGE/ERROR/NONE",
          "type": "string"
        },
        "location": {
          "description": "Location",
          "type": "integer"
        },
        "averageBitrate": {
          "description": "Average Bitrate",
          "type": "integer"
        },
        "totalBitrate": {
          "description": "Total Bitrate",
          "type": "integer"
        },
        "currentBitrate": {
          "description": "Current Bitrate",
          "type": "integer"
        }
      }
    },
    "KalturaPin": {
      "description": "PIN and its origin of definition",
      "properties": {
        "pin": {
          "description": "PIN code",
          "type": "string"
        },
        "origin": {
          "description": "Enum Type: `KalturaRuleLevel`\n\nWhere the PIN was defined at – account, household or user",
          "type": "string",
          "enum": [
            "invalid",
            "user",
            "household",
            "account"
          ],
          "x-enumLabels": [
            "INVALID",
            "USER",
            "HOUSEHOLD",
            "ACCOUNT"
          ]
        },
        "type": {
          "description": "Enum Type: `KalturaPinType`\n\nPIN type",
          "type": "string",
          "enum": [
            "purchase",
            "parental"
          ],
          "x-enumLabels": [
            "PURCHASE",
            "PARENTAL"
          ]
        }
      }
    },
    "KalturaPurchaseSettings": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPin"
        }
      ],
      "description": "Purchase settings and PIN",
      "properties": {
        "permission": {
          "description": "Enum Type: `KalturaPurchaseSettingsType`\n\nPurchase permission - block, ask or allow",
          "type": "string",
          "enum": [
            "block",
            "ask",
            "allow"
          ],
          "x-enumLabels": [
            "BLOCK",
            "ASK",
            "ALLOW"
          ]
        }
      }
    },
    "KalturaPinResponse": {
      "description": "PIN and its origin of definition",
      "properties": {
        "pin": {
          "description": "PIN code",
          "type": "string"
        },
        "origin": {
          "description": "Enum Type: `KalturaRuleLevel`\n\nWhere the PIN was defined at – account, household or user",
          "type": "string",
          "enum": [
            "invalid",
            "user",
            "household",
            "account"
          ],
          "x-enumLabels": [
            "INVALID",
            "USER",
            "HOUSEHOLD",
            "ACCOUNT"
          ]
        },
        "type": {
          "description": "Enum Type: `KalturaPinType`\n\nPIN type",
          "type": "string",
          "enum": [
            "purchase",
            "parental"
          ],
          "x-enumLabels": [
            "PURCHASE",
            "PARENTAL"
          ]
        }
      }
    },
    "KalturaHouseholdUser": {
      "description": "Household details",
      "properties": {
        "householdId": {
          "description": "The identifier of the household",
          "type": "integer"
        },
        "userId": {
          "description": "The identifier of the user",
          "type": "string"
        },
        "isMaster": {
          "description": "True if the user added as master use",
          "type": "boolean"
        },
        "householdMasterUsername": {
          "description": "The username of the household master for adding a user in status pending for the household master to approve",
          "type": "string"
        },
        "status": {
          "readOnly": true,
          "description": "Enum Type: `KalturaHouseholdUserStatus`\n\nThe status of the user in the household",
          "type": "string",
          "enum": [
            "OK",
            "PENDING"
          ],
          "x-enumLabels": [
            "OK",
            "PENDING"
          ]
        }
      }
    },
    "KalturaSubscriptionFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "subscriptionIdIn": {
          "description": "Comma separated subscription identifiers or file identifier (only 1) to get the subscriptions by",
          "type": "string"
        },
        "mediaFileIdEqual": {
          "description": "Media-file identifier to get the subscriptions by",
          "type": "integer"
        }
      }
    },
    "KalturaOTTCategory": {
      "description": "Category details",
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Unique identifier for the category",
          "type": "integer"
        },
        "name": {
          "description": "Category name",
          "type": "string"
        },
        "parentCategoryId": {
          "description": "Category parent identifier",
          "type": "integer"
        },
        "childCategories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaOTTCategory"
          }
        },
        "channels": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaChannel"
          }
        },
        "images": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaMediaImage"
          }
        }
      }
    },
    "KalturaCoupon": {
      "description": "Coupon details container",
      "properties": {
        "couponsGroup": {
          "$ref": "#/definitions/KalturaCouponsGroup"
        },
        "status": {
          "readOnly": true,
          "description": "Enum Type: `KalturaCouponStatus`\n\nCoupon status",
          "type": "string",
          "enum": [
            "VALID",
            "NOT_EXISTS",
            "ALREADY_USED",
            "EXPIRED",
            "INACTIVE"
          ],
          "x-enumLabels": [
            "VALID",
            "NOT_EXISTS",
            "ALREADY_USED",
            "EXPIRED",
            "INACTIVE"
          ]
        }
      }
    },
    "KalturaEntitlementFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Entitlements filter",
      "properties": {
        "entitlementTypeEqual": {
          "description": "Enum Type: `KalturaTransactionType`\n\nThe type of the entitlements to return",
          "type": "string",
          "enum": [
            "ppv",
            "subscription",
            "collection"
          ],
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "COLLECTION"
          ]
        },
        "entityReferenceEqual": {
          "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
          "type": "string",
          "enum": [
            "user",
            "household"
          ],
          "x-enumLabels": [
            "USER",
            "HOUSEHOLD"
          ]
        },
        "isExpiredEqual": {
          "description": "Is expired",
          "type": "boolean"
        }
      }
    },
    "KalturaBillingResponse": {
      "description": "Billing response",
      "properties": {
        "receiptCode": {
          "description": "Receipt Code",
          "type": "string"
        },
        "externalReceiptCode": {
          "description": "External receipt Code",
          "type": "string"
        }
      }
    },
    "KalturaFavoriteFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Favorite request filter",
      "properties": {
        "mediaTypeIn": {
          "description": "Media type to filter by the favorite assets",
          "type": "integer"
        },
        "mediaIdIn": {
          "description": "Media identifiers from which to filter the favorite assets",
          "type": "string"
        }
      }
    },
    "KalturaKeyValue": {
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "KalturaPaymentGatewayConfiguration": {
      "properties": {
        "paymentGatewayeConfiguration": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KalturaKeyValue"
          }
        }
      }
    },
    "KalturaSocial": {
      "properties": {
        "id": {
          "readOnly": true,
          "description": "Facebook identifier",
          "type": "string"
        },
        "name": {
          "description": "Full name",
          "type": "string"
        },
        "firstName": {
          "description": "First name",
          "type": "string"
        },
        "lastName": {
          "description": "Last name",
          "type": "string"
        },
        "email": {
          "description": "User email",
          "type": "string"
        },
        "gender": {
          "description": "Gender",
          "type": "string"
        },
        "userId": {
          "readOnly": true,
          "description": "User identifier",
          "type": "string"
        },
        "birthday": {
          "description": "User birthday",
          "type": "string"
        },
        "status": {
          "readOnly": true,
          "description": "User model status\r\n            Possible values: UNKNOWN, OK, ERROR, NOACTION, NOTEXIST, CONFLICT, MERGE, MERGEOK, NEWUSER, MINFRIENDS, INVITEOK, INVITEERROR, ACCESSDENIED, WRONGPASSWORDORUSERNAME, UNMERGEOK",
          "type": "string"
        },
        "pictureUrl": {
          "description": "Profile picture URL",
          "type": "string"
        }
      }
    },
    "KalturaFacebookSocial": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaSocial"
        }
      ],
      "properties": {}
    },
    "KalturaSocialUser": {
      "properties": {
        "id": {
          "description": "Facebook identifier",
          "type": "string"
        },
        "name": {
          "description": "Full name",
          "type": "string"
        },
        "firstName": {
          "description": "First name",
          "type": "string"
        },
        "lastName": {
          "description": "Last name",
          "type": "string"
        },
        "email": {
          "description": "User email",
          "type": "string"
        },
        "gender": {
          "description": "Gender",
          "type": "string"
        },
        "userId": {
          "description": "User identifier",
          "type": "string"
        },
        "birthday": {
          "description": "User birthday",
          "type": "string"
        }
      }
    },
    "KalturaSocialResponse": {
      "properties": {
        "status": {
          "description": "User model status\r\n            Possible values: UNKNOWN, OK, ERROR, NOACTION, NOTEXIST, CONFLICT, MERGE, MERGEOK, NEWUSER, MINFRIENDS, INVITEOK, INVITEERROR, ACCESSDENIED, WRONGPASSWORDORUSERNAME, UNMERGEOK",
          "type": "string"
        },
        "userId": {
          "description": "User identifier",
          "type": "string"
        },
        "kalturaUsername": {
          "description": "Kaltura username",
          "type": "string"
        },
        "socialUsername": {
          "description": "Facebook username",
          "type": "string"
        },
        "pic": {
          "description": "Facebook profile picture",
          "type": "string"
        },
        "data": {
          "description": "Data",
          "type": "string"
        },
        "minFriendsLimitation": {
          "description": "Minimum number of friends limitation",
          "type": "string"
        },
        "token": {
          "description": "Facebook encrypted token",
          "type": "string"
        },
        "socialUser": {
          "$ref": "#/definitions/KalturaSocialUser"
        }
      }
    },
    "KalturaLoginResponse": {
      "properties": {
        "user": {
          "$ref": "#/definitions/KalturaOTTUser"
        },
        "loginSession": {
          "$ref": "#/definitions/KalturaLoginSession"
        }
      }
    },
    "KalturaSocialConfig": {
      "description": "Returns social configuration for the partner",
      "properties": {
        "appId": {
          "description": "The application identifier",
          "type": "string"
        },
        "permissions": {
          "description": "List of application permissions",
          "type": "string"
        }
      }
    },
    "KalturaPurchaseBase": {
      "properties": {
        "productId": {
          "description": "Identifier for the package from which this content is offered",
          "type": "integer"
        },
        "contentId": {
          "description": "Identifier for the content to purchase. Relevant only if Product type = PPV",
          "type": "integer"
        },
        "productType": {
          "description": "Enum Type: `KalturaTransactionType`\n\nPackage type. Possible values: PPV, Subscription, Collection",
          "type": "string",
          "enum": [
            "ppv",
            "subscription",
            "collection"
          ],
          "x-enumLabels": [
            "PPV",
            "SUBSCRIPTION",
            "COLLECTION"
          ]
        }
      }
    },
    "KalturaPurchase": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPurchaseBase"
        }
      ],
      "properties": {
        "currency": {
          "description": "Identifier for paying currency, according to ISO 4217",
          "type": "string"
        },
        "price": {
          "description": "Net sum to charge – as a one-time transaction. Price must match the previously provided price for the specified content.",
          "type": "number"
        },
        "paymentMethodId": {
          "description": "Identifier for a pre-entered payment method. If not provided – the household’s default payment method is used",
          "type": "integer"
        },
        "paymentGatewayId": {
          "description": "Identifier for a pre-associated payment gateway. If not provided – the account’s default payment gateway is used",
          "type": "integer"
        },
        "coupon": {
          "description": "Coupon code",
          "type": "string"
        }
      }
    },
    "KalturaPurchaseSession": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPurchase"
        }
      ],
      "properties": {
        "previewModuleId": {
          "description": "Preview module identifier (relevant only for subscription)",
          "type": "integer"
        }
      }
    },
    "KalturaExternalReceipt": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaPurchaseBase"
        }
      ],
      "properties": {
        "receiptId": {
          "description": "A unique identifier that was provided by the In-App billing service to validate the purchase",
          "type": "string"
        },
        "paymentGatewayName": {
          "description": "The payment gateway name for the In-App billing service to be used. Possible values: Google/Apple",
          "type": "string"
        }
      }
    },
    "KalturaTransaction": {
      "properties": {
        "id": {
          "description": "Kaltura unique ID representing the transaction",
          "type": "string"
        },
        "paymentGatewayReferenceId": {
          "description": "Transaction reference ID received from the payment gateway. \r\n            Value is available only if the payment gateway provides this information.",
          "type": "string"
        },
        "paymentGatewayResponseId": {
          "description": "Response ID received from by the payment gateway. \r\n            Value is available only if the payment gateway provides this information.",
          "type": "string"
        },
        "state": {
          "description": "Transaction state: OK/Pending/Failed",
          "type": "string"
        },
        "failReasonCode": {
          "description": "Adapter failure reason code\r\n            Insufficient funds = 20, Invalid account = 21, User unknown = 22, Reason unknown = 23, Unknown payment gateway response = 24,\r\n            No response from payment gateway = 25, Exceeded retry limit = 26, Illegal client request = 27, Expired = 28",
          "type": "integer"
        },
        "createdAt": {
          "description": "Entitlement creation date",
          "type": "integer"
        }
      }
    },
    "KalturaTransactionStatus": {
      "properties": {
        "adapterTransactionStatus": {
          "description": "Enum Type: `KalturaTransactionAdapterStatus`\n\nPayment gateway adapter application state for the transaction to update",
          "type": "string",
          "enum": [
            "OK",
            "PENDING",
            "FAILED"
          ],
          "x-enumLabels": [
            "OK",
            "PENDING",
            "FAILED"
          ]
        },
        "externalId": {
          "description": "External transaction identifier",
          "type": "string"
        },
        "externalStatus": {
          "description": "Payment gateway transaction status",
          "type": "string"
        },
        "externalMessage": {
          "description": "Payment gateway message",
          "type": "string"
        },
        "failReason": {
          "description": "The reason the transaction failed",
          "type": "integer"
        }
      }
    },
    "KalturaUserLoginPin": {
      "description": "Log in pin code details",
      "properties": {
        "pinCode": {
          "description": "Generated login pin code",
          "type": "string"
        },
        "expirationTime": {
          "description": "Login pin expiration time (epoch)",
          "type": "integer"
        },
        "userId": {
          "readOnly": true,
          "description": "User Identifier",
          "type": "string"
        }
      }
    },
    "KalturaParentalRuleFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "properties": {
        "entityReferenceEqual": {
          "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
          "type": "string",
          "enum": [
            "user",
            "household"
          ],
          "x-enumLabels": [
            "USER",
            "HOUSEHOLD"
          ]
        }
      }
    },
    "KalturaTransactionHistoryFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "Transactions filter",
      "properties": {
        "entityReferenceEqual": {
          "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
          "type": "string",
          "enum": [
            "user",
            "household"
          ],
          "x-enumLabels": [
            "USER",
            "HOUSEHOLD"
          ]
        },
        "startDateGreaterThanOrEqual": {
          "description": "Filter transactions later than specific date",
          "type": "integer"
        },
        "endDateLessThanOrEqual": {
          "description": "Filter transactions earlier than specific date",
          "type": "integer"
        }
      }
    },
    "KalturaUserRoleFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "User roles filter",
      "properties": {
        "idIn": {
          "description": "Comma separated roles identifiers",
          "type": "string"
        }
      }
    },
    "KalturaHouseholdWithHolder": {
      "description": "Holder object for Household With enum",
      "properties": {
        "type": {
          "description": "Enum Type: `KalturaHouseholdWith`",
          "type": "string",
          "enum": [
            "users_base_info",
            "users_full_info"
          ],
          "x-enumLabels": [
            "USERS_BASE_INFO",
            "USERS_FULL_INFO"
          ]
        }
      }
    },
    "KalturaOTTUserFilter": {
      "allOf": [
        {
          "$ref": "#/definitions/KalturaFilter"
        }
      ],
      "description": "OTT User filter",
      "properties": {
        "userByEqual": {
          "description": "Enum Type: `KalturaOTTUserBy`\n\nUser Filter By",
          "type": "string",
          "enum": [
            "USER_NAME",
            "EXTERNAL_ID"
          ],
          "x-enumLabels": [
            "USER_NAME",
            "EXTERNAL_ID"
          ]
        },
        "valueEqual": {
          "description": "The User identifiers",
          "type": "string"
        }
      }
    }
  },
  "x-enums": {
    "KalturaAnnouncementOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ]
    },
    "KalturaAnnouncementRecipientsType": {
      "oneOf": [
        {
          "enum": [
            "All"
          ],
          "title": "ALL"
        },
        {
          "enum": [
            "LoggedIn"
          ],
          "title": "LOGGEDIN"
        },
        {
          "enum": [
            "Guests"
          ],
          "title": "GUESTS"
        },
        {
          "enum": [
            "Other"
          ],
          "title": "OTHER"
        }
      ]
    },
    "KalturaAnnouncementStatus": {
      "oneOf": [
        {
          "enum": [
            "NotSent"
          ],
          "title": "NOTSENT"
        },
        {
          "enum": [
            "Sending"
          ],
          "title": "SENDING"
        },
        {
          "enum": [
            "Sent"
          ],
          "title": "SENT"
        },
        {
          "enum": [
            "Aborted"
          ],
          "title": "ABORTED"
        }
      ]
    },
    "KalturaApiParameterPermissionItemAction": {
      "oneOf": [
        {
          "enum": [
            "READ"
          ],
          "title": "READ"
        },
        {
          "enum": [
            "INSERT"
          ],
          "title": "INSERT"
        },
        {
          "enum": [
            "UPDATE"
          ],
          "title": "UPDATE"
        },
        {
          "enum": [
            "USAGE"
          ],
          "title": "USAGE"
        }
      ]
    },
    "KalturaAppTokenHashType": {
      "oneOf": [
        {
          "enum": [
            "SHA1"
          ],
          "title": "SHA1"
        },
        {
          "enum": [
            "SHA256"
          ],
          "title": "SHA256"
        },
        {
          "enum": [
            "SHA512"
          ],
          "title": "SHA512"
        },
        {
          "enum": [
            "MD5"
          ],
          "title": "MD5"
        }
      ]
    },
    "KalturaAppTokenStatus": {
      "oneOf": [
        {
          "enum": [
            "0"
          ],
          "title": "DELETED"
        },
        {
          "enum": [
            "1"
          ],
          "title": "DISABLED"
        },
        {
          "enum": [
            "2"
          ],
          "title": "ACTIVE"
        }
      ]
    },
    "KalturaAssetCommentOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ]
    },
    "KalturaAssetHistoryOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ]
    },
    "KalturaAssetOrderBy": {
      "oneOf": [
        {
          "enum": [
            "RELEVANCY_DESC"
          ],
          "title": "RELEVANCY_DESC"
        },
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        },
        {
          "enum": [
            "VIEWS_DESC"
          ],
          "title": "VIEWS_DESC"
        },
        {
          "enum": [
            "RATINGS_DESC"
          ],
          "title": "RATINGS_DESC"
        },
        {
          "enum": [
            "VOTES_DESC"
          ],
          "title": "VOTES_DESC"
        },
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        },
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        },
        {
          "enum": [
            "LIKES_DESC"
          ],
          "title": "LIKES_DESC"
        }
      ]
    },
    "KalturaAssetReferenceType": {
      "oneOf": [
        {
          "enum": [
            "media"
          ],
          "title": "MEDIA"
        },
        {
          "enum": [
            "epg_internal"
          ],
          "title": "EPG_INTERNAL"
        },
        {
          "enum": [
            "epg_external"
          ],
          "title": "EPG_EXTERNAL"
        }
      ]
    },
    "KalturaAssetType": {
      "oneOf": [
        {
          "enum": [
            "media"
          ],
          "title": "MEDIA"
        },
        {
          "enum": [
            "recording"
          ],
          "title": "RECORDING"
        },
        {
          "enum": [
            "epg"
          ],
          "title": "EPG"
        }
      ]
    },
    "KalturaBillingAction": {
      "oneOf": [
        {
          "enum": [
            "unknown"
          ],
          "title": "UNKNOWN"
        },
        {
          "enum": [
            "purchase"
          ],
          "title": "PURCHASE"
        },
        {
          "enum": [
            "renew_payment"
          ],
          "title": "RENEW_PAYMENT"
        },
        {
          "enum": [
            "renew_canceled_subscription"
          ],
          "title": "RENEW_CANCELED_SUBSCRIPTION"
        },
        {
          "enum": [
            "cancel_subscription_order"
          ],
          "title": "CANCEL_SUBSCRIPTION_ORDER"
        },
        {
          "enum": [
            "subscription_date_changed"
          ],
          "title": "SUBSCRIPTION_DATE_CHANGED"
        }
      ]
    },
    "KalturaBillingItemsType": {
      "oneOf": [
        {
          "enum": [
            "unknown"
          ],
          "title": "UNKNOWN"
        },
        {
          "enum": [
            "ppv"
          ],
          "title": "PPV"
        },
        {
          "enum": [
            "subscription"
          ],
          "title": "SUBSCRIPTION"
        },
        {
          "enum": [
            "pre_paid"
          ],
          "title": "PRE_PAID"
        },
        {
          "enum": [
            "pre_paid_expired"
          ],
          "title": "PRE_PAID_EXPIRED"
        },
        {
          "enum": [
            "collection"
          ],
          "title": "COLLECTION"
        }
      ]
    },
    "KalturaBookmarkActionType": {
      "oneOf": [
        {
          "enum": [
            "HIT"
          ],
          "title": "HIT"
        },
        {
          "enum": [
            "PLAY"
          ],
          "title": "PLAY"
        },
        {
          "enum": [
            "STOP"
          ],
          "title": "STOP"
        },
        {
          "enum": [
            "PAUSE"
          ],
          "title": "PAUSE"
        },
        {
          "enum": [
            "FIRST_PLAY"
          ],
          "title": "FIRST_PLAY"
        },
        {
          "enum": [
            "SWOOSH"
          ],
          "title": "SWOOSH"
        },
        {
          "enum": [
            "FULL_SCREEN"
          ],
          "title": "FULL_SCREEN"
        },
        {
          "enum": [
            "SEND_TO_FRIEND"
          ],
          "title": "SEND_TO_FRIEND"
        },
        {
          "enum": [
            "LOAD"
          ],
          "title": "LOAD"
        },
        {
          "enum": [
            "FULL_SCREEN_EXIT"
          ],
          "title": "FULL_SCREEN_EXIT"
        },
        {
          "enum": [
            "FINISH"
          ],
          "title": "FINISH"
        },
        {
          "enum": [
            "ERROR"
          ],
          "title": "ERROR"
        },
        {
          "enum": [
            "BITRATE_CHANGE"
          ],
          "title": "BITRATE_CHANGE"
        },
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ]
    },
    "KalturaBookmarkOrderBy": {
      "oneOf": [
        {
          "enum": [
            "POSITION_ASC"
          ],
          "title": "POSITION_ASC"
        },
        {
          "enum": [
            "POSITION_DESC"
          ],
          "title": "POSITION_DESC"
        }
      ]
    },
    "KalturaBundleType": {
      "oneOf": [
        {
          "enum": [
            "subscription"
          ],
          "title": "SUBSCRIPTION"
        },
        {
          "enum": [
            "collection"
          ],
          "title": "COLLECTION"
        }
      ]
    },
    "KalturaCatalogReferenceBy": {
      "oneOf": [
        {
          "enum": [
            "MEDIA"
          ],
          "title": "MEDIA"
        },
        {
          "enum": [
            "EPG_INTERNAL"
          ],
          "title": "EPG_INTERNAL"
        },
        {
          "enum": [
            "EPG_EXTERNAL"
          ],
          "title": "EPG_EXTERNAL"
        }
      ]
    },
    "KalturaCatalogWith": {
      "oneOf": [
        {
          "enum": [
            "images"
          ],
          "title": "IMAGES"
        },
        {
          "enum": [
            "files"
          ],
          "title": "FILES"
        },
        {
          "enum": [
            "stats"
          ],
          "title": "STATS"
        }
      ]
    },
    "KalturaChannelEnrichment": {
      "oneOf": [
        {
          "enum": [
            "ClientLocation"
          ],
          "title": "CLIENTLOCATION"
        },
        {
          "enum": [
            "UserId"
          ],
          "title": "USERID"
        },
        {
          "enum": [
            "HouseholdId"
          ],
          "title": "HOUSEHOLDID"
        },
        {
          "enum": [
            "DeviceId"
          ],
          "title": "DEVICEID"
        },
        {
          "enum": [
            "DeviceType"
          ],
          "title": "DEVICETYPE"
        },
        {
          "enum": [
            "UTCOffset"
          ],
          "title": "UTCOFFSET"
        },
        {
          "enum": [
            "Language"
          ],
          "title": "LANGUAGE"
        },
        {
          "enum": [
            "NPVRSupport"
          ],
          "title": "NPVRSUPPORT"
        },
        {
          "enum": [
            "Catchup"
          ],
          "title": "CATCHUP"
        },
        {
          "enum": [
            "Parental"
          ],
          "title": "PARENTAL"
        },
        {
          "enum": [
            "DTTRegion"
          ],
          "title": "DTTREGION"
        },
        {
          "enum": [
            "AtHome"
          ],
          "title": "ATHOME"
        }
      ]
    },
    "KalturaCouponStatus": {
      "oneOf": [
        {
          "enum": [
            "VALID"
          ],
          "title": "VALID"
        },
        {
          "enum": [
            "NOT_EXISTS"
          ],
          "title": "NOT_EXISTS"
        },
        {
          "enum": [
            "ALREADY_USED"
          ],
          "title": "ALREADY_USED"
        },
        {
          "enum": [
            "EXPIRED"
          ],
          "title": "EXPIRED"
        },
        {
          "enum": [
            "INACTIVE"
          ],
          "title": "INACTIVE"
        }
      ]
    },
    "KalturaDeviceRegistrationStatus": {
      "oneOf": [
        {
          "enum": [
            "not_registered"
          ],
          "title": "NOT_REGISTERED"
        },
        {
          "enum": [
            "registered"
          ],
          "title": "REGISTERED"
        },
        {
          "enum": [
            "registered_to_another_household"
          ],
          "title": "REGISTERED_TO_ANOTHER_HOUSEHOLD"
        }
      ]
    },
    "KalturaDeviceStatus": {
      "oneOf": [
        {
          "enum": [
            "PENDING"
          ],
          "title": "PENDING"
        },
        {
          "enum": [
            "ACTIVATED"
          ],
          "title": "ACTIVATED"
        },
        {
          "enum": [
            "NOT_ACTIVATED"
          ],
          "title": "NOT_ACTIVATED"
        }
      ]
    },
    "KalturaEntitlementOrderBy": {
      "oneOf": [
        {
          "enum": [
            "PURCHASE_DATE_ASC"
          ],
          "title": "PURCHASE_DATE_ASC"
        },
        {
          "enum": [
            "PURCHASE_DATE_DESC"
          ],
          "title": "PURCHASE_DATE_DESC"
        }
      ]
    },
    "KalturaEntityReferenceBy": {
      "oneOf": [
        {
          "enum": [
            "user"
          ],
          "title": "USER"
        },
        {
          "enum": [
            "household"
          ],
          "title": "HOUSEHOLD"
        }
      ]
    },
    "KalturaExportDataType": {
      "oneOf": [
        {
          "enum": [
            "vod"
          ],
          "title": "VOD"
        },
        {
          "enum": [
            "epg"
          ],
          "title": "EPG"
        },
        {
          "enum": [
            "users"
          ],
          "title": "USERS"
        }
      ]
    },
    "KalturaExportTaskOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ]
    },
    "KalturaExportType": {
      "oneOf": [
        {
          "enum": [
            "full"
          ],
          "title": "FULL"
        },
        {
          "enum": [
            "incremental"
          ],
          "title": "INCREMENTAL"
        }
      ]
    },
    "KalturaFavoriteOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ]
    },
    "KalturaFollowTvSeriesOrderBy": {
      "oneOf": [
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        },
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        }
      ]
    },
    "KalturaHouseholdFrequencyType": {
      "oneOf": [
        {
          "enum": [
            "devices"
          ],
          "title": "DEVICES"
        },
        {
          "enum": [
            "users"
          ],
          "title": "USERS"
        }
      ]
    },
    "KalturaHouseholdPaymentGatewaySelectedBy": {
      "oneOf": [
        {
          "enum": [
            "none"
          ],
          "title": "NONE"
        },
        {
          "enum": [
            "account"
          ],
          "title": "ACCOUNT"
        },
        {
          "enum": [
            "household"
          ],
          "title": "HOUSEHOLD"
        }
      ]
    },
    "KalturaHouseholdRestriction": {
      "oneOf": [
        {
          "enum": [
            "not_restricted"
          ],
          "title": "NOT_RESTRICTED"
        },
        {
          "enum": [
            "user_master_restricted"
          ],
          "title": "USER_MASTER_RESTRICTED"
        },
        {
          "enum": [
            "device_master_restricted"
          ],
          "title": "DEVICE_MASTER_RESTRICTED"
        },
        {
          "enum": [
            "device_user_master_restricted"
          ],
          "title": "DEVICE_USER_MASTER_RESTRICTED"
        }
      ]
    },
    "KalturaHouseholdState": {
      "oneOf": [
        {
          "enum": [
            "ok"
          ],
          "title": "OK"
        },
        {
          "enum": [
            "created_without_npvr_account"
          ],
          "title": "CREATED_WITHOUT_NPVR_ACCOUNT"
        },
        {
          "enum": [
            "suspended"
          ],
          "title": "SUSPENDED"
        },
        {
          "enum": [
            "no_users_in_household"
          ],
          "title": "NO_USERS_IN_HOUSEHOLD"
        }
      ]
    },
    "KalturaHouseholdSuspentionState": {
      "oneOf": [
        {
          "enum": [
            "not_suspended"
          ],
          "title": "NOT_SUSPENDED"
        },
        {
          "enum": [
            "suspended"
          ],
          "title": "SUSPENDED"
        }
      ]
    },
    "KalturaHouseholdUserStatus": {
      "oneOf": [
        {
          "enum": [
            "OK"
          ],
          "title": "OK"
        },
        {
          "enum": [
            "PENDING"
          ],
          "title": "PENDING"
        }
      ]
    },
    "KalturaHouseholdWith": {
      "oneOf": [
        {
          "enum": [
            "users_base_info"
          ],
          "title": "USERS_BASE_INFO"
        },
        {
          "enum": [
            "users_full_info"
          ],
          "title": "USERS_FULL_INFO"
        }
      ]
    },
    "KalturaIdentifierTypeBy": {
      "oneOf": [
        {
          "enum": [
            "internal_id"
          ],
          "title": "INTERNAL_ID"
        },
        {
          "enum": [
            "external_id"
          ],
          "title": "EXTERNAL_ID"
        }
      ]
    },
    "KalturaInboxMessageOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ]
    },
    "KalturaInboxMessageStatus": {
      "oneOf": [
        {
          "enum": [
            "Unread"
          ],
          "title": "UNREAD"
        },
        {
          "enum": [
            "Read"
          ],
          "title": "READ"
        },
        {
          "enum": [
            "Deleted"
          ],
          "title": "DELETED"
        }
      ]
    },
    "KalturaInboxMessageType": {
      "oneOf": [
        {
          "enum": [
            "SystemAnnouncement"
          ],
          "title": "SYSTEMANNOUNCEMENT"
        },
        {
          "enum": [
            "Followed"
          ],
          "title": "FOLLOWED"
        }
      ]
    },
    "KalturaNotificationType": {
      "oneOf": [
        {
          "enum": [
            "announcement"
          ],
          "title": "ANNOUNCEMENT"
        },
        {
          "enum": [
            "system"
          ],
          "title": "SYSTEM"
        }
      ]
    },
    "KalturaOTTAssetType": {
      "oneOf": [
        {
          "enum": [
            "0"
          ],
          "title": "SERIES"
        }
      ]
    },
    "KalturaOTTUserBy": {
      "oneOf": [
        {
          "enum": [
            "USER_NAME"
          ],
          "title": "USER_NAME"
        },
        {
          "enum": [
            "EXTERNAL_ID"
          ],
          "title": "EXTERNAL_ID"
        }
      ]
    },
    "KalturaOTTUserOrderBy": {
      "oneOf": [
        {
          "enum": [
            "ID_ASC"
          ],
          "title": "ID_ASC"
        }
      ]
    },
    "KalturaParentalRuleOrderBy": {
      "oneOf": [
        {
          "enum": [
            "PARTNER_SORT_VALUE"
          ],
          "title": "PARTNER_SORT_VALUE"
        }
      ]
    },
    "KalturaParentalRuleType": {
      "oneOf": [
        {
          "enum": [
            "ALL"
          ],
          "title": "ALL"
        },
        {
          "enum": [
            "MOVIES"
          ],
          "title": "MOVIES"
        },
        {
          "enum": [
            "TV_SERIES"
          ],
          "title": "TV_SERIES"
        }
      ]
    },
    "KalturaPartnerConfigurationType": {
      "oneOf": [
        {
          "enum": [
            "DefaultPaymentGateway"
          ],
          "title": "DEFAULTPAYMENTGATEWAY"
        },
        {
          "enum": [
            "EnablePaymentGatewaySelection"
          ],
          "title": "ENABLEPAYMENTGATEWAYSELECTION"
        },
        {
          "enum": [
            "OSSAdapter"
          ],
          "title": "OSSADAPTER"
        }
      ]
    },
    "KalturaPaymentMethodProfileOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ]
    },
    "KalturaPaymentMethodType": {
      "oneOf": [
        {
          "enum": [
            "unknown"
          ],
          "title": "UNKNOWN"
        },
        {
          "enum": [
            "credit_card"
          ],
          "title": "CREDIT_CARD"
        },
        {
          "enum": [
            "sms"
          ],
          "title": "SMS"
        },
        {
          "enum": [
            "pay_pal"
          ],
          "title": "PAY_PAL"
        },
        {
          "enum": [
            "debit_card"
          ],
          "title": "DEBIT_CARD"
        },
        {
          "enum": [
            "ideal"
          ],
          "title": "IDEAL"
        },
        {
          "enum": [
            "incaso"
          ],
          "title": "INCASO"
        },
        {
          "enum": [
            "gift"
          ],
          "title": "GIFT"
        },
        {
          "enum": [
            "visa"
          ],
          "title": "VISA"
        },
        {
          "enum": [
            "master_card"
          ],
          "title": "MASTER_CARD"
        },
        {
          "enum": [
            "in_app"
          ],
          "title": "IN_APP"
        },
        {
          "enum": [
            "m1"
          ],
          "title": "M1"
        },
        {
          "enum": [
            "change_subscription"
          ],
          "title": "CHANGE_SUBSCRIPTION"
        },
        {
          "enum": [
            "offline"
          ],
          "title": "OFFLINE"
        }
      ]
    },
    "KalturaPersonalFeedOrderBy": {
      "oneOf": [
        {
          "enum": [
            "RELEVANCY_DESC"
          ],
          "title": "RELEVANCY_DESC"
        },
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        },
        {
          "enum": [
            "VIEWS_DESC"
          ],
          "title": "VIEWS_DESC"
        },
        {
          "enum": [
            "RATINGS_DESC"
          ],
          "title": "RATINGS_DESC"
        },
        {
          "enum": [
            "VOTES_DESC"
          ],
          "title": "VOTES_DESC"
        },
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        },
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        }
      ]
    },
    "KalturaPinType": {
      "oneOf": [
        {
          "enum": [
            "purchase"
          ],
          "title": "PURCHASE"
        },
        {
          "enum": [
            "parental"
          ],
          "title": "PARENTAL"
        }
      ]
    },
    "KalturaPositionOwner": {
      "oneOf": [
        {
          "enum": [
            "household"
          ],
          "title": "HOUSEHOLD"
        },
        {
          "enum": [
            "user"
          ],
          "title": "USER"
        }
      ]
    },
    "KalturaProductPriceOrderBy": {
      "oneOf": [
        {
          "enum": [
            "PRODUCT_ID_ASC"
          ],
          "title": "PRODUCT_ID_ASC"
        },
        {
          "enum": [
            "PRODUCT_ID_DESC"
          ],
          "title": "PRODUCT_ID_DESC"
        }
      ]
    },
    "KalturaPurchaseSettingsType": {
      "oneOf": [
        {
          "enum": [
            "block"
          ],
          "title": "BLOCK"
        },
        {
          "enum": [
            "ask"
          ],
          "title": "ASK"
        },
        {
          "enum": [
            "allow"
          ],
          "title": "ALLOW"
        }
      ]
    },
    "KalturaPurchaseStatus": {
      "oneOf": [
        {
          "enum": [
            "ppv_purchased"
          ],
          "title": "PPV_PURCHASED"
        },
        {
          "enum": [
            "free"
          ],
          "title": "FREE"
        },
        {
          "enum": [
            "for_purchase_subscription_only"
          ],
          "title": "FOR_PURCHASE_SUBSCRIPTION_ONLY"
        },
        {
          "enum": [
            "subscription_purchased"
          ],
          "title": "SUBSCRIPTION_PURCHASED"
        },
        {
          "enum": [
            "for_purchase"
          ],
          "title": "FOR_PURCHASE"
        },
        {
          "enum": [
            "subscription_purchased_wrong_currency"
          ],
          "title": "SUBSCRIPTION_PURCHASED_WRONG_CURRENCY"
        },
        {
          "enum": [
            "pre_paid_purchased"
          ],
          "title": "PRE_PAID_PURCHASED"
        },
        {
          "enum": [
            "geo_commerce_blocked"
          ],
          "title": "GEO_COMMERCE_BLOCKED"
        },
        {
          "enum": [
            "entitled_to_preview_module"
          ],
          "title": "ENTITLED_TO_PREVIEW_MODULE"
        },
        {
          "enum": [
            "first_device_limitation"
          ],
          "title": "FIRST_DEVICE_LIMITATION"
        },
        {
          "enum": [
            "collection_purchased"
          ],
          "title": "COLLECTION_PURCHASED"
        },
        {
          "enum": [
            "user_suspended"
          ],
          "title": "USER_SUSPENDED"
        },
        {
          "enum": [
            "not_for_purchase"
          ],
          "title": "NOT_FOR_PURCHASE"
        }
      ]
    },
    "KalturaRecordingContextOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ]
    },
    "KalturaRecordingOrderBy": {
      "oneOf": [
        {
          "enum": [
            "TITLE_ASC"
          ],
          "title": "TITLE_ASC"
        },
        {
          "enum": [
            "TITLE_DESC"
          ],
          "title": "TITLE_DESC"
        },
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        },
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        }
      ]
    },
    "KalturaRecordingStatus": {
      "oneOf": [
        {
          "enum": [
            "SCHEDULED"
          ],
          "title": "SCHEDULED"
        },
        {
          "enum": [
            "RECORDING"
          ],
          "title": "RECORDING"
        },
        {
          "enum": [
            "RECORDED"
          ],
          "title": "RECORDED"
        },
        {
          "enum": [
            "CANCELED"
          ],
          "title": "CANCELED"
        },
        {
          "enum": [
            "FAILED"
          ],
          "title": "FAILED"
        },
        {
          "enum": [
            "DELETED"
          ],
          "title": "DELETED"
        }
      ]
    },
    "KalturaRecordingType": {
      "oneOf": [
        {
          "enum": [
            "SINGLE"
          ],
          "title": "SINGLE"
        },
        {
          "enum": [
            "SEASON"
          ],
          "title": "SEASON"
        },
        {
          "enum": [
            "SERIES"
          ],
          "title": "SERIES"
        }
      ]
    },
    "KalturaRegionOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ]
    },
    "KalturaRuleLevel": {
      "oneOf": [
        {
          "enum": [
            "invalid"
          ],
          "title": "INVALID"
        },
        {
          "enum": [
            "user"
          ],
          "title": "USER"
        },
        {
          "enum": [
            "household"
          ],
          "title": "HOUSEHOLD"
        },
        {
          "enum": [
            "account"
          ],
          "title": "ACCOUNT"
        }
      ]
    },
    "KalturaRuleType": {
      "oneOf": [
        {
          "enum": [
            "parental"
          ],
          "title": "PARENTAL"
        },
        {
          "enum": [
            "geo"
          ],
          "title": "GEO"
        },
        {
          "enum": [
            "user_type"
          ],
          "title": "USER_TYPE"
        },
        {
          "enum": [
            "device"
          ],
          "title": "DEVICE"
        }
      ]
    },
    "KalturaSeriesRecordingOrderBy": {
      "oneOf": [
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        },
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        },
        {
          "enum": [
            "ID_ASC"
          ],
          "title": "ID_ASC"
        },
        {
          "enum": [
            "ID_DESC"
          ],
          "title": "ID_DESC"
        },
        {
          "enum": [
            "SERIES_ID_ASC"
          ],
          "title": "SERIES_ID_ASC"
        },
        {
          "enum": [
            "SERIES_ID_DESC"
          ],
          "title": "SERIES_ID_DESC"
        }
      ]
    },
    "KalturaSessionType": {
      "oneOf": [
        {
          "enum": [
            "0"
          ],
          "title": "USER"
        },
        {
          "enum": [
            "2"
          ],
          "title": "ADMIN"
        }
      ]
    },
    "KalturaSocialNetwork": {
      "oneOf": [
        {
          "enum": [
            "facebook"
          ],
          "title": "FACEBOOK"
        }
      ]
    },
    "KalturaStreamType": {
      "oneOf": [
        {
          "enum": [
            "catchup"
          ],
          "title": "CATCHUP"
        },
        {
          "enum": [
            "start_over"
          ],
          "title": "START_OVER"
        },
        {
          "enum": [
            "trick_play"
          ],
          "title": "TRICK_PLAY"
        }
      ]
    },
    "KalturaSubscriptionOrderBy": {
      "oneOf": [
        {
          "enum": [
            "START_DATE_ASC"
          ],
          "title": "START_DATE_ASC"
        },
        {
          "enum": [
            "START_DATE_DESC"
          ],
          "title": "START_DATE_DESC"
        }
      ]
    },
    "KalturaTopicAutomaticIssueNotification": {
      "oneOf": [
        {
          "enum": [
            "Inherit"
          ],
          "title": "INHERIT"
        },
        {
          "enum": [
            "Yes"
          ],
          "title": "YES"
        },
        {
          "enum": [
            "No"
          ],
          "title": "NO"
        }
      ]
    },
    "KalturaTopicOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ]
    },
    "KalturaTransactionAdapterStatus": {
      "oneOf": [
        {
          "enum": [
            "OK"
          ],
          "title": "OK"
        },
        {
          "enum": [
            "PENDING"
          ],
          "title": "PENDING"
        },
        {
          "enum": [
            "FAILED"
          ],
          "title": "FAILED"
        }
      ]
    },
    "KalturaTransactionHistoryOrderBy": {
      "oneOf": [
        {
          "enum": [
            "CREATE_DATE_ASC"
          ],
          "title": "CREATE_DATE_ASC"
        },
        {
          "enum": [
            "CREATE_DATE_DESC"
          ],
          "title": "CREATE_DATE_DESC"
        }
      ]
    },
    "KalturaTransactionType": {
      "oneOf": [
        {
          "enum": [
            "ppv"
          ],
          "title": "PPV"
        },
        {
          "enum": [
            "subscription"
          ],
          "title": "SUBSCRIPTION"
        },
        {
          "enum": [
            "collection"
          ],
          "title": "COLLECTION"
        }
      ]
    },
    "KalturaUserAssetRuleOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NAME_ASC"
          ],
          "title": "NAME_ASC"
        },
        {
          "enum": [
            "NAME_DESC"
          ],
          "title": "NAME_DESC"
        }
      ]
    },
    "KalturaUserAssetsListItemType": {
      "oneOf": [
        {
          "enum": [
            "all"
          ],
          "title": "ALL"
        },
        {
          "enum": [
            "media"
          ],
          "title": "MEDIA"
        }
      ]
    },
    "KalturaUserAssetsListType": {
      "oneOf": [
        {
          "enum": [
            "all"
          ],
          "title": "ALL"
        },
        {
          "enum": [
            "watch"
          ],
          "title": "WATCH"
        },
        {
          "enum": [
            "purchase"
          ],
          "title": "PURCHASE"
        },
        {
          "enum": [
            "library"
          ],
          "title": "LIBRARY"
        }
      ]
    },
    "KalturaUserRoleOrderBy": {
      "oneOf": [
        {
          "enum": [
            "NONE"
          ],
          "title": "NONE"
        }
      ]
    },
    "KalturaUserState": {
      "oneOf": [
        {
          "enum": [
            "ok"
          ],
          "title": "OK"
        },
        {
          "enum": [
            "user_with_no_household"
          ],
          "title": "USER_WITH_NO_HOUSEHOLD"
        },
        {
          "enum": [
            "user_created_with_no_role"
          ],
          "title": "USER_CREATED_WITH_NO_ROLE"
        },
        {
          "enum": [
            "user_not_activated"
          ],
          "title": "USER_NOT_ACTIVATED"
        }
      ]
    },
    "KalturaWatchStatus": {
      "oneOf": [
        {
          "enum": [
            "progress"
          ],
          "title": "PROGRESS"
        },
        {
          "enum": [
            "done"
          ],
          "title": "DONE"
        },
        {
          "enum": [
            "all"
          ],
          "title": "ALL"
        }
      ]
    }
  },
  "paths": {
    "/service/announcement/action/add": {
      "get": {
        "description": "Add a new future scheduled system announcement push notification",
        "tags": [
          "announcement"
        ],
        "operationId": "announcement.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "announcement[name]",
            "x-group": "announcement"
          },
          {
            "type": "string",
            "in": "query",
            "name": "announcement[message]",
            "x-group": "announcement"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "announcement[enabled]",
            "x-group": "announcement"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "announcement[startTime]",
            "x-group": "announcement"
          },
          {
            "type": "string",
            "in": "query",
            "name": "announcement[timezone]",
            "x-group": "announcement"
          },
          {
            "type": "string",
            "in": "query",
            "name": "announcement[recipients]",
            "enum": [
              "All",
              "LoggedIn",
              "Guests",
              "Other"
            ],
            "x-enumLabels": [
              "ALL",
              "LOGGEDIN",
              "GUESTS",
              "OTHER"
            ],
            "description": "Enum Type: `KalturaAnnouncementRecipientsType`",
            "x-group": "announcement"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "announcement",
            "description": "Object Type: `KalturaAnnouncement`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAnnouncement"
            }
          }
        }
      }
    },
    "/service/announcement/action/delete": {
      "get": {
        "description": "Delete an existing announcing. Announcement cannot be delete while being sent.",
        "tags": [
          "announcement"
        ],
        "operationId": "announcement.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "Id of the announcement.",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/announcement/action/enableSystemAnnouncements": {
      "get": {
        "description": "Enable system announcements",
        "tags": [
          "announcement"
        ],
        "operationId": "announcement.enableSystemAnnouncements",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/announcement/action/list": {
      "get": {
        "description": "Lists all announcements in the system.",
        "tags": [
          "announcement"
        ],
        "operationId": "announcement.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageSize]",
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "x-group": "pager"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageIndex]",
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "x-group": "pager"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaAnnouncementFilter`",
            "subGroups": []
          },
          {
            "name": "pager",
            "description": "Object Type: `KalturaFilterPager`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAnnouncementListResponse"
            }
          }
        }
      }
    },
    "/service/announcement/action/update": {
      "get": {
        "description": "Update an existing future system announcement push notification. Announcement can only be updated only before sending",
        "tags": [
          "announcement"
        ],
        "operationId": "announcement.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "announcementId",
            "in": "query",
            "description": "The announcement identifier",
            "type": "integer",
            "required": false
          },
          {
            "type": "string",
            "in": "query",
            "name": "announcement[name]",
            "x-group": "announcement"
          },
          {
            "type": "string",
            "in": "query",
            "name": "announcement[message]",
            "x-group": "announcement"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "announcement[enabled]",
            "x-group": "announcement"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "announcement[startTime]",
            "x-group": "announcement"
          },
          {
            "type": "string",
            "in": "query",
            "name": "announcement[timezone]",
            "x-group": "announcement"
          },
          {
            "type": "string",
            "in": "query",
            "name": "announcement[recipients]",
            "enum": [
              "All",
              "LoggedIn",
              "Guests",
              "Other"
            ],
            "x-enumLabels": [
              "ALL",
              "LOGGEDIN",
              "GUESTS",
              "OTHER"
            ],
            "description": "Enum Type: `KalturaAnnouncementRecipientsType`",
            "x-group": "announcement"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "announcement",
            "description": "Object Type: `KalturaAnnouncement`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAnnouncement"
            }
          }
        }
      }
    },
    "/service/announcement/action/updateStatus": {
      "get": {
        "description": "Update a system announcement status",
        "tags": [
          "announcement"
        ],
        "operationId": "announcement.updateStatus",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "Id of the announcement.",
            "type": "integer",
            "required": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "Status to update to.",
            "type": "boolean",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/apptoken/action/add": {
      "get": {
        "description": "Add new application authentication token",
        "tags": [
          "appToken"
        ],
        "operationId": "appToken.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "appToken[expiry]",
            "description": "Expiry time of current token (unix timestamp in seconds)",
            "x-group": "appToken"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "appToken[partnerId]",
            "description": "Partner identifier",
            "x-group": "appToken"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "appToken[sessionDuration]",
            "description": "Expiry duration of KS (Kaltura Session) that created using the current token (in seconds)",
            "x-group": "appToken"
          },
          {
            "type": "string",
            "in": "query",
            "name": "appToken[hashType]",
            "enum": [
              "SHA1",
              "SHA256",
              "SHA512",
              "MD5"
            ],
            "x-enumLabels": [
              "SHA1",
              "SHA256",
              "SHA512",
              "MD5"
            ],
            "description": "Enum Type: `KalturaAppTokenHashType`\n\nThe hash type of the token",
            "x-group": "appToken"
          },
          {
            "type": "string",
            "in": "query",
            "name": "appToken[sessionPrivileges]",
            "description": "Comma separated privileges to be applied on KS (Kaltura Session) that created using the current token",
            "x-group": "appToken"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "appToken[sessionType]",
            "enum": [
              0,
              2
            ],
            "x-enumLabels": [
              "USER",
              "ADMIN"
            ],
            "description": "Enum Type: `KalturaSessionType`\n\nType of KS (Kaltura Session) that created using the current token",
            "x-group": "appToken"
          },
          {
            "type": "string",
            "in": "query",
            "name": "appToken[token]",
            "description": "The application token",
            "x-group": "appToken"
          },
          {
            "type": "string",
            "in": "query",
            "name": "appToken[sessionUserId]",
            "description": "User id of KS (Kaltura Session) that created using the current token",
            "x-group": "appToken"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "appToken",
            "description": "Object Type: `KalturaAppToken`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAppToken"
            }
          }
        }
      }
    },
    "/service/apptoken/action/delete": {
      "get": {
        "description": "Delete application authentication token by id",
        "tags": [
          "appToken"
        ],
        "operationId": "appToken.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "Application token identifier",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/apptoken/action/get": {
      "get": {
        "description": "Get application authentication token by id",
        "tags": [
          "appToken"
        ],
        "operationId": "appToken.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "Application token identifier",
            "type": "string",
            "required": false,
            "x-dynamicEnum": {
              "path": "/service/apptoken/action/list",
              "method": "get",
              "array": "objects",
              "label": "id",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAppToken"
            }
          }
        }
      }
    },
    "/service/apptoken/action/startSession": {
      "get": {
        "description": "Starts a new KS (Kaltura Session) based on application authentication token id",
        "tags": [
          "appToken"
        ],
        "operationId": "appToken.startSession",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "application token id",
            "type": "string",
            "required": false
          },
          {
            "name": "tokenHash",
            "in": "query",
            "description": "hashed token - current KS concatenated with the application token hashed using the application token ‘hashType’",
            "type": "string",
            "required": false
          },
          {
            "name": "userId",
            "in": "query",
            "description": "session user id, will be ignored if a different user id already defined on the application token",
            "type": "string",
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "Enum Type: `KalturaSessionType`\n\nsession type, will be ignored if a different session type already defined on the application token",
            "type": "integer",
            "required": false,
            "enum": [
              "0",
              "2"
            ],
            "x-enumLabels": [
              "USER",
              "ADMIN"
            ]
          },
          {
            "name": "expiry",
            "in": "query",
            "description": "session expiry (in seconds), could be overwritten by shorter expiry of the application token and the session-expiry that defined on the application token",
            "type": "integer",
            "required": false
          },
          {
            "name": "udid",
            "in": "query",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSessionInfo"
            }
          }
        }
      }
    },
    "/service/assetcomment/action/add": {
      "get": {
        "description": "Add asset comments by asset id",
        "tags": [
          "assetComment"
        ],
        "operationId": "assetComment.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "comment[id]",
            "description": "Comment ID",
            "x-group": "comment"
          },
          {
            "type": "string",
            "in": "query",
            "name": "comment[assetId]",
            "description": "Asset identifier",
            "x-group": "comment"
          },
          {
            "type": "string",
            "in": "query",
            "name": "comment[assetType]",
            "enum": [
              "media",
              "recording",
              "epg"
            ],
            "x-enumLabels": [
              "MEDIA",
              "RECORDING",
              "EPG"
            ],
            "description": "Enum Type: `KalturaAssetType`\n\nAsset Type",
            "x-group": "comment"
          },
          {
            "type": "string",
            "in": "query",
            "name": "comment[header]",
            "description": "Header",
            "x-group": "comment"
          },
          {
            "type": "string",
            "in": "query",
            "name": "comment[subHeader]",
            "description": "Sub Header",
            "x-group": "comment"
          },
          {
            "type": "string",
            "in": "query",
            "name": "comment[text]",
            "description": "Text",
            "x-group": "comment"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "comment[createDate]",
            "description": "CreateDate",
            "x-group": "comment",
            "x-inputType": "datetime"
          },
          {
            "type": "string",
            "in": "query",
            "name": "comment[writer]",
            "description": "Writer",
            "x-group": "comment"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "comment",
            "description": "Object Type: `KalturaAssetComment`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetComment"
            }
          }
        }
      }
    },
    "/service/assetcomment/action/list": {
      "get": {
        "description": "Returns asset comments by asset id",
        "tags": [
          "assetComment"
        ],
        "operationId": "assetComment.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[assetIdEqual]",
            "description": "Asset Id",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[assetTypeEqual]",
            "enum": [
              "media",
              "recording",
              "epg"
            ],
            "x-enumLabels": [
              "MEDIA",
              "RECORDING",
              "EPG"
            ],
            "description": "Enum Type: `KalturaAssetType`\n\nAsset Type",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageSize]",
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "x-group": "pager"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageIndex]",
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "x-group": "pager"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaAssetCommentFilter`",
            "subGroups": []
          },
          {
            "name": "pager",
            "description": "Object Type: `KalturaFilterPager`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetCommentListResponse"
            }
          }
        }
      }
    },
    "/service/asset/action/get": {
      "get": {
        "description": "Returns media or EPG asset by media / EPG internal or external identifier",
        "tags": [
          "asset"
        ],
        "operationId": "asset.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "Asset identifier",
            "type": "string",
            "required": false,
            "x-dynamicEnum": {
              "path": "/service/asset/action/list",
              "method": "get",
              "array": "objects",
              "label": "id",
              "value": "id"
            },
            "x-inputType": "text"
          },
          {
            "name": "assetReferenceType",
            "in": "query",
            "description": "Enum Type: `KalturaAssetReferenceType`\n\nAsset type",
            "type": "string",
            "required": false,
            "enum": [
              "media",
              "epg_internal",
              "epg_external"
            ],
            "x-enumLabels": [
              "MEDIA",
              "EPG_INTERNAL",
              "EPG_EXTERNAL"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAsset"
            }
          }
        }
      }
    },
    "/service/asset/action/list": {
      "get": {
        "description": "Returns media or EPG assets. Filters by media identifiers or by EPG internal or external identifier.",
        "tags": [
          "asset"
        ],
        "operationId": "asset.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "name": "filter[objectType]",
            "in": "query",
            "enum": [
              "KalturaBundleFilter",
              "KalturaChannelExternalFilter",
              "KalturaChannelFilter",
              "KalturaRelatedFilter",
              "KalturaRelatedExternalFilter",
              "KalturaSearchAssetFilter",
              "KalturaSearchExternalFilter"
            ],
            "type": "string",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[idEqual]",
            "description": "Bundle Id.",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaBundleFilter",
                "KalturaChannelExternalFilter",
                "KalturaChannelFilter",
                "KalturaRelatedFilter",
                "KalturaRelatedExternalFilter",
                "KalturaSearchAssetFilter",
                "KalturaSearchExternalFilter"
              ]
            },
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[typeIn]",
            "description": "Comma separated list of asset types to search within. \r\n            Possible values: 0 – EPG linear programs entries, any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted – all types should be included.",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaBundleFilter",
                "KalturaChannelExternalFilter",
                "KalturaChannelFilter",
                "KalturaRelatedFilter",
                "KalturaRelatedExternalFilter",
                "KalturaSearchAssetFilter",
                "KalturaSearchExternalFilter"
              ]
            },
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[bundleTypeEqual]",
            "enum": [
              "subscription",
              "collection"
            ],
            "x-enumLabels": [
              "SUBSCRIPTION",
              "COLLECTION"
            ],
            "description": "Enum Type: `KalturaBundleType`\n\nbundleType - possible values: Subscription or Collection",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaBundleFilter",
                "KalturaChannelExternalFilter",
                "KalturaChannelFilter",
                "KalturaRelatedFilter",
                "KalturaRelatedExternalFilter",
                "KalturaSearchAssetFilter",
                "KalturaSearchExternalFilter"
              ]
            },
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[utcOffsetEqual]",
            "description": "UtcOffsetEqual",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaChannelExternalFilter",
                "KalturaRelatedExternalFilter",
                "KalturaSearchExternalFilter"
              ]
            },
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[freeText]",
            "description": "FreeTextEqual",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaChannelExternalFilter",
                "KalturaRelatedExternalFilter",
                "KalturaSearchExternalFilter"
              ]
            },
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[kSql]",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaChannelFilter",
                "KalturaRelatedFilter",
                "KalturaSearchAssetFilter"
              ]
            },
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[idIn]",
            "description": "Comma separated list of EPG channel ids to search within.",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaSearchAssetFilter"
              ]
            },
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[query]",
            "description": "Query",
            "x-showCondition": {
              "name": "filter[objectType]",
              "value": [
                "KalturaSearchExternalFilter"
              ]
            },
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageSize]",
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "x-group": "pager"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageIndex]",
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "x-group": "pager"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaAssetFilter`",
            "subGroups": []
          },
          {
            "name": "pager",
            "description": "Object Type: `KalturaFilterPager`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetListResponse"
            }
          }
        }
      }
    },
    "/service/assetfile/action/getContext": {
      "get": {
        "description": "get KalturaAssetFileContext",
        "tags": [
          "assetFile"
        ],
        "operationId": "assetFile.getContext",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "Asset file identifier",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetFileContext"
            }
          }
        }
      }
    },
    "/service/assethistory/action/list": {
      "get": {
        "description": "Get recently watched media for user, ordered by recently watched first.",
        "tags": [
          "assetHistory"
        ],
        "operationId": "assetHistory.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[typeIn]",
            "description": "Comma separated list of asset types to search within.\r\n            Possible values: 0 – EPG linear programs entries, any media type ID (according to media type IDs defined dynamically in the system).\r\n            If omitted – all types should be included.",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[assetIdIn]",
            "description": "Comma separated list of asset identifiers.",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[statusEqual]",
            "enum": [
              "progress",
              "done",
              "all"
            ],
            "x-enumLabels": [
              "PROGRESS",
              "DONE",
              "ALL"
            ],
            "description": "Enum Type: `KalturaWatchStatus`\n\nWhich type of recently watched media to include in the result – those that finished watching, those that are in progress or both.\r\n            If omitted or specified filter = all – return all types.\r\n            Allowed values: progress – return medias that are in-progress, done – return medias that finished watching.",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageSize]",
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "x-group": "pager"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageIndex]",
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "x-group": "pager"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaAssetHistoryFilter`",
            "subGroups": []
          },
          {
            "name": "pager",
            "description": "Object Type: `KalturaFilterPager`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetHistoryListResponse"
            }
          }
        }
      }
    },
    "/service/assetstatistics/action/query": {
      "get": {
        "description": "Returns statistics for given list of assets by type and / or time period",
        "tags": [
          "assetStatistics"
        ],
        "operationId": "assetStatistics.query",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "query[assetIdIn]",
            "description": "Comma separated list of asset identifiers.",
            "x-group": "query"
          },
          {
            "type": "string",
            "in": "query",
            "name": "query[assetTypeEqual]",
            "enum": [
              "media",
              "recording",
              "epg"
            ],
            "x-enumLabels": [
              "MEDIA",
              "RECORDING",
              "EPG"
            ],
            "description": "Enum Type: `KalturaAssetType`\n\nAsset type",
            "x-group": "query"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "query[startDateGreaterThanOrEqual]",
            "description": "The beginning of the time window to get the statistics for (in epoch).",
            "x-group": "query"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "query[endDateGreaterThanOrEqual]",
            "description": "/// The end of the time window to get the statistics for (in epoch).",
            "x-group": "query"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "query",
            "description": "Object Type: `KalturaAssetStatisticsQuery`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaAssetStatisticsListResponse"
            }
          }
        }
      }
    },
    "/service/bookmark/action/add": {
      "get": {
        "description": "Report player position and action for the user on the watched asset. Player position is used to later allow resume watching.",
        "tags": [
          "bookmark"
        ],
        "operationId": "bookmark.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "bookmark[id]",
            "description": "Internal identifier of the asset",
            "x-group": "bookmark"
          },
          {
            "type": "string",
            "in": "query",
            "name": "bookmark[type]",
            "enum": [
              "media",
              "recording",
              "epg"
            ],
            "x-enumLabels": [
              "MEDIA",
              "RECORDING",
              "EPG"
            ],
            "description": "Enum Type: `KalturaAssetType`\n\nThe type of the asset. Possible values: media, recording, epg",
            "x-group": "bookmark"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "bookmark[position]",
            "description": "The position of the user in the specific asset (in seconds)",
            "x-group": "bookmark"
          },
          {
            "type": "string",
            "in": "query",
            "name": "bookmark[positionOwner]",
            "enum": [
              "household",
              "user"
            ],
            "x-enumLabels": [
              "HOUSEHOLD",
              "USER"
            ],
            "description": "Enum Type: `KalturaPositionOwner`\n\nIndicates who is the owner of this position",
            "x-group": "bookmark"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "bookmark[finishedWatching]",
            "description": "Specifies whether the user&#39;s current position exceeded 95% of the duration",
            "x-group": "bookmark"
          },
          {
            "type": "string",
            "in": "query",
            "name": "bookmark[playerData][action]",
            "enum": [
              "HIT",
              "PLAY",
              "STOP",
              "PAUSE",
              "FIRST_PLAY",
              "SWOOSH",
              "FULL_SCREEN",
              "SEND_TO_FRIEND",
              "LOAD",
              "FULL_SCREEN_EXIT",
              "FINISH",
              "ERROR",
              "BITRATE_CHANGE",
              "NONE"
            ],
            "x-enumLabels": [
              "HIT",
              "PLAY",
              "STOP",
              "PAUSE",
              "FIRST_PLAY",
              "SWOOSH",
              "FULL_SCREEN",
              "SEND_TO_FRIEND",
              "LOAD",
              "FULL_SCREEN_EXIT",
              "FINISH",
              "ERROR",
              "BITRATE_CHANGE",
              "NONE"
            ],
            "description": "Enum Type: `KalturaBookmarkActionType`\n\nAction",
            "x-group": "bookmark[playerData]"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "bookmark[playerData][averageBitrate]",
            "description": "Average Bitrate",
            "x-group": "bookmark[playerData]"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "bookmark[playerData][totalBitrate]",
            "description": "Total Bitrate",
            "x-group": "bookmark[playerData]"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "bookmark[playerData][currentBitrate]",
            "description": "Current Bitrate",
            "x-group": "bookmark[playerData]"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "bookmark[playerData][fileId]",
            "description": "Identifier of the file",
            "x-group": "bookmark[playerData]"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "bookmark",
            "description": "Object Type: `KalturaBookmark`",
            "subGroups": [
              {
                "name": "bookmark[playerData]"
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/bookmark/action/list": {
      "get": {
        "description": "Returns player position record/s for the requested asset and the requesting user. \r\n            If default user makes the request – player position records are provided for all of the users in the household.\r\n            If non-default user makes the request - player position records are provided for the requesting user and the default user of the household.",
        "tags": [
          "bookmark"
        ],
        "operationId": "bookmark.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[assetIdIn]",
            "description": "Comma separated list of assets identifiers",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[assetTypeEqual]",
            "enum": [
              "media",
              "recording",
              "epg"
            ],
            "x-enumLabels": [
              "MEDIA",
              "RECORDING",
              "EPG"
            ],
            "description": "Enum Type: `KalturaAssetType`\n\nAsset type",
            "x-group": "filter"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaBookmarkFilter`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBookmarkListResponse"
            }
          }
        }
      }
    },
    "/service/cdnadapterprofile/action/add": {
      "get": {
        "description": "Insert new CDN adapter for partner",
        "tags": [
          "cdnAdapterProfile"
        ],
        "operationId": "cdnAdapterProfile.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "adapter[name]",
            "description": "CDNR adapter name",
            "x-group": "adapter"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "adapter[isActive]",
            "description": "CDN adapter active status",
            "x-group": "adapter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "adapter[adapterUrl]",
            "description": "CDN adapter URL",
            "x-group": "adapter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "adapter[baseUrl]",
            "description": "CDN adapter base URL",
            "x-group": "adapter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "adapter[systemName]",
            "description": "CDN adapter alias",
            "x-group": "adapter"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "adapter",
            "description": "Object Type: `KalturaCDNAdapterProfile`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDNAdapterProfile"
            }
          }
        }
      }
    },
    "/service/cdnadapterprofile/action/delete": {
      "get": {
        "description": "Delete CDN adapter by CDN adapter id",
        "tags": [
          "cdnAdapterProfile"
        ],
        "operationId": "cdnAdapterProfile.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "adapterId",
            "in": "query",
            "description": "CDN adapter identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/cdnadapterprofile/action/generateSharedSecret": {
      "get": {
        "description": "Generate CDN adapter shared secret",
        "tags": [
          "cdnAdapterProfile"
        ],
        "operationId": "cdnAdapterProfile.generateSharedSecret",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "adapterId",
            "in": "query",
            "description": "CDN adapter identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDNAdapterProfile"
            }
          }
        }
      }
    },
    "/service/cdnadapterprofile/action/list": {
      "get": {
        "description": "Returns all CDN adapters for partner",
        "tags": [
          "cdnAdapterProfile"
        ],
        "operationId": "cdnAdapterProfile.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDNAdapterProfileListResponse"
            }
          }
        }
      }
    },
    "/service/cdnadapterprofile/action/update": {
      "get": {
        "description": "Update CDN adapter details",
        "tags": [
          "cdnAdapterProfile"
        ],
        "operationId": "cdnAdapterProfile.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "adapterId",
            "in": "query",
            "description": "CDN adapter id to update",
            "type": "integer",
            "required": false
          },
          {
            "type": "string",
            "in": "query",
            "name": "adapter[name]",
            "description": "CDNR adapter name",
            "x-group": "adapter"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "adapter[isActive]",
            "description": "CDN adapter active status",
            "x-group": "adapter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "adapter[adapterUrl]",
            "description": "CDN adapter URL",
            "x-group": "adapter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "adapter[baseUrl]",
            "description": "CDN adapter base URL",
            "x-group": "adapter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "adapter[systemName]",
            "description": "CDN adapter alias",
            "x-group": "adapter"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "adapter",
            "description": "Object Type: `KalturaCDNAdapterProfile`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDNAdapterProfile"
            }
          }
        }
      }
    },
    "/service/cdnpartnersettings/action/get": {
      "get": {
        "description": "Retrieve the partner’s CDN settings (default adapters)",
        "tags": [
          "cdnPartnerSettings"
        ],
        "operationId": "cdnPartnerSettings.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDNPartnerSettings"
            }
          }
        }
      }
    },
    "/service/cdnpartnersettings/action/update": {
      "get": {
        "description": "Configure the partner’s CDN settings (default adapters)",
        "tags": [
          "cdnPartnerSettings"
        ],
        "operationId": "cdnPartnerSettings.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "settings[defaultAdapterId]",
            "description": "Default CDN adapter identifier",
            "x-group": "settings"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "settings[defaultRecordingAdapterId]",
            "description": "Default recording CDN adapter identifier",
            "x-group": "settings"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "settings",
            "description": "Object Type: `KalturaCDNPartnerSettings`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDNPartnerSettings"
            }
          }
        }
      }
    },
    "/service/cdvradapterprofile/action/add": {
      "get": {
        "description": "Insert new C-DVR adapter for partner",
        "tags": [
          "cDVRAdapterProfile"
        ],
        "operationId": "cDVRAdapterProfile.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "adapter[name]",
            "description": "C-DVR adapter name",
            "x-group": "adapter"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "adapter[isActive]",
            "description": "C-DVR adapter active status",
            "x-group": "adapter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "adapter[adapterUrl]",
            "description": "C-DVR adapter adapter URL",
            "x-group": "adapter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "adapter[externalIdentifier]",
            "description": "C-DVR adapter external identifier",
            "x-group": "adapter"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "adapter[dynamicLinksSupport]",
            "description": "Indicates whether the C-DVR adapter supports dynamic URLs",
            "x-group": "adapter"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "adapter",
            "description": "Object Type: `KalturaCDVRAdapterProfile`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDVRAdapterProfile"
            }
          }
        }
      }
    },
    "/service/cdvradapterprofile/action/delete": {
      "get": {
        "description": "Delete C-DVR adapter by C-DVR adapter id",
        "tags": [
          "cDVRAdapterProfile"
        ],
        "operationId": "cDVRAdapterProfile.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "adapterId",
            "in": "query",
            "description": "C-DVR adapter identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/cdvradapterprofile/action/generateSharedSecret": {
      "get": {
        "description": "Generate C-DVR adapter shared secret",
        "tags": [
          "cDVRAdapterProfile"
        ],
        "operationId": "cDVRAdapterProfile.generateSharedSecret",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "adapterId",
            "in": "query",
            "description": "C-DVR adapter identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDVRAdapterProfile"
            }
          }
        }
      }
    },
    "/service/cdvradapterprofile/action/list": {
      "get": {
        "description": "Returns all C-DVR adapters for partner",
        "tags": [
          "cDVRAdapterProfile"
        ],
        "operationId": "cDVRAdapterProfile.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDVRAdapterProfileListResponse"
            }
          }
        }
      }
    },
    "/service/cdvradapterprofile/action/update": {
      "get": {
        "description": "Update C-DVR adapter details",
        "tags": [
          "cDVRAdapterProfile"
        ],
        "operationId": "cDVRAdapterProfile.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "adapterId",
            "in": "query",
            "description": "C-DVR adapter identifier",
            "type": "integer",
            "required": false
          },
          {
            "type": "string",
            "in": "query",
            "name": "adapter[name]",
            "description": "C-DVR adapter name",
            "x-group": "adapter"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "adapter[isActive]",
            "description": "C-DVR adapter active status",
            "x-group": "adapter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "adapter[adapterUrl]",
            "description": "C-DVR adapter adapter URL",
            "x-group": "adapter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "adapter[externalIdentifier]",
            "description": "C-DVR adapter external identifier",
            "x-group": "adapter"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "adapter[dynamicLinksSupport]",
            "description": "Indicates whether the C-DVR adapter supports dynamic URLs",
            "x-group": "adapter"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "adapter",
            "description": "Object Type: `KalturaCDVRAdapterProfile`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCDVRAdapterProfile"
            }
          }
        }
      }
    },
    "/service/channel/action/add": {
      "get": {
        "description": "Insert new channel for partner. Currently supports only KSQL channel",
        "tags": [
          "channel"
        ],
        "operationId": "channel.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "channel[name]",
            "description": "Channel name",
            "x-group": "channel"
          },
          {
            "type": "string",
            "in": "query",
            "name": "channel[description]",
            "description": "Cannel description",
            "x-group": "channel"
          },
          {
            "type": "string",
            "in": "query",
            "name": "channel[filterExpression]",
            "description": "Filter expression",
            "x-group": "channel"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "channel[isActive]",
            "description": "active status",
            "x-group": "channel"
          },
          {
            "type": "string",
            "in": "query",
            "name": "channel[order]",
            "enum": [
              "RELEVANCY_DESC",
              "NAME_ASC",
              "NAME_DESC",
              "VIEWS_DESC",
              "RATINGS_DESC",
              "VOTES_DESC",
              "START_DATE_DESC",
              "START_DATE_ASC",
              "LIKES_DESC"
            ],
            "x-enumLabels": [
              "RELEVANCY_DESC",
              "NAME_ASC",
              "NAME_DESC",
              "VIEWS_DESC",
              "RATINGS_DESC",
              "VOTES_DESC",
              "START_DATE_DESC",
              "START_DATE_ASC",
              "LIKES_DESC"
            ],
            "description": "Enum Type: `KalturaAssetOrderBy`\n\nChannel order",
            "x-group": "channel"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "channel",
            "description": "Object Type: `KalturaChannel`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaChannel"
            }
          }
        }
      }
    },
    "/service/channel/action/delete": {
      "get": {
        "description": "Delete channel by its channel id",
        "tags": [
          "channel"
        ],
        "operationId": "channel.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "channelId",
            "in": "query",
            "description": "channel identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/channel/action/get": {
      "get": {
        "description": "Returns channel info",
        "tags": [
          "channel"
        ],
        "operationId": "channel.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "Channel Identifier",
            "type": "integer",
            "required": false,
            "x-dynamicEnum": {
              "path": "/service/channel/action/list",
              "method": "get",
              "array": "objects",
              "label": "id",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaChannel"
            }
          }
        }
      }
    },
    "/service/channel/action/update": {
      "get": {
        "description": "Update channel details. Currently supports only KSQL channel",
        "tags": [
          "channel"
        ],
        "operationId": "channel.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "channelId",
            "in": "query",
            "description": "Channel identifier",
            "type": "integer",
            "required": false
          },
          {
            "type": "string",
            "in": "query",
            "name": "channel[name]",
            "description": "Channel name",
            "x-group": "channel"
          },
          {
            "type": "string",
            "in": "query",
            "name": "channel[description]",
            "description": "Cannel description",
            "x-group": "channel"
          },
          {
            "type": "string",
            "in": "query",
            "name": "channel[filterExpression]",
            "description": "Filter expression",
            "x-group": "channel"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "channel[isActive]",
            "description": "active status",
            "x-group": "channel"
          },
          {
            "type": "string",
            "in": "query",
            "name": "channel[order]",
            "enum": [
              "RELEVANCY_DESC",
              "NAME_ASC",
              "NAME_DESC",
              "VIEWS_DESC",
              "RATINGS_DESC",
              "VOTES_DESC",
              "START_DATE_DESC",
              "START_DATE_ASC",
              "LIKES_DESC"
            ],
            "x-enumLabels": [
              "RELEVANCY_DESC",
              "NAME_ASC",
              "NAME_DESC",
              "VIEWS_DESC",
              "RATINGS_DESC",
              "VOTES_DESC",
              "START_DATE_DESC",
              "START_DATE_ASC",
              "LIKES_DESC"
            ],
            "description": "Enum Type: `KalturaAssetOrderBy`\n\nChannel order",
            "x-group": "channel"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "channel",
            "description": "Object Type: `KalturaChannel`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaChannel"
            }
          }
        }
      }
    },
    "/service/coupon/action/get": {
      "get": {
        "description": "Returns information about a coupon",
        "tags": [
          "coupon"
        ],
        "operationId": "coupon.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "code",
            "in": "query",
            "description": "Coupon code",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCoupon"
            }
          }
        }
      }
    },
    "/service/entitlement/action/cancel": {
      "get": {
        "description": "Immediately cancel a subscription, PPV or collection. Cancel is possible only if within cancellation window and content not already consumed",
        "tags": [
          "entitlement"
        ],
        "operationId": "entitlement.cancel",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "assetId",
            "in": "query",
            "description": "The mediaFileID to cancel",
            "type": "integer",
            "required": false
          },
          {
            "name": "transactionType",
            "in": "query",
            "description": "Enum Type: `KalturaTransactionType`\n\nThe transaction type for the cancelation",
            "type": "string",
            "required": false,
            "enum": [
              "ppv",
              "subscription",
              "collection"
            ],
            "x-enumLabels": [
              "PPV",
              "SUBSCRIPTION",
              "COLLECTION"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/entitlement/action/cancelRenewal": {
      "get": {
        "description": "Cancel a household service subscription at the next renewal. The subscription stays valid till the next renewal.",
        "tags": [
          "entitlement"
        ],
        "operationId": "entitlement.cancelRenewal",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "subscriptionId",
            "in": "query",
            "description": "Subscription Code",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/entitlement/action/externalReconcile": {
      "get": {
        "description": "Reconcile the user household&#39;s entitlements with an external entitlements source. This request is frequency protected to avoid too frequent calls per household.",
        "tags": [
          "entitlement"
        ],
        "operationId": "entitlement.externalReconcile",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/entitlement/action/forceCancel": {
      "get": {
        "description": "Immediately cancel a subscription, PPV or collection. Cancel applies regardless of cancellation window and content consumption status",
        "tags": [
          "entitlement"
        ],
        "operationId": "entitlement.forceCancel",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "assetId",
            "in": "query",
            "description": "The mediaFileID to cancel",
            "type": "integer",
            "required": false
          },
          {
            "name": "transactionType",
            "in": "query",
            "description": "Enum Type: `KalturaTransactionType`\n\nThe transaction type for the cancelation",
            "type": "string",
            "required": false,
            "enum": [
              "ppv",
              "subscription",
              "collection"
            ],
            "x-enumLabels": [
              "PPV",
              "SUBSCRIPTION",
              "COLLECTION"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/entitlement/action/grant": {
      "get": {
        "description": "Grant household for an entitlement for a PPV or Subscription.",
        "tags": [
          "entitlement"
        ],
        "operationId": "entitlement.grant",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "productId",
            "in": "query",
            "description": "Identifier for the product package from which this content is offered",
            "type": "integer",
            "required": false
          },
          {
            "name": "productType",
            "in": "query",
            "description": "Enum Type: `KalturaTransactionType`\n\nProduct package type. Possible values: PPV, Subscription, Collection",
            "type": "string",
            "required": false,
            "enum": [
              "ppv",
              "subscription",
              "collection"
            ],
            "x-enumLabels": [
              "PPV",
              "SUBSCRIPTION",
              "COLLECTION"
            ]
          },
          {
            "name": "history",
            "in": "query",
            "description": "Controls if the new entitlements grant will appear in the user’s history. True – will add a history entry. False (or if ommited) – no history entry will be added",
            "type": "boolean",
            "required": false
          },
          {
            "name": "contentId",
            "in": "query",
            "description": "Identifier for the content. Relevant only if Product type = PPV",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/entitlement/action/list": {
      "get": {
        "description": "Gets all the entitled media items for a household",
        "tags": [
          "entitlement"
        ],
        "operationId": "entitlement.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[entitlementTypeEqual]",
            "enum": [
              "ppv",
              "subscription",
              "collection"
            ],
            "x-enumLabels": [
              "PPV",
              "SUBSCRIPTION",
              "COLLECTION"
            ],
            "description": "Enum Type: `KalturaTransactionType`\n\nThe type of the entitlements to return",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[entityReferenceEqual]",
            "enum": [
              "user",
              "household"
            ],
            "x-enumLabels": [
              "USER",
              "HOUSEHOLD"
            ],
            "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
            "x-group": "filter"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "filter[isExpiredEqual]",
            "description": "Is expired",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageSize]",
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "x-group": "pager"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageIndex]",
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "x-group": "pager"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaEntitlementFilter`",
            "subGroups": []
          },
          {
            "name": "pager",
            "description": "Object Type: `KalturaFilterPager`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaEntitlementListResponse"
            }
          }
        }
      }
    },
    "/service/exporttask/action/add": {
      "get": {
        "description": "Adds a new bulk export task",
        "tags": [
          "exportTask"
        ],
        "operationId": "exportTask.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "task[alias]",
            "description": "Alias for the task used to solicit an export using API",
            "x-group": "task"
          },
          {
            "type": "string",
            "in": "query",
            "name": "task[name]",
            "description": "Task display name",
            "x-group": "task"
          },
          {
            "type": "string",
            "in": "query",
            "name": "task[dataType]",
            "enum": [
              "vod",
              "epg",
              "users"
            ],
            "x-enumLabels": [
              "VOD",
              "EPG",
              "USERS"
            ],
            "description": "Enum Type: `KalturaExportDataType`\n\nThe data type exported in this task",
            "x-group": "task"
          },
          {
            "type": "string",
            "in": "query",
            "name": "task[filter]",
            "description": "Filter to apply on the export, utilize KSQL.\r\n            Note: KSQL currently applies to media assets only. It cannot be used for USERS filtering",
            "x-group": "task"
          },
          {
            "type": "string",
            "in": "query",
            "name": "task[exportType]",
            "enum": [
              "full",
              "incremental"
            ],
            "x-enumLabels": [
              "FULL",
              "INCREMENTAL"
            ],
            "description": "Enum Type: `KalturaExportType`\n\nType of export batch – full or incremental",
            "x-group": "task"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "task[frequency]",
            "description": "How often the export should occur, reasonable minimum threshold should apply, configurable in minutes",
            "x-group": "task"
          },
          {
            "type": "string",
            "in": "query",
            "name": "task[notificationUrl]",
            "description": "The URL for sending a notification when the task&#39;s export process is done",
            "x-group": "task"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "task[isActive]",
            "description": "Indicates if the task is active or not",
            "x-group": "task"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "task",
            "description": "Object Type: `KalturaExportTask`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExportTask"
            }
          }
        }
      }
    },
    "/service/exporttask/action/delete": {
      "get": {
        "description": "Deletes an existing bulk export task by task identifier",
        "tags": [
          "exportTask"
        ],
        "operationId": "exportTask.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "The identifier of the task to delete",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/exporttask/action/get": {
      "get": {
        "description": "Gets an existing bulk export task by task identifier",
        "tags": [
          "exportTask"
        ],
        "operationId": "exportTask.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "The identifier of the task to get",
            "type": "integer",
            "required": false,
            "x-dynamicEnum": {
              "path": "/service/exporttask/action/list",
              "method": "get",
              "array": "objects",
              "label": "name",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExportTask"
            }
          }
        }
      }
    },
    "/service/exporttask/action/list": {
      "get": {
        "description": "Returns bulk export tasks by tasks identifiers",
        "tags": [
          "exportTask"
        ],
        "operationId": "exportTask.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[idIn]",
            "description": "Comma separated tasks identifiers",
            "x-group": "filter"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaExportTaskFilter`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExportTaskListResponse"
            }
          }
        }
      }
    },
    "/service/exporttask/action/update": {
      "get": {
        "description": "Updates an existing bulk export task by task identifier",
        "tags": [
          "exportTask"
        ],
        "operationId": "exportTask.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "The task id to update",
            "type": "integer",
            "required": false
          },
          {
            "type": "string",
            "in": "query",
            "name": "task[alias]",
            "description": "Alias for the task used to solicit an export using API",
            "x-group": "task"
          },
          {
            "type": "string",
            "in": "query",
            "name": "task[name]",
            "description": "Task display name",
            "x-group": "task"
          },
          {
            "type": "string",
            "in": "query",
            "name": "task[dataType]",
            "enum": [
              "vod",
              "epg",
              "users"
            ],
            "x-enumLabels": [
              "VOD",
              "EPG",
              "USERS"
            ],
            "description": "Enum Type: `KalturaExportDataType`\n\nThe data type exported in this task",
            "x-group": "task"
          },
          {
            "type": "string",
            "in": "query",
            "name": "task[filter]",
            "description": "Filter to apply on the export, utilize KSQL.\r\n            Note: KSQL currently applies to media assets only. It cannot be used for USERS filtering",
            "x-group": "task"
          },
          {
            "type": "string",
            "in": "query",
            "name": "task[exportType]",
            "enum": [
              "full",
              "incremental"
            ],
            "x-enumLabels": [
              "FULL",
              "INCREMENTAL"
            ],
            "description": "Enum Type: `KalturaExportType`\n\nType of export batch – full or incremental",
            "x-group": "task"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "task[frequency]",
            "description": "How often the export should occur, reasonable minimum threshold should apply, configurable in minutes",
            "x-group": "task"
          },
          {
            "type": "string",
            "in": "query",
            "name": "task[notificationUrl]",
            "description": "The URL for sending a notification when the task&#39;s export process is done",
            "x-group": "task"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "task[isActive]",
            "description": "Indicates if the task is active or not",
            "x-group": "task"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "task",
            "description": "Object Type: `KalturaExportTask`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExportTask"
            }
          }
        }
      }
    },
    "/service/externalchannelprofile/action/add": {
      "get": {
        "description": "Insert new External channel for partner",
        "tags": [
          "externalChannelProfile"
        ],
        "operationId": "externalChannelProfile.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "externalChannel[name]",
            "description": "External channel name",
            "x-group": "externalChannel"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "externalChannel[isActive]",
            "description": "External channel active status",
            "x-group": "externalChannel"
          },
          {
            "type": "string",
            "in": "query",
            "name": "externalChannel[externalIdentifier]",
            "description": "External channel external identifier",
            "x-group": "externalChannel"
          },
          {
            "type": "string",
            "in": "query",
            "name": "externalChannel[filterExpression]",
            "description": "Filter expression",
            "x-group": "externalChannel"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "externalChannel[recommendationEngineId]",
            "description": "Recommendation engine id",
            "x-group": "externalChannel"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "externalChannel",
            "description": "Object Type: `KalturaExternalChannelProfile`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExternalChannelProfile"
            }
          }
        }
      }
    },
    "/service/externalchannelprofile/action/delete": {
      "get": {
        "description": "Delete External channel by External channel id",
        "tags": [
          "externalChannelProfile"
        ],
        "operationId": "externalChannelProfile.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "externalChannelId",
            "in": "query",
            "description": "External channel identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/externalchannelprofile/action/list": {
      "get": {
        "description": "Returns all External channels for partner",
        "tags": [
          "externalChannelProfile"
        ],
        "operationId": "externalChannelProfile.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExternalChannelProfileListResponse"
            }
          }
        }
      }
    },
    "/service/externalchannelprofile/action/update": {
      "get": {
        "description": "Update External channel details",
        "tags": [
          "externalChannelProfile"
        ],
        "operationId": "externalChannelProfile.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "externalChannelId",
            "in": "query",
            "description": "External channel identifier",
            "type": "integer",
            "required": false
          },
          {
            "type": "string",
            "in": "query",
            "name": "externalChannel[name]",
            "description": "External channel name",
            "x-group": "externalChannel"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "externalChannel[isActive]",
            "description": "External channel active status",
            "x-group": "externalChannel"
          },
          {
            "type": "string",
            "in": "query",
            "name": "externalChannel[externalIdentifier]",
            "description": "External channel external identifier",
            "x-group": "externalChannel"
          },
          {
            "type": "string",
            "in": "query",
            "name": "externalChannel[filterExpression]",
            "description": "Filter expression",
            "x-group": "externalChannel"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "externalChannel[recommendationEngineId]",
            "description": "Recommendation engine id",
            "x-group": "externalChannel"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "externalChannel",
            "description": "Object Type: `KalturaExternalChannelProfile`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaExternalChannelProfile"
            }
          }
        }
      }
    },
    "/service/favorite/action/add": {
      "get": {
        "description": "Add media to user&#39;s favorite list",
        "tags": [
          "favorite"
        ],
        "operationId": "favorite.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "favorite[assetId]",
            "description": "AssetInfo Model",
            "x-group": "favorite"
          },
          {
            "type": "string",
            "in": "query",
            "name": "favorite[extraData]",
            "description": "Extra Value",
            "x-group": "favorite"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "favorite",
            "description": "Object Type: `KalturaFavorite`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFavorite"
            }
          }
        }
      }
    },
    "/service/favorite/action/delete": {
      "get": {
        "description": "Remove media from user&#39;s favorite list",
        "tags": [
          "favorite"
        ],
        "operationId": "favorite.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "Media identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/favorite/action/list": {
      "get": {
        "description": "Retrieving users&#39; favorites",
        "tags": [
          "favorite"
        ],
        "operationId": "favorite.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[mediaTypeIn]",
            "description": "Media type to filter by the favorite assets",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[mediaIdIn]",
            "description": "Media identifiers from which to filter the favorite assets",
            "x-group": "filter"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaFavoriteFilter`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFavoriteListResponse"
            }
          }
        }
      }
    },
    "/service/followtvseries/action/add": {
      "get": {
        "description": "Add a user&#39;s tv series follow.\r\n            Possible status codes: UserAlreadyFollowing = 8013, NotFound = 500007, InvalidAssetId = 4024",
        "tags": [
          "followTvSeries"
        ],
        "operationId": "followTvSeries.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "x-parameterGroups": [
          {
            "name": "followTvSeries",
            "description": "Object Type: `KalturaFollowTvSeries`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFollowTvSeries"
            }
          }
        }
      }
    },
    "/service/followtvseries/action/delete": {
      "get": {
        "description": "Delete a user&#39;s tv series follow.\r\n            Possible status codes: UserNotFollowing = 8012, NotFound = 500007, InvalidAssetId = 4024, AnnouncementNotFound = 8006",
        "tags": [
          "followTvSeries"
        ],
        "operationId": "followTvSeries.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "assetId",
            "in": "query",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/followtvseries/action/list": {
      "get": {
        "description": "List user&#39;s tv series follows.\r\n            Possible status codes:",
        "tags": [
          "followTvSeries"
        ],
        "operationId": "followTvSeries.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageSize]",
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "x-group": "pager"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageIndex]",
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "x-group": "pager"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaFollowTvSeriesFilter`",
            "subGroups": []
          },
          {
            "name": "pager",
            "description": "Object Type: `KalturaFilterPager`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaFollowTvSeriesListResponse"
            }
          }
        }
      }
    },
    "/service/homenetwork/action/add": {
      "get": {
        "description": "Add a new home network to a household",
        "tags": [
          "homeNetwork"
        ],
        "operationId": "homeNetwork.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "homeNetwork[externalId]",
            "description": "Home network identifier",
            "x-group": "homeNetwork"
          },
          {
            "type": "string",
            "in": "query",
            "name": "homeNetwork[name]",
            "description": "Home network name",
            "x-group": "homeNetwork"
          },
          {
            "type": "string",
            "in": "query",
            "name": "homeNetwork[description]",
            "description": "Home network description",
            "x-group": "homeNetwork"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "homeNetwork[isActive]",
            "description": "Is home network is active",
            "x-group": "homeNetwork"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "homeNetwork",
            "description": "Object Type: `KalturaHomeNetwork`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHomeNetwork"
            }
          }
        }
      }
    },
    "/service/homenetwork/action/delete": {
      "get": {
        "description": "Delete household’s existing home network",
        "tags": [
          "homeNetwork"
        ],
        "operationId": "homeNetwork.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "externalId",
            "in": "query",
            "description": "The network to update",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/homenetwork/action/list": {
      "get": {
        "description": "Retrieve the household’s home networks",
        "tags": [
          "homeNetwork"
        ],
        "operationId": "homeNetwork.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHomeNetworkListResponse"
            }
          }
        }
      }
    },
    "/service/homenetwork/action/update": {
      "get": {
        "description": "Update and existing home network for a household",
        "tags": [
          "homeNetwork"
        ],
        "operationId": "homeNetwork.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "externalId",
            "in": "query",
            "description": "Home network identifier",
            "type": "string",
            "required": false
          },
          {
            "type": "string",
            "in": "query",
            "name": "homeNetwork[externalId]",
            "description": "Home network identifier",
            "x-group": "homeNetwork"
          },
          {
            "type": "string",
            "in": "query",
            "name": "homeNetwork[name]",
            "description": "Home network name",
            "x-group": "homeNetwork"
          },
          {
            "type": "string",
            "in": "query",
            "name": "homeNetwork[description]",
            "description": "Home network description",
            "x-group": "homeNetwork"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "homeNetwork[isActive]",
            "description": "Is home network is active",
            "x-group": "homeNetwork"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "homeNetwork",
            "description": "Object Type: `KalturaHomeNetwork`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHomeNetwork"
            }
          }
        }
      }
    },
    "/service/household/action/add": {
      "get": {
        "description": "Creates a household for the user",
        "tags": [
          "household"
        ],
        "operationId": "household.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "household[name]",
            "description": "Household name",
            "x-group": "household"
          },
          {
            "type": "string",
            "in": "query",
            "name": "household[description]",
            "description": "Household description",
            "x-group": "household"
          },
          {
            "type": "string",
            "in": "query",
            "name": "household[externalId]",
            "description": "Household external identifier",
            "x-group": "household"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "household[householdLimitationsId]",
            "description": "Household limitation module identifier",
            "x-group": "household"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "household[devicesLimit]",
            "description": "The max number of the devices that can be added to the household",
            "x-group": "household"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "household[usersLimit]",
            "description": "The max number of the users that can be added to the household",
            "x-group": "household"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "household[concurrentLimit]",
            "description": "The max number of concurrent streams in the household",
            "x-group": "household"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "household[regionId]",
            "description": "The households region identifier",
            "x-group": "household"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "household[isFrequencyEnabled]",
            "description": "Is household frequency enabled",
            "x-group": "household"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "household[frequencyNextDeviceAction]",
            "description": "The next time a device is allowed to be removed from the household (epoch)",
            "x-group": "household"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "household[frequencyNextUserAction]",
            "description": "The next time a user is allowed to be removed from the household (epoch)",
            "x-group": "household"
          },
          {
            "type": "string",
            "in": "query",
            "name": "household[restriction]",
            "enum": [
              "not_restricted",
              "user_master_restricted",
              "device_master_restricted",
              "device_user_master_restricted"
            ],
            "x-enumLabels": [
              "NOT_RESTRICTED",
              "USER_MASTER_RESTRICTED",
              "DEVICE_MASTER_RESTRICTED",
              "DEVICE_USER_MASTER_RESTRICTED"
            ],
            "description": "Enum Type: `KalturaHouseholdRestriction`\n\nHousehold restriction",
            "x-group": "household"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "household",
            "description": "Object Type: `KalturaHousehold`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHousehold"
            }
          }
        }
      }
    },
    "/service/household/action/get": {
      "get": {
        "description": "Returns the household model",
        "tags": [
          "household"
        ],
        "operationId": "household.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHousehold"
            }
          }
        }
      }
    },
    "/service/household/action/resetFrequency": {
      "get": {
        "description": "Reset a household’s time limitation for removing user or device",
        "tags": [
          "household"
        ],
        "operationId": "household.resetFrequency",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "frequencyType",
            "in": "query",
            "description": "Enum Type: `KalturaHouseholdFrequencyType`\n\nPossible values: devices – reset the device change frequency. \r\n            users – reset the user add/remove frequency",
            "type": "string",
            "required": false,
            "enum": [
              "devices",
              "users"
            ],
            "x-enumLabels": [
              "DEVICES",
              "USERS"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHousehold"
            }
          }
        }
      }
    },
    "/service/household/action/resume": {
      "get": {
        "description": "Resumed a given household service to its previous service settings",
        "tags": [
          "household"
        ],
        "operationId": "household.resume",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/household/action/suspend": {
      "get": {
        "description": "Suspend a given household service. Sets the household status to “suspended&quot;.The household service settings are maintained for later resume",
        "tags": [
          "household"
        ],
        "operationId": "household.suspend",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/household/action/update": {
      "get": {
        "description": "Update the household name and description",
        "tags": [
          "household"
        ],
        "operationId": "household.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "household[name]",
            "description": "Household name",
            "x-group": "household"
          },
          {
            "type": "string",
            "in": "query",
            "name": "household[description]",
            "description": "Household description",
            "x-group": "household"
          },
          {
            "type": "string",
            "in": "query",
            "name": "household[externalId]",
            "description": "Household external identifier",
            "x-group": "household"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "household[householdLimitationsId]",
            "description": "Household limitation module identifier",
            "x-group": "household"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "household[devicesLimit]",
            "description": "The max number of the devices that can be added to the household",
            "x-group": "household"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "household[usersLimit]",
            "description": "The max number of the users that can be added to the household",
            "x-group": "household"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "household[concurrentLimit]",
            "description": "The max number of concurrent streams in the household",
            "x-group": "household"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "household[regionId]",
            "description": "The households region identifier",
            "x-group": "household"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "household[isFrequencyEnabled]",
            "description": "Is household frequency enabled",
            "x-group": "household"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "household[frequencyNextDeviceAction]",
            "description": "The next time a device is allowed to be removed from the household (epoch)",
            "x-group": "household"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "household[frequencyNextUserAction]",
            "description": "The next time a user is allowed to be removed from the household (epoch)",
            "x-group": "household"
          },
          {
            "type": "string",
            "in": "query",
            "name": "household[restriction]",
            "enum": [
              "not_restricted",
              "user_master_restricted",
              "device_master_restricted",
              "device_user_master_restricted"
            ],
            "x-enumLabels": [
              "NOT_RESTRICTED",
              "USER_MASTER_RESTRICTED",
              "DEVICE_MASTER_RESTRICTED",
              "DEVICE_USER_MASTER_RESTRICTED"
            ],
            "description": "Enum Type: `KalturaHouseholdRestriction`\n\nHousehold restriction",
            "x-group": "household"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "household",
            "description": "Object Type: `KalturaHousehold`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHousehold"
            }
          }
        }
      }
    },
    "/service/householddevice/action/add": {
      "get": {
        "description": "Registers a device to a household using pin code",
        "tags": [
          "householdDevice"
        ],
        "operationId": "householdDevice.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "device[householdId]",
            "description": "Household identifier",
            "x-group": "device"
          },
          {
            "type": "string",
            "in": "query",
            "name": "device[udid]",
            "description": "Device UDID",
            "x-group": "device"
          },
          {
            "type": "string",
            "in": "query",
            "name": "device[name]",
            "description": "Device name",
            "x-group": "device"
          },
          {
            "type": "string",
            "in": "query",
            "name": "device[brand]",
            "description": "Device brand name",
            "x-group": "device"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "device[brandId]",
            "description": "Device brand identifier",
            "x-group": "device"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "device[activatedOn]",
            "description": "Device activation date (epoch)",
            "x-group": "device"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "device",
            "description": "Object Type: `KalturaHouseholdDevice`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdDevice"
            }
          }
        }
      }
    },
    "/service/householddevice/action/addByPin": {
      "get": {
        "description": "Registers a device to a household using pin code",
        "tags": [
          "householdDevice"
        ],
        "operationId": "householdDevice.addByPin",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "deviceName",
            "in": "query",
            "description": "Device name",
            "type": "string",
            "required": false
          },
          {
            "name": "pin",
            "in": "query",
            "description": "Pin code",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdDevice"
            }
          }
        }
      }
    },
    "/service/householddevice/action/delete": {
      "get": {
        "description": "Removes a device from household",
        "tags": [
          "householdDevice"
        ],
        "operationId": "householdDevice.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "udid",
            "in": "query",
            "description": "device UDID",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/householddevice/action/generatePin": {
      "get": {
        "description": "Generates device pin to use when adding a device to household by pin",
        "tags": [
          "householdDevice"
        ],
        "operationId": "householdDevice.generatePin",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "udid",
            "in": "query",
            "description": "Device UDID",
            "type": "string",
            "required": false
          },
          {
            "name": "brandId",
            "in": "query",
            "description": "Device brand identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaDevicePin"
            }
          }
        }
      }
    },
    "/service/householddevice/action/get": {
      "get": {
        "description": "Returns device registration status to the supplied household",
        "tags": [
          "householdDevice"
        ],
        "operationId": "householdDevice.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdDevice"
            }
          }
        }
      }
    },
    "/service/householddevice/action/update": {
      "get": {
        "description": "Update the name of the device by UDID",
        "tags": [
          "householdDevice"
        ],
        "operationId": "householdDevice.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "udid",
            "in": "query",
            "description": "Device UDID",
            "type": "string",
            "required": false
          },
          {
            "type": "integer",
            "in": "query",
            "name": "device[householdId]",
            "description": "Household identifier",
            "x-group": "device"
          },
          {
            "type": "string",
            "in": "query",
            "name": "device[udid]",
            "description": "Device UDID",
            "x-group": "device"
          },
          {
            "type": "string",
            "in": "query",
            "name": "device[name]",
            "description": "Device name",
            "x-group": "device"
          },
          {
            "type": "string",
            "in": "query",
            "name": "device[brand]",
            "description": "Device brand name",
            "x-group": "device"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "device[brandId]",
            "description": "Device brand identifier",
            "x-group": "device"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "device[activatedOn]",
            "description": "Device activation date (epoch)",
            "x-group": "device"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "device",
            "description": "Object Type: `KalturaHouseholdDevice`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdDevice"
            }
          }
        }
      }
    },
    "/service/householddevice/action/updateStatus": {
      "get": {
        "description": "Update the name of the device by UDID",
        "tags": [
          "householdDevice"
        ],
        "operationId": "householdDevice.updateStatus",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "udid",
            "in": "query",
            "description": "Device UDID",
            "type": "string",
            "required": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "Enum Type: `KalturaDeviceStatus`\n\nDevice status",
            "type": "string",
            "required": false,
            "enum": [
              "PENDING",
              "ACTIVATED",
              "NOT_ACTIVATED"
            ],
            "x-enumLabels": [
              "PENDING",
              "ACTIVATED",
              "NOT_ACTIVATED"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/householdlimitations/action/get": {
      "get": {
        "description": "Get the limitation module by id",
        "tags": [
          "householdLimitations"
        ],
        "operationId": "householdLimitations.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "type": "integer",
            "required": false,
            "x-dynamicEnum": {
              "path": "/service/householdlimitations/action/list",
              "method": "get",
              "array": "objects",
              "label": "name",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdLimitations"
            }
          }
        }
      }
    },
    "/service/householdpaymentgateway/action/delete": {
      "get": {
        "description": "Disable payment-gateway on the household",
        "tags": [
          "householdPaymentGateway"
        ],
        "operationId": "householdPaymentGateway.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "paymentGatewayId",
            "in": "query",
            "description": "Payment Gateway Identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/householdpaymentgateway/action/set": {
      "get": {
        "description": "Enable a payment-gateway provider for the household.",
        "tags": [
          "householdPaymentGateway"
        ],
        "operationId": "householdPaymentGateway.set",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "paymentGatewayId",
            "in": "query",
            "description": "Payment Gateway Identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/householdpaymentgateway/action/getChargeID": {
      "get": {
        "description": "Get a household’s billing account identifier (charge ID) for a given payment gateway",
        "tags": [
          "householdPaymentGateway"
        ],
        "operationId": "householdPaymentGateway.getChargeID",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "paymentGatewayExternalId",
            "in": "query",
            "description": "External identifier for the payment gateway",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/householdpaymentgateway/action/list": {
      "get": {
        "description": "Get a list of all configured Payment Gateways providers available for the account. For each payment is provided with the household associated payment methods.",
        "tags": [
          "householdPaymentGateway"
        ],
        "operationId": "householdPaymentGateway.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdPaymentGatewayListResponse"
            }
          }
        }
      }
    },
    "/service/householdpaymentgateway/action/setChargeID": {
      "get": {
        "description": "Set user billing account identifier (charge ID), for a specific household and a specific payment gateway",
        "tags": [
          "householdPaymentGateway"
        ],
        "operationId": "householdPaymentGateway.setChargeID",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "paymentGatewayExternalId",
            "in": "query",
            "description": "External identifier for the payment gateway",
            "type": "string",
            "required": false
          },
          {
            "name": "chargeId",
            "in": "query",
            "description": "The billing user account identifier for this household at the given payment gateway",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/householdpaymentmethod/action/forceRemove": {
      "get": {
        "description": "Force remove of a payment method of the household.",
        "tags": [
          "householdPaymentMethod"
        ],
        "operationId": "householdPaymentMethod.forceRemove",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "paymentGatewayId",
            "in": "query",
            "description": "Payment Gateway Identifier",
            "type": "integer",
            "required": false
          },
          {
            "name": "paymentMethodId",
            "in": "query",
            "description": "Payment method Identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/householdpaymentmethod/action/list": {
      "get": {
        "description": "Get a list of all configured Payment Gateways providers available for the account. For each payment is provided with the household associated payment methods.",
        "tags": [
          "householdPaymentMethod"
        ],
        "operationId": "householdPaymentMethod.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdPaymentMethodListResponse"
            }
          }
        }
      }
    },
    "/service/householdpaymentmethod/action/remove": {
      "get": {
        "description": "Removes a payment method of the household.",
        "tags": [
          "householdPaymentMethod"
        ],
        "operationId": "householdPaymentMethod.remove",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "paymentGatewayId",
            "in": "query",
            "description": "Payment Gateway Identifier",
            "type": "integer",
            "required": false
          },
          {
            "name": "paymentMethodId",
            "in": "query",
            "description": "Payment method Identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/householdpaymentmethod/action/setAsDefault": {
      "get": {
        "description": "Set a payment method as default for the household.",
        "tags": [
          "householdPaymentMethod"
        ],
        "operationId": "householdPaymentMethod.setAsDefault",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "paymentGatewayId",
            "in": "query",
            "description": "Payment Gateway Identifier",
            "type": "integer",
            "required": false
          },
          {
            "name": "paymentMethodId",
            "in": "query",
            "description": "Payment method Identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/householdpremiumservice/action/list": {
      "get": {
        "description": "Returns all the premium services allowed for the household",
        "tags": [
          "householdPremiumService"
        ],
        "operationId": "householdPremiumService.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdPremiumServiceListResponse"
            }
          }
        }
      }
    },
    "/service/householdquota/action/get": {
      "get": {
        "description": "Returns the household&#39;s quota data",
        "tags": [
          "householdQuota"
        ],
        "operationId": "householdQuota.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdQuota"
            }
          }
        }
      }
    },
    "/service/householduser/action/add": {
      "get": {
        "description": "Adds a user to household",
        "tags": [
          "householdUser"
        ],
        "operationId": "householdUser.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "householdUser[householdId]",
            "description": "The identifier of the household",
            "x-group": "householdUser"
          },
          {
            "type": "string",
            "in": "query",
            "name": "householdUser[userId]",
            "description": "The identifier of the user",
            "x-group": "householdUser"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "householdUser[isMaster]",
            "description": "True if the user added as master use",
            "x-group": "householdUser"
          },
          {
            "type": "string",
            "in": "query",
            "name": "householdUser[householdMasterUsername]",
            "description": "The username of the household master for adding a user in status pending for the household master to approve",
            "x-group": "householdUser"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "householdUser",
            "description": "Object Type: `KalturaHouseholdUser`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaHouseholdUser"
            }
          }
        }
      }
    },
    "/service/householduser/action/delete": {
      "get": {
        "description": "Removes a user from household",
        "tags": [
          "householdUser"
        ],
        "operationId": "householdUser.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "userId",
            "in": "query",
            "description": "The identifier of the user to delete",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/inboxmessage/action/get": {
      "get": {
        "description": "TBD",
        "tags": [
          "inboxMessage"
        ],
        "operationId": "inboxMessage.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "message id",
            "type": "string",
            "required": false,
            "x-dynamicEnum": {
              "path": "/service/inboxmessage/action/list",
              "method": "get",
              "array": "objects",
              "label": "id",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaInboxMessage"
            }
          }
        }
      }
    },
    "/service/inboxmessage/action/list": {
      "get": {
        "description": "List inbox messages",
        "tags": [
          "inboxMessage"
        ],
        "operationId": "inboxMessage.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[typeIn]",
            "description": "List of inbox message types to search within.",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[createdAtGreaterThanOrEqual]",
            "description": "createdAtGreaterThanOrEqual",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[createdAtLessThanOrEqual]",
            "description": "createdAtLessThanOrEqual",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageSize]",
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "x-group": "pager"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageIndex]",
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "x-group": "pager"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaInboxMessageFilter`",
            "subGroups": []
          },
          {
            "name": "pager",
            "description": "Object Type: `KalturaFilterPager`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaInboxMessageListResponse"
            }
          }
        }
      }
    },
    "/service/inboxmessage/action/updateStatus": {
      "get": {
        "description": "TBD",
        "tags": [
          "inboxMessage"
        ],
        "operationId": "inboxMessage.updateStatus",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "type": "string",
            "required": false
          },
          {
            "name": "status",
            "in": "query",
            "description": "Enum Type: `KalturaInboxMessageStatus`",
            "type": "string",
            "required": false,
            "enum": [
              "Unread",
              "Read",
              "Deleted"
            ],
            "x-enumLabels": [
              "UNREAD",
              "READ",
              "DELETED"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/licensedurl/action/get": {
      "get": {
        "description": "Get the URL for playing an asset - EPG or media (not available for recording for now).",
        "tags": [
          "licensedUrl"
        ],
        "operationId": "licensedUrl.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "request[assetId]",
            "description": "Asset identifier",
            "x-group": "request"
          },
          {
            "name": "request[objectType]",
            "in": "query",
            "enum": [
              "KalturaLicensedUrlMediaRequest",
              "KalturaLicensedUrlRecordingRequest",
              "KalturaLicensedUrlEpgRequest"
            ],
            "type": "string",
            "x-group": "request"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "request[contentId]",
            "description": "Identifier of the content to get the link for (file identifier)",
            "x-showCondition": {
              "name": "request[objectType]",
              "value": [
                "KalturaLicensedUrlMediaRequest"
              ]
            },
            "x-group": "request"
          },
          {
            "type": "string",
            "in": "query",
            "name": "request[baseUrl]",
            "description": "Base URL for the licensed URLs",
            "x-showCondition": {
              "name": "request[objectType]",
              "value": [
                "KalturaLicensedUrlMediaRequest"
              ]
            },
            "x-group": "request"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "request[startDate]",
            "description": "The start date of the recording (epoch)",
            "x-showCondition": {
              "name": "request[objectType]",
              "value": [
                "KalturaLicensedUrlRecordingRequest",
                "KalturaLicensedUrlEpgRequest"
              ]
            },
            "x-group": "request",
            "x-inputType": "datetime"
          },
          {
            "type": "string",
            "in": "query",
            "name": "request[fileType]",
            "description": "The file type for the URL",
            "x-showCondition": {
              "name": "request[objectType]",
              "value": [
                "KalturaLicensedUrlRecordingRequest",
                "KalturaLicensedUrlEpgRequest"
              ]
            },
            "x-group": "request"
          },
          {
            "type": "string",
            "in": "query",
            "name": "request[streamType]",
            "enum": [
              "catchup",
              "start_over",
              "trick_play"
            ],
            "x-enumLabels": [
              "CATCHUP",
              "START_OVER",
              "TRICK_PLAY"
            ],
            "description": "Enum Type: `KalturaStreamType`\n\nThe stream type to get the URL for",
            "x-showCondition": {
              "name": "request[objectType]",
              "value": [
                "KalturaLicensedUrlEpgRequest"
              ]
            },
            "x-group": "request"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "request",
            "description": "Object Type: `KalturaLicensedUrlBaseRequest`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLicensedUrl"
            }
          }
        }
      }
    },
    "/service/messagetemplate/action/get": {
      "get": {
        "description": "Retrieve a message template used in push notifications and inbox",
        "tags": [
          "messageTemplate"
        ],
        "operationId": "messageTemplate.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "assetType",
            "in": "query",
            "description": "Enum Type: `KalturaOTTAssetType`\n\npossible values: Asset type – Series",
            "type": "integer",
            "required": false,
            "enum": [
              "0"
            ],
            "x-enumLabels": [
              "SERIES"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMessageTemplate"
            }
          }
        }
      }
    },
    "/service/messagetemplate/action/update": {
      "get": {
        "description": "Set the account’s push notifications and inbox messages templates",
        "tags": [
          "messageTemplate"
        ],
        "operationId": "messageTemplate.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "assetType",
            "in": "query",
            "description": "Enum Type: `KalturaOTTAssetType`\n\nThe asset type to update its template",
            "type": "integer",
            "required": false,
            "enum": [
              "0"
            ],
            "x-enumLabels": [
              "SERIES"
            ]
          },
          {
            "type": "string",
            "in": "query",
            "name": "template[message]",
            "description": "The message template with placeholders",
            "x-group": "template"
          },
          {
            "type": "string",
            "in": "query",
            "name": "template[dateFormat]",
            "description": "Default date format for the date &amp; time entries used in the template",
            "x-group": "template"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "template[assetType]",
            "enum": [
              0
            ],
            "x-enumLabels": [
              "SERIES"
            ],
            "description": "Enum Type: `KalturaOTTAssetType`\n\nTemplate type. Possible values: Series",
            "x-group": "template"
          },
          {
            "type": "string",
            "in": "query",
            "name": "template[sound]",
            "description": "Sound file name to play upon message arrival to the device (if supported by target device)",
            "x-group": "template"
          },
          {
            "type": "string",
            "in": "query",
            "name": "template[action]",
            "description": "an optional action",
            "x-group": "template"
          },
          {
            "type": "string",
            "in": "query",
            "name": "template[url]",
            "description": "URL template for deep linking. Example - /app/location/{mediaId}",
            "x-group": "template"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "template",
            "description": "Object Type: `KalturaMessageTemplate`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaMessageTemplate"
            }
          }
        }
      }
    },
    "/service/notification/action/getLastCleanupDate": {
      "get": {
        "description": "TBD",
        "tags": [
          "notification"
        ],
        "operationId": "notification.getLastCleanupDate",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/notification/action/initiateCleanup": {
      "get": {
        "description": "TBD",
        "tags": [
          "notification"
        ],
        "operationId": "notification.initiateCleanup",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/notification/action/register": {
      "get": {
        "description": "TBD",
        "tags": [
          "notification"
        ],
        "operationId": "notification.register",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "identifier",
            "in": "query",
            "description": "In case type is \"announcement\", identifier should be the announcement ID. In case type is \"system\", identifier should be \"login\" (the login topic)",
            "type": "string",
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "Enum Type: `KalturaNotificationType`\n\n\"announcement\" - TV-Series topic, \"system\" - login topic",
            "type": "string",
            "required": false,
            "enum": [
              "announcement",
              "system"
            ],
            "x-enumLabels": [
              "ANNOUNCEMENT",
              "SYSTEM"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRegistryResponse"
            }
          }
        }
      }
    },
    "/service/notification/action/setDevicePushToken": {
      "get": {
        "description": "Registers the device push token to the push service",
        "tags": [
          "notification"
        ],
        "operationId": "notification.setDevicePushToken",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "pushToken",
            "in": "query",
            "description": "The device-application pair authentication for push delivery",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/notificationspartnersettings/action/get": {
      "get": {
        "description": "Retrieve the partner notification settings.",
        "tags": [
          "notificationsPartnerSettings"
        ],
        "operationId": "notificationsPartnerSettings.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaNotificationsPartnerSettings"
            }
          }
        }
      }
    },
    "/service/notificationspartnersettings/action/update": {
      "get": {
        "description": "Update the account notification settings",
        "tags": [
          "notificationsPartnerSettings"
        ],
        "operationId": "notificationsPartnerSettings.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "settings[pushNotificationEnabled]",
            "description": "Push notification capability is enabled for the account",
            "x-group": "settings"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "settings[pushSystemAnnouncementsEnabled]",
            "description": "System announcement capability is enabled for the account",
            "x-group": "settings"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "settings[pushStartHour]",
            "description": "Window start time (UTC) for send automated push messages",
            "x-group": "settings"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "settings[pushEndHour]",
            "description": "Window end time (UTC) for send automated push messages",
            "x-group": "settings"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "settings[inboxEnabled]",
            "description": "Inbox enabled",
            "x-group": "settings"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "settings[messageTTLDays]",
            "description": "Message TTL in days",
            "x-group": "settings"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "settings[automaticIssueFollowNotification]",
            "description": "Automatic issue follow notification",
            "x-group": "settings"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "settings[topicExpirationDurationDays]",
            "description": "Topic expiration duration in days",
            "x-group": "settings"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "settings",
            "description": "Object Type: `KalturaNotificationsPartnerSettings`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/notificationssettings/action/get": {
      "get": {
        "description": "Retrieve the user’s notification settings.",
        "tags": [
          "notificationsSettings"
        ],
        "operationId": "notificationsSettings.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaNotificationsSettings"
            }
          }
        }
      }
    },
    "/service/notificationssettings/action/update": {
      "get": {
        "description": "Update the user’s notification settings.",
        "tags": [
          "notificationsSettings"
        ],
        "operationId": "notificationsSettings.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "settings[pushNotificationEnabled]",
            "description": "Specify if the user want to receive push notifications or not",
            "x-group": "settings"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "settings[pushFollowEnabled]",
            "description": "Specify if the user will be notified for followed content via push. (requires push_notification_enabled to be enabled)",
            "x-group": "settings"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "settings",
            "description": "Object Type: `KalturaNotificationsSettings`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/ossadapterprofile/action/add": {
      "get": {
        "description": "Insert new OSS adapter for partner",
        "tags": [
          "ossAdapterProfile"
        ],
        "operationId": "ossAdapterProfile.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "ossAdapter[name]",
            "description": "OSS adapter name",
            "x-group": "ossAdapter"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "ossAdapter[isActive]",
            "description": "OSS adapter active status",
            "x-group": "ossAdapter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "ossAdapter[adapterUrl]",
            "description": "OSS adapter adapter URL",
            "x-group": "ossAdapter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "ossAdapter[externalIdentifier]",
            "description": "OSS adapter external identifier",
            "x-group": "ossAdapter"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "ossAdapter",
            "description": "Object Type: `KalturaOSSAdapterProfile`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOSSAdapterProfile"
            }
          }
        }
      }
    },
    "/service/ossadapterprofile/action/delete": {
      "get": {
        "description": "Delete OSS adapter by OSS adapter id",
        "tags": [
          "ossAdapterProfile"
        ],
        "operationId": "ossAdapterProfile.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "ossAdapterId",
            "in": "query",
            "description": "OSS adapter identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/ossadapterprofile/action/generateSharedSecret": {
      "get": {
        "description": "Generate oss adapter shared secret",
        "tags": [
          "ossAdapterProfile"
        ],
        "operationId": "ossAdapterProfile.generateSharedSecret",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "ossAdapterId",
            "in": "query",
            "description": "OSS adapter identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOSSAdapterProfile"
            }
          }
        }
      }
    },
    "/service/ossadapterprofile/action/update": {
      "get": {
        "description": "Update OSS adapter details",
        "tags": [
          "ossAdapterProfile"
        ],
        "operationId": "ossAdapterProfile.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "ossAdapterId",
            "in": "query",
            "description": "OSS adapter identifier",
            "type": "integer",
            "required": false
          },
          {
            "type": "string",
            "in": "query",
            "name": "ossAdapter[name]",
            "description": "OSS adapter name",
            "x-group": "ossAdapter"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "ossAdapter[isActive]",
            "description": "OSS adapter active status",
            "x-group": "ossAdapter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "ossAdapter[adapterUrl]",
            "description": "OSS adapter adapter URL",
            "x-group": "ossAdapter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "ossAdapter[externalIdentifier]",
            "description": "OSS adapter external identifier",
            "x-group": "ossAdapter"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "ossAdapter",
            "description": "Object Type: `KalturaOSSAdapterProfile`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOSSAdapterProfile"
            }
          }
        }
      }
    },
    "/service/ottcategory/action/get": {
      "get": {
        "description": "Retrieve the list of categories (hierarchical) and their associated channels",
        "tags": [
          "ottCategory"
        ],
        "operationId": "ottCategory.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "Category Identifier",
            "type": "integer",
            "required": false,
            "x-dynamicEnum": {
              "path": "/service/ottcategory/action/list",
              "method": "get",
              "array": "objects",
              "label": "name",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTCategory"
            }
          }
        }
      }
    },
    "/service/ottuser/action/activate": {
      "get": {
        "description": "Activate the account by activation token",
        "tags": [
          "ottUser"
        ],
        "operationId": "ottUser.activate",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "The partner ID",
            "type": "integer",
            "required": false
          },
          {
            "name": "username",
            "in": "query",
            "description": "Username of the user to activate",
            "type": "string",
            "required": false
          },
          {
            "name": "activationToken",
            "in": "query",
            "description": "Activation token of the user",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUser"
            }
          }
        }
      }
    },
    "/service/ottuser/action/addRole": {
      "get": {
        "description": "Edit user details.",
        "tags": [
          "ottUser"
        ],
        "operationId": "ottUser.addRole",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "roleId",
            "in": "query",
            "description": "The role identifier to add",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/ottuser/action/anonymousLogin": {
      "get": {
        "description": "Returns tokens (KS and refresh token) for anonymous access",
        "tags": [
          "ottUser"
        ],
        "operationId": "ottUser.anonymousLogin",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "The partner ID",
            "type": "integer",
            "required": false
          },
          {
            "name": "udid",
            "in": "query",
            "description": "The caller device's UDID",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLoginSession"
            }
          }
        }
      }
    },
    "/service/ottuser/action/delete": {
      "get": {
        "description": "Permanently delete a user. User to delete cannot be an exclusive household master, and cannot be default user.",
        "tags": [
          "ottUser"
        ],
        "operationId": "ottUser.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/ottuser/action/get": {
      "get": {
        "description": "Retrieving users&#39; data",
        "tags": [
          "ottUser"
        ],
        "operationId": "ottUser.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUser"
            }
          }
        }
      }
    },
    "/service/ottuser/action/getEncryptedUserId": {
      "get": {
        "description": "Resend the activation token to a user",
        "tags": [
          "ottUser"
        ],
        "operationId": "ottUser.getEncryptedUserId",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaStringValue"
            }
          }
        }
      }
    },
    "/service/ottuser/action/list": {
      "get": {
        "description": "Retrieve user by external identifier or username",
        "tags": [
          "ottUser"
        ],
        "operationId": "ottUser.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[userByEqual]",
            "enum": [
              "USER_NAME",
              "EXTERNAL_ID"
            ],
            "x-enumLabels": [
              "USER_NAME",
              "EXTERNAL_ID"
            ],
            "description": "Enum Type: `KalturaOTTUserBy`\n\nUser Filter By",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[valueEqual]",
            "description": "The User identifiers",
            "x-group": "filter"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaOTTUserFilter`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUserListResponse"
            }
          }
        }
      }
    },
    "/service/ottuser/action/login": {
      "get": {
        "description": "User sign-in via a time-expired sign-in PIN.",
        "tags": [
          "ottUser"
        ],
        "operationId": "ottUser.login",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "Partner Identifier",
            "type": "integer",
            "required": false
          },
          {
            "name": "username",
            "in": "query",
            "description": "user name",
            "type": "string",
            "required": false
          },
          {
            "name": "password",
            "in": "query",
            "description": "password",
            "type": "string",
            "required": false,
            "x-inputType": "password"
          },
          {
            "name": "extraParams",
            "in": "query",
            "description": "extra params",
            "type": "object",
            "required": false
          },
          {
            "name": "udid",
            "in": "query",
            "description": "Device UDID",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLoginResponse"
            }
          }
        }
      }
    },
    "/service/ottuser/action/loginWithPin": {
      "get": {
        "description": "User sign-in via a time-expired sign-in PIN.",
        "tags": [
          "ottUser"
        ],
        "operationId": "ottUser.loginWithPin",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "Partner Identifier",
            "type": "integer",
            "required": false
          },
          {
            "name": "pin",
            "in": "query",
            "description": "pin code",
            "type": "string",
            "required": false
          },
          {
            "name": "udid",
            "in": "query",
            "description": "Device UDID",
            "type": "string",
            "required": false
          },
          {
            "name": "secret",
            "in": "query",
            "description": "Additional security parameter to validate the login",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLoginResponse"
            }
          }
        }
      }
    },
    "/service/ottuser/action/logout": {
      "get": {
        "description": "Logout the calling user.",
        "tags": [
          "ottUser"
        ],
        "operationId": "ottUser.logout",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/ottuser/action/refreshSession": {
      "get": {
        "description": "Returns new Kaltura session (ks) for the user, using the supplied refresh_token (only if it&#39;s valid and not expired)",
        "tags": [
          "ottUser"
        ],
        "operationId": "ottUser.refreshSession",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "refreshToken",
            "in": "query",
            "description": "Refresh token",
            "type": "string",
            "required": false
          },
          {
            "name": "udid",
            "in": "query",
            "description": "Device UDID",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLoginSession"
            }
          }
        }
      }
    },
    "/service/ottuser/action/register": {
      "get": {
        "description": "Sign up a new user.",
        "tags": [
          "ottUser"
        ],
        "operationId": "ottUser.register",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "Partner identifier",
            "type": "integer",
            "required": false
          },
          {
            "type": "string",
            "in": "query",
            "name": "user[username]",
            "description": "Username",
            "x-group": "user"
          },
          {
            "type": "string",
            "in": "query",
            "name": "user[firstName]",
            "description": "First name",
            "x-group": "user"
          },
          {
            "type": "string",
            "in": "query",
            "name": "user[lastName]",
            "description": "Last name",
            "x-group": "user"
          },
          {
            "type": "string",
            "in": "query",
            "name": "user[email]",
            "description": "Email",
            "x-group": "user"
          },
          {
            "type": "string",
            "in": "query",
            "name": "user[address]",
            "description": "Address",
            "x-group": "user"
          },
          {
            "type": "string",
            "in": "query",
            "name": "user[city]",
            "description": "City",
            "x-group": "user"
          },
          {
            "type": "string",
            "in": "query",
            "name": "user[country][name]",
            "description": "Country name",
            "x-group": "user[country]"
          },
          {
            "type": "string",
            "in": "query",
            "name": "user[country][code]",
            "description": "Country code",
            "x-group": "user[country]"
          },
          {
            "name": "password",
            "in": "query",
            "description": "password",
            "type": "string",
            "required": false,
            "x-inputType": "password"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "user",
            "description": "Object Type: `KalturaOTTUser`",
            "subGroups": [
              {
                "name": "user[country]"
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUser"
            }
          }
        }
      }
    },
    "/service/ottuser/action/resendActivationToken": {
      "get": {
        "description": "Resend the activation token to a user",
        "tags": [
          "ottUser"
        ],
        "operationId": "ottUser.resendActivationToken",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "The partner ID",
            "type": "integer",
            "required": false
          },
          {
            "name": "username",
            "in": "query",
            "description": "Username of the user to activate",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/ottuser/action/resetPassword": {
      "get": {
        "description": "Send an e-mail with URL to enable the user to set new password.",
        "tags": [
          "ottUser"
        ],
        "operationId": "ottUser.resetPassword",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "Partner Identifier",
            "type": "integer",
            "required": false
          },
          {
            "name": "username",
            "in": "query",
            "description": "user name",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/ottuser/action/setInitialPassword": {
      "get": {
        "description": "Renew the user&#39;s password after validating the token that sent as part of URL in e-mail.",
        "tags": [
          "ottUser"
        ],
        "operationId": "ottUser.setInitialPassword",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "Partner Identifier",
            "type": "integer",
            "required": false
          },
          {
            "name": "token",
            "in": "query",
            "description": "Token that sent by e-mail",
            "type": "string",
            "required": false
          },
          {
            "name": "password",
            "in": "query",
            "description": "New password",
            "type": "string",
            "required": false,
            "x-inputType": "password"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUser"
            }
          }
        }
      }
    },
    "/service/ottuser/action/update": {
      "get": {
        "description": "Given a user name and existing password, change to a new password.",
        "tags": [
          "ottUser"
        ],
        "operationId": "ottUser.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "user[username]",
            "description": "Username",
            "x-group": "user"
          },
          {
            "type": "string",
            "in": "query",
            "name": "user[firstName]",
            "description": "First name",
            "x-group": "user"
          },
          {
            "type": "string",
            "in": "query",
            "name": "user[lastName]",
            "description": "Last name",
            "x-group": "user"
          },
          {
            "type": "string",
            "in": "query",
            "name": "user[email]",
            "description": "Email",
            "x-group": "user"
          },
          {
            "type": "string",
            "in": "query",
            "name": "user[address]",
            "description": "Address",
            "x-group": "user"
          },
          {
            "type": "string",
            "in": "query",
            "name": "user[city]",
            "description": "City",
            "x-group": "user"
          },
          {
            "type": "string",
            "in": "query",
            "name": "user[country][name]",
            "description": "Country name",
            "x-group": "user[country]"
          },
          {
            "type": "string",
            "in": "query",
            "name": "user[country][code]",
            "description": "Country code",
            "x-group": "user[country]"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "user",
            "description": "Object Type: `KalturaOTTUser`",
            "subGroups": [
              {
                "name": "user[country]"
              }
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaOTTUser"
            }
          }
        }
      }
    },
    "/service/ottuser/action/updateLoginData": {
      "get": {
        "description": "Given a user name and existing password, change to a new password.",
        "tags": [
          "ottUser"
        ],
        "operationId": "ottUser.updateLoginData",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "username",
            "in": "query",
            "description": "user name",
            "type": "string",
            "required": false
          },
          {
            "name": "oldPassword",
            "in": "query",
            "description": "old password",
            "type": "string",
            "required": false
          },
          {
            "name": "newPassword",
            "in": "query",
            "description": "new password",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/parentalrule/action/disable": {
      "get": {
        "description": "Disables a parental rule that was previously defined by the household master. Disable can be at specific user or household level.",
        "tags": [
          "parentalRule"
        ],
        "operationId": "parentalRule.disable",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "ruleId",
            "in": "query",
            "description": "Rule Identifier",
            "type": "integer",
            "required": false
          },
          {
            "name": "entityReference",
            "in": "query",
            "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
            "type": "string",
            "required": false,
            "enum": [
              "user",
              "household"
            ],
            "x-enumLabels": [
              "USER",
              "HOUSEHOLD"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/parentalrule/action/disableDefault": {
      "get": {
        "description": "Disables a parental rule that was defined at account level. Disable can be at specific user or household level.",
        "tags": [
          "parentalRule"
        ],
        "operationId": "parentalRule.disableDefault",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "entityReference",
            "in": "query",
            "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
            "type": "string",
            "required": false,
            "enum": [
              "user",
              "household"
            ],
            "x-enumLabels": [
              "USER",
              "HOUSEHOLD"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/parentalrule/action/enable": {
      "get": {
        "description": "Enable a parental rules for a user",
        "tags": [
          "parentalRule"
        ],
        "operationId": "parentalRule.enable",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "ruleId",
            "in": "query",
            "description": "Rule Identifier",
            "type": "integer",
            "required": false
          },
          {
            "name": "entityReference",
            "in": "query",
            "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
            "type": "string",
            "required": false,
            "enum": [
              "user",
              "household"
            ],
            "x-enumLabels": [
              "USER",
              "HOUSEHOLD"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/parentalrule/action/list": {
      "get": {
        "description": "Return the parental rules that applies for the user or household. Can include rules that have been associated in account, household, or user level.\r\n            Association level is also specified in the response.",
        "tags": [
          "parentalRule"
        ],
        "operationId": "parentalRule.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[entityReferenceEqual]",
            "enum": [
              "user",
              "household"
            ],
            "x-enumLabels": [
              "USER",
              "HOUSEHOLD"
            ],
            "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
            "x-group": "filter"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaParentalRuleFilter`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaParentalRuleListResponse"
            }
          }
        }
      }
    },
    "/service/partnerconfiguration/action/update": {
      "get": {
        "description": "Update Partner Configuration",
        "tags": [
          "partnerConfiguration"
        ],
        "operationId": "partnerConfiguration.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "configuration[objectType]",
            "in": "query",
            "enum": [
              "KalturaBillingPartnerConfig"
            ],
            "type": "string",
            "x-group": "configuration"
          },
          {
            "type": "string",
            "in": "query",
            "name": "configuration[value]",
            "description": "configuration value",
            "x-showCondition": {
              "name": "configuration[objectType]",
              "value": [
                "KalturaBillingPartnerConfig"
              ]
            },
            "x-group": "configuration"
          },
          {
            "type": "string",
            "in": "query",
            "name": "configuration[type]",
            "enum": [
              "DefaultPaymentGateway",
              "EnablePaymentGatewaySelection",
              "OSSAdapter"
            ],
            "x-enumLabels": [
              "DEFAULTPAYMENTGATEWAY",
              "ENABLEPAYMENTGATEWAYSELECTION",
              "OSSADAPTER"
            ],
            "description": "Enum Type: `KalturaPartnerConfigurationType`\n\npartner configuration type",
            "x-showCondition": {
              "name": "configuration[objectType]",
              "value": [
                "KalturaBillingPartnerConfig"
              ]
            },
            "x-group": "configuration"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "configuration",
            "description": "Object Type: `KalturaPartnerConfiguration`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/paymentgatewayprofile/action/add": {
      "get": {
        "description": "Insert new payment gateway for partner",
        "tags": [
          "paymentGatewayProfile"
        ],
        "operationId": "paymentGatewayProfile.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "paymentGateway[name]",
            "description": "payment gateway name",
            "x-group": "paymentGateway"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "paymentGateway[isDefault]",
            "description": "Payment gateway default (true/false)",
            "x-group": "paymentGateway"
          },
          {
            "type": "string",
            "in": "query",
            "name": "paymentGateway[selectedBy]",
            "enum": [
              "none",
              "account",
              "household"
            ],
            "x-enumLabels": [
              "NONE",
              "ACCOUNT",
              "HOUSEHOLD"
            ],
            "description": "Enum Type: `KalturaHouseholdPaymentGatewaySelectedBy`\n\ndistinction payment gateway selected by account or household",
            "x-group": "paymentGateway"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "paymentGateway[isActive]",
            "description": "Payment gateway is active status",
            "x-group": "paymentGateway"
          },
          {
            "type": "string",
            "in": "query",
            "name": "paymentGateway[adapterUrl]",
            "description": "Payment gateway adapter URL",
            "x-group": "paymentGateway"
          },
          {
            "type": "string",
            "in": "query",
            "name": "paymentGateway[transactUrl]",
            "description": "Payment gateway transact URL",
            "x-group": "paymentGateway"
          },
          {
            "type": "string",
            "in": "query",
            "name": "paymentGateway[statusUrl]",
            "description": "Payment gateway status URL",
            "x-group": "paymentGateway"
          },
          {
            "type": "string",
            "in": "query",
            "name": "paymentGateway[renewUrl]",
            "description": "Payment gateway renew URL",
            "x-group": "paymentGateway"
          },
          {
            "type": "string",
            "in": "query",
            "name": "paymentGateway[externalIdentifier]",
            "description": "Payment gateway external identifier",
            "x-group": "paymentGateway"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "paymentGateway[pendingInterval]",
            "description": "Pending Interval in minutes",
            "x-group": "paymentGateway"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "paymentGateway[pendingRetries]",
            "description": "Pending Retries",
            "x-group": "paymentGateway"
          },
          {
            "type": "string",
            "in": "query",
            "name": "paymentGateway[sharedSecret]",
            "description": "Shared Secret",
            "x-group": "paymentGateway"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "paymentGateway[renewIntervalMinutes]",
            "description": "Renew Interval Minutes",
            "x-group": "paymentGateway"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "paymentGateway[renewStartMinutes]",
            "description": "Renew Start Minutes",
            "x-group": "paymentGateway"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "paymentGateway",
            "description": "Object Type: `KalturaPaymentGatewayProfile`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentGatewayProfile"
            }
          }
        }
      }
    },
    "/service/paymentgatewayprofile/action/delete": {
      "get": {
        "description": "Delete payment gateway by payment gateway id",
        "tags": [
          "paymentGatewayProfile"
        ],
        "operationId": "paymentGatewayProfile.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "paymentGatewayId",
            "in": "query",
            "description": "Payment Gateway Identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/paymentgatewayprofile/action/generateSharedSecret": {
      "get": {
        "description": "Generate payment gateway shared secret",
        "tags": [
          "paymentGatewayProfile"
        ],
        "operationId": "paymentGatewayProfile.generateSharedSecret",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "paymentGatewayId",
            "in": "query",
            "description": "Payment gateway identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentGatewayProfile"
            }
          }
        }
      }
    },
    "/service/paymentgatewayprofile/action/getConfiguration": {
      "get": {
        "description": "Gets the Payment Gateway Configuration for the payment gateway identifier given",
        "tags": [
          "paymentGatewayProfile"
        ],
        "operationId": "paymentGatewayProfile.getConfiguration",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "alias",
            "in": "query",
            "description": "The payemnt gateway for which to return the registration URL/s for the household. If omitted – return the regisration URL for the household for the default payment gateway",
            "type": "string",
            "required": false
          },
          {
            "name": "intent",
            "in": "query",
            "description": "Represent the client’s intent for working with the payment gateway. Intent options to be coordinated with the applicable payment gateway adapter.",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentGatewayConfiguration"
            }
          }
        }
      }
    },
    "/service/paymentgatewayprofile/action/list": {
      "get": {
        "description": "Returns all payment gateways for partner : id + name",
        "tags": [
          "paymentGatewayProfile"
        ],
        "operationId": "paymentGatewayProfile.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentGatewayProfileListResponse"
            }
          }
        }
      }
    },
    "/service/paymentgatewayprofile/action/update": {
      "get": {
        "description": "Update payment gateway details",
        "tags": [
          "paymentGatewayProfile"
        ],
        "operationId": "paymentGatewayProfile.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "paymentGatewayId",
            "in": "query",
            "description": "Payment Gateway Identifier",
            "type": "integer",
            "required": false
          },
          {
            "type": "string",
            "in": "query",
            "name": "paymentGateway[name]",
            "description": "payment gateway name",
            "x-group": "paymentGateway"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "paymentGateway[isDefault]",
            "description": "Payment gateway default (true/false)",
            "x-group": "paymentGateway"
          },
          {
            "type": "string",
            "in": "query",
            "name": "paymentGateway[selectedBy]",
            "enum": [
              "none",
              "account",
              "household"
            ],
            "x-enumLabels": [
              "NONE",
              "ACCOUNT",
              "HOUSEHOLD"
            ],
            "description": "Enum Type: `KalturaHouseholdPaymentGatewaySelectedBy`\n\ndistinction payment gateway selected by account or household",
            "x-group": "paymentGateway"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "paymentGateway[isActive]",
            "description": "Payment gateway is active status",
            "x-group": "paymentGateway"
          },
          {
            "type": "string",
            "in": "query",
            "name": "paymentGateway[adapterUrl]",
            "description": "Payment gateway adapter URL",
            "x-group": "paymentGateway"
          },
          {
            "type": "string",
            "in": "query",
            "name": "paymentGateway[transactUrl]",
            "description": "Payment gateway transact URL",
            "x-group": "paymentGateway"
          },
          {
            "type": "string",
            "in": "query",
            "name": "paymentGateway[statusUrl]",
            "description": "Payment gateway status URL",
            "x-group": "paymentGateway"
          },
          {
            "type": "string",
            "in": "query",
            "name": "paymentGateway[renewUrl]",
            "description": "Payment gateway renew URL",
            "x-group": "paymentGateway"
          },
          {
            "type": "string",
            "in": "query",
            "name": "paymentGateway[externalIdentifier]",
            "description": "Payment gateway external identifier",
            "x-group": "paymentGateway"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "paymentGateway[pendingInterval]",
            "description": "Pending Interval in minutes",
            "x-group": "paymentGateway"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "paymentGateway[pendingRetries]",
            "description": "Pending Retries",
            "x-group": "paymentGateway"
          },
          {
            "type": "string",
            "in": "query",
            "name": "paymentGateway[sharedSecret]",
            "description": "Shared Secret",
            "x-group": "paymentGateway"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "paymentGateway[renewIntervalMinutes]",
            "description": "Renew Interval Minutes",
            "x-group": "paymentGateway"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "paymentGateway[renewStartMinutes]",
            "description": "Renew Start Minutes",
            "x-group": "paymentGateway"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "paymentGateway",
            "description": "Object Type: `KalturaPaymentGatewayProfile`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentGatewayProfile"
            }
          }
        }
      }
    },
    "/service/paymentmethodprofile/action/add": {
      "get": {
        "description": "TBD",
        "tags": [
          "paymentMethodProfile"
        ],
        "operationId": "paymentMethodProfile.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "paymentMethod[paymentGatewayId]",
            "description": "Payment gateway identifier (internal)",
            "x-group": "paymentMethod"
          },
          {
            "type": "string",
            "in": "query",
            "name": "paymentMethod[name]",
            "description": "Payment method name",
            "x-group": "paymentMethod"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "paymentMethod[allowMultiInstance]",
            "description": "Indicates whether the payment method allow multiple instances",
            "x-group": "paymentMethod"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "paymentMethod",
            "description": "Object Type: `KalturaPaymentMethodProfile`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentMethodProfile"
            }
          }
        }
      }
    },
    "/service/paymentmethodprofile/action/delete": {
      "get": {
        "description": "Delete payment method profile",
        "tags": [
          "paymentMethodProfile"
        ],
        "operationId": "paymentMethodProfile.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "paymentMethodId",
            "in": "query",
            "description": "Payment method identifier to delete",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/paymentmethodprofile/action/list": {
      "get": {
        "description": "TBD",
        "tags": [
          "paymentMethodProfile"
        ],
        "operationId": "paymentMethodProfile.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[paymentGatewayIdEqual]",
            "description": "Payment gateway identifier to list the payment methods for",
            "x-group": "filter"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaPaymentMethodProfileFilter`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentMethodProfileListResponse"
            }
          }
        }
      }
    },
    "/service/paymentmethodprofile/action/update": {
      "get": {
        "description": "Update payment method",
        "tags": [
          "paymentMethodProfile"
        ],
        "operationId": "paymentMethodProfile.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "paymentMethodId",
            "in": "query",
            "description": "Payment method identifier to update",
            "type": "integer",
            "required": false
          },
          {
            "type": "integer",
            "in": "query",
            "name": "paymentMethod[paymentGatewayId]",
            "description": "Payment gateway identifier (internal)",
            "x-group": "paymentMethod"
          },
          {
            "type": "string",
            "in": "query",
            "name": "paymentMethod[name]",
            "description": "Payment method name",
            "x-group": "paymentMethod"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "paymentMethod[allowMultiInstance]",
            "description": "Indicates whether the payment method allow multiple instances",
            "x-group": "paymentMethod"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "paymentMethod",
            "description": "Object Type: `KalturaPaymentMethodProfile`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPaymentMethodProfile"
            }
          }
        }
      }
    },
    "/service/personalfeed/action/list": {
      "get": {
        "description": "List user&#39;s feeds.\r\n            Possible status codes:",
        "tags": [
          "personalFeed"
        ],
        "operationId": "personalFeed.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageSize]",
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "x-group": "pager"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageIndex]",
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "x-group": "pager"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaPersonalFeedFilter`",
            "subGroups": []
          },
          {
            "name": "pager",
            "description": "Object Type: `KalturaFilterPager`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPersonalFeedListResponse"
            }
          }
        }
      }
    },
    "/service/pin/action/get": {
      "get": {
        "description": "Retrieve the parental or purchase PIN that applies for the household or user. Includes specification of where the PIN was defined at – account, household or user  level",
        "tags": [
          "pin"
        ],
        "operationId": "pin.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "by",
            "in": "query",
            "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
            "type": "string",
            "required": false,
            "enum": [
              "user",
              "household"
            ],
            "x-enumLabels": [
              "USER",
              "HOUSEHOLD"
            ]
          },
          {
            "name": "type",
            "in": "query",
            "description": "Enum Type: `KalturaPinType`\n\nThe PIN type to retrieve",
            "type": "string",
            "required": false,
            "enum": [
              "purchase",
              "parental"
            ],
            "x-enumLabels": [
              "PURCHASE",
              "PARENTAL"
            ]
          },
          {
            "name": "ruleId",
            "in": "query",
            "description": "Rule ID - for PIN per rule (MediaCorp): BEO-1923",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPin"
            }
          }
        }
      }
    },
    "/service/pin/action/update": {
      "get": {
        "description": "Set the parental or purchase PIN that applies for the user or the household.",
        "tags": [
          "pin"
        ],
        "operationId": "pin.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "by",
            "in": "query",
            "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
            "type": "string",
            "required": false,
            "enum": [
              "user",
              "household"
            ],
            "x-enumLabels": [
              "USER",
              "HOUSEHOLD"
            ]
          },
          {
            "name": "type",
            "in": "query",
            "description": "Enum Type: `KalturaPinType`\n\nThe PIN type to retrieve",
            "type": "string",
            "required": false,
            "enum": [
              "purchase",
              "parental"
            ],
            "x-enumLabels": [
              "PURCHASE",
              "PARENTAL"
            ]
          },
          {
            "type": "string",
            "in": "query",
            "name": "pin[pin]",
            "description": "PIN code",
            "x-group": "pin"
          },
          {
            "type": "string",
            "in": "query",
            "name": "pin[origin]",
            "enum": [
              "invalid",
              "user",
              "household",
              "account"
            ],
            "x-enumLabels": [
              "INVALID",
              "USER",
              "HOUSEHOLD",
              "ACCOUNT"
            ],
            "description": "Enum Type: `KalturaRuleLevel`\n\nWhere the PIN was defined at – account, household or user",
            "x-group": "pin"
          },
          {
            "type": "string",
            "in": "query",
            "name": "pin[type]",
            "enum": [
              "purchase",
              "parental"
            ],
            "x-enumLabels": [
              "PURCHASE",
              "PARENTAL"
            ],
            "description": "Enum Type: `KalturaPinType`\n\nPIN type",
            "x-group": "pin"
          },
          {
            "name": "pin[objectType]",
            "in": "query",
            "enum": [
              "KalturaPurchaseSettings"
            ],
            "type": "string",
            "x-group": "pin"
          },
          {
            "type": "string",
            "in": "query",
            "name": "pin[permission]",
            "enum": [
              "block",
              "ask",
              "allow"
            ],
            "x-enumLabels": [
              "BLOCK",
              "ASK",
              "ALLOW"
            ],
            "description": "Enum Type: `KalturaPurchaseSettingsType`\n\nPurchase permission - block, ask or allow",
            "x-showCondition": {
              "name": "pin[objectType]",
              "value": [
                "KalturaPurchaseSettings"
              ]
            },
            "x-group": "pin"
          },
          {
            "name": "ruleId",
            "in": "query",
            "description": "Rule ID - for PIN per rule (MediaCorp): BEO-1923",
            "type": "integer",
            "required": false
          }
        ],
        "x-parameterGroups": [
          {
            "name": "pin",
            "description": "Object Type: `KalturaPin`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPin"
            }
          }
        }
      }
    },
    "/service/pin/action/validate": {
      "get": {
        "description": "Validate a purchase or parental PIN for a user.",
        "tags": [
          "pin"
        ],
        "operationId": "pin.validate",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "pin",
            "in": "query",
            "description": "PIN to validate",
            "type": "string",
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "Enum Type: `KalturaPinType`\n\nThe PIN type to retrieve",
            "type": "string",
            "required": false,
            "enum": [
              "purchase",
              "parental"
            ],
            "x-enumLabels": [
              "PURCHASE",
              "PARENTAL"
            ]
          },
          {
            "name": "ruleId",
            "in": "query",
            "description": "Rule ID - for PIN per rule (MediaCorp): BEO-1923",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/ppv/action/get": {
      "get": {
        "description": "Returns ppv object by internal identifier",
        "tags": [
          "ppv"
        ],
        "operationId": "ppv.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "ppv identifier",
            "type": "integer",
            "required": false,
            "x-dynamicEnum": {
              "path": "/service/ppv/action/list",
              "method": "get",
              "array": "objects",
              "label": "name",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPpv"
            }
          }
        }
      }
    },
    "/service/productprice/action/list": {
      "get": {
        "description": "Returns a price and a purchase status for each subscription or/and media file, for a given user (if passed) and with the consideration of a coupon code (if passed).",
        "tags": [
          "productPrice"
        ],
        "operationId": "productPrice.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[subscriptionIdIn]",
            "description": "Comma separated subscriptions identifiers",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[fileIdIn]",
            "description": "Comma separated media files identifiers",
            "x-group": "filter"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "filter[isLowest]",
            "description": "A flag that indicates if only the lowest price of an item should return",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[couponCodeEqual]",
            "description": "Discount coupon code",
            "x-group": "filter"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaProductPriceFilter`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaProductPriceListResponse"
            }
          }
        }
      }
    },
    "/service/purchasesettings/action/get": {
      "get": {
        "description": "Retrieve the purchase settings.\r\n            Includes specification of where these settings were defined – account, household or user",
        "tags": [
          "purchaseSettings"
        ],
        "operationId": "purchaseSettings.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "by",
            "in": "query",
            "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
            "type": "string",
            "required": false,
            "enum": [
              "user",
              "household"
            ],
            "x-enumLabels": [
              "USER",
              "HOUSEHOLD"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPurchaseSettings"
            }
          }
        }
      }
    },
    "/service/purchasesettings/action/update": {
      "get": {
        "description": "Set a purchase PIN for the household or user",
        "tags": [
          "purchaseSettings"
        ],
        "operationId": "purchaseSettings.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "entityReference",
            "in": "query",
            "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
            "type": "string",
            "required": false,
            "enum": [
              "user",
              "household"
            ],
            "x-enumLabels": [
              "USER",
              "HOUSEHOLD"
            ]
          },
          {
            "type": "string",
            "in": "query",
            "name": "settings[pin]",
            "description": "PIN code",
            "x-group": "settings"
          },
          {
            "type": "string",
            "in": "query",
            "name": "settings[origin]",
            "enum": [
              "invalid",
              "user",
              "household",
              "account"
            ],
            "x-enumLabels": [
              "INVALID",
              "USER",
              "HOUSEHOLD",
              "ACCOUNT"
            ],
            "description": "Enum Type: `KalturaRuleLevel`\n\nWhere the PIN was defined at – account, household or user",
            "x-group": "settings"
          },
          {
            "type": "string",
            "in": "query",
            "name": "settings[type]",
            "enum": [
              "purchase",
              "parental"
            ],
            "x-enumLabels": [
              "PURCHASE",
              "PARENTAL"
            ],
            "description": "Enum Type: `KalturaPinType`\n\nPIN type",
            "x-group": "settings"
          },
          {
            "type": "string",
            "in": "query",
            "name": "settings[permission]",
            "enum": [
              "block",
              "ask",
              "allow"
            ],
            "x-enumLabels": [
              "BLOCK",
              "ASK",
              "ALLOW"
            ],
            "description": "Enum Type: `KalturaPurchaseSettingsType`\n\nPurchase permission - block, ask or allow",
            "x-group": "settings"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "settings",
            "description": "Object Type: `KalturaPurchaseSettings`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaPurchaseSettings"
            }
          }
        }
      }
    },
    "/service/recommendationprofile/action/add": {
      "get": {
        "description": "Insert new recommendation engine for partner",
        "tags": [
          "recommendationProfile"
        ],
        "operationId": "recommendationProfile.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "recommendationEngine[name]",
            "description": "recommendation engine name",
            "x-group": "recommendationEngine"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "recommendationEngine[isActive]",
            "description": "recommendation engine is active status",
            "x-group": "recommendationEngine"
          },
          {
            "type": "string",
            "in": "query",
            "name": "recommendationEngine[adapterUrl]",
            "description": "recommendation engine adapter URL",
            "x-group": "recommendationEngine"
          },
          {
            "type": "string",
            "in": "query",
            "name": "recommendationEngine[externalIdentifier]",
            "description": "recommendation engine external identifier",
            "x-group": "recommendationEngine"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "recommendationEngine",
            "description": "Object Type: `KalturaRecommendationProfile`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecommendationProfile"
            }
          }
        }
      }
    },
    "/service/recommendationprofile/action/delete": {
      "get": {
        "description": "Delete recommendation engine by recommendation engine id",
        "tags": [
          "recommendationProfile"
        ],
        "operationId": "recommendationProfile.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "recommendation engine Identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/recommendationprofile/action/generateSharedSecret": {
      "get": {
        "description": "Generate recommendation engine  shared secret",
        "tags": [
          "recommendationProfile"
        ],
        "operationId": "recommendationProfile.generateSharedSecret",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "recommendationEngineId",
            "in": "query",
            "description": "recommendation engine Identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecommendationProfile"
            }
          }
        }
      }
    },
    "/service/recommendationprofile/action/list": {
      "get": {
        "description": "Returns all recommendation engines for partner",
        "tags": [
          "recommendationProfile"
        ],
        "operationId": "recommendationProfile.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecommendationProfileListResponse"
            }
          }
        }
      }
    },
    "/service/recommendationprofile/action/update": {
      "get": {
        "description": "Update recommendation engine details",
        "tags": [
          "recommendationProfile"
        ],
        "operationId": "recommendationProfile.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "recommendationEngineId",
            "in": "query",
            "description": "recommendation engine identifier",
            "type": "integer",
            "required": false
          },
          {
            "type": "string",
            "in": "query",
            "name": "recommendationEngine[name]",
            "description": "recommendation engine name",
            "x-group": "recommendationEngine"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "recommendationEngine[isActive]",
            "description": "recommendation engine is active status",
            "x-group": "recommendationEngine"
          },
          {
            "type": "string",
            "in": "query",
            "name": "recommendationEngine[adapterUrl]",
            "description": "recommendation engine adapter URL",
            "x-group": "recommendationEngine"
          },
          {
            "type": "string",
            "in": "query",
            "name": "recommendationEngine[externalIdentifier]",
            "description": "recommendation engine external identifier",
            "x-group": "recommendationEngine"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "recommendationEngine",
            "description": "Object Type: `KalturaRecommendationProfile`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecommendationProfile"
            }
          }
        }
      }
    },
    "/service/recording/action/add": {
      "get": {
        "description": "Issue a record request for a program",
        "tags": [
          "recording"
        ],
        "operationId": "recording.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "recording[assetId]",
            "description": "Kaltura unique ID representing the program identifier",
            "x-group": "recording"
          },
          {
            "type": "string",
            "in": "query",
            "name": "recording[type]",
            "enum": [
              "SINGLE",
              "SEASON",
              "SERIES"
            ],
            "x-enumLabels": [
              "SINGLE",
              "SEASON",
              "SERIES"
            ],
            "description": "Enum Type: `KalturaRecordingType`\n\nRecording Type: single/season/series",
            "x-group": "recording"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "recording[viewableUntilDate]",
            "description": "Specifies until when the recording is available for viewing. Date and time represented as epoch.",
            "x-group": "recording",
            "x-inputType": "datetime"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "recording[isProtected]",
            "description": "Specifies whether or not the recording is protected",
            "x-group": "recording"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "recording[createDate]",
            "description": "Specifies when was the recording created. Date and time represented as epoch.",
            "x-group": "recording",
            "x-inputType": "datetime"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "recording[updateDate]",
            "description": "Specifies when was the recording last updated. Date and time represented as epoch.",
            "x-group": "recording",
            "x-inputType": "datetime"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "recording",
            "description": "Object Type: `KalturaRecording`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecording"
            }
          }
        }
      }
    },
    "/service/recording/action/cancel": {
      "get": {
        "description": "Cancel a previously requested recording. Cancel recording can be called for recording in status Scheduled or Recording Only",
        "tags": [
          "recording"
        ],
        "operationId": "recording.cancel",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "Recording identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecording"
            }
          }
        }
      }
    },
    "/service/recording/action/delete": {
      "get": {
        "description": "Delete one or more user recording(s). Delete recording can be called only for recordings in status Recorded",
        "tags": [
          "recording"
        ],
        "operationId": "recording.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "Recording identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecording"
            }
          }
        }
      }
    },
    "/service/recording/action/get": {
      "get": {
        "description": "Returns recording object by internal identifier",
        "tags": [
          "recording"
        ],
        "operationId": "recording.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "Recording identifier",
            "type": "integer",
            "required": false,
            "x-dynamicEnum": {
              "path": "/service/recording/action/list",
              "method": "get",
              "array": "objects",
              "label": "id",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecording"
            }
          }
        }
      }
    },
    "/service/recording/action/list": {
      "get": {
        "description": "Return a list of recordings for the household with optional filter by status and KSQL.",
        "tags": [
          "recording"
        ],
        "operationId": "recording.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[statusIn]",
            "description": "Recording Statuses",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[filterExpression]",
            "description": "KSQL expression",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageSize]",
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "x-group": "pager"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageIndex]",
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "x-group": "pager"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaRecordingFilter`",
            "subGroups": []
          },
          {
            "name": "pager",
            "description": "Object Type: `KalturaFilterPager`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecordingListResponse"
            }
          }
        }
      }
    },
    "/service/recording/action/protect": {
      "get": {
        "description": "Protects an existing recording from the cleanup process for the defined protection period",
        "tags": [
          "recording"
        ],
        "operationId": "recording.protect",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "Recording identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRecording"
            }
          }
        }
      }
    },
    "/service/region/action/list": {
      "get": {
        "description": "Returns all regions for the partner",
        "tags": [
          "region"
        ],
        "operationId": "region.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[externalIdIn]",
            "description": "List of comma separated regions external identifiers",
            "x-group": "filter"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaRegionFilter`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRegionListResponse"
            }
          }
        }
      }
    },
    "/service/registrysettings/action/list": {
      "get": {
        "description": "Retrieve the registry settings.",
        "tags": [
          "registrySettings"
        ],
        "operationId": "registrySettings.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaRegistrySettingsListResponse"
            }
          }
        }
      }
    },
    "/service/seriesrecording/action/add": {
      "get": {
        "description": "Issue a record request for a complete season or series",
        "tags": [
          "seriesRecording"
        ],
        "operationId": "seriesRecording.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "recording[epgId]",
            "description": "Kaltura EpgId",
            "x-group": "recording"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "recording[channelId]",
            "description": "Kaltura ChannelId",
            "x-group": "recording"
          },
          {
            "type": "string",
            "in": "query",
            "name": "recording[seriesId]",
            "description": "Kaltura SeriesId",
            "x-group": "recording"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "recording[seasonNumber]",
            "description": "Kaltura SeasonNumber",
            "x-group": "recording"
          },
          {
            "type": "string",
            "in": "query",
            "name": "recording[type]",
            "enum": [
              "SINGLE",
              "SEASON",
              "SERIES"
            ],
            "x-enumLabels": [
              "SINGLE",
              "SEASON",
              "SERIES"
            ],
            "description": "Enum Type: `KalturaRecordingType`\n\nRecording Type: single/series/season",
            "x-group": "recording"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "recording",
            "description": "Object Type: `KalturaSeriesRecording`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecording"
            }
          }
        }
      }
    },
    "/service/seriesrecording/action/cancel": {
      "get": {
        "description": "Cancel a previously requested series recording. Cancel series recording can be called for recording in status Scheduled or Recording Only",
        "tags": [
          "seriesRecording"
        ],
        "operationId": "seriesRecording.cancel",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "Series Recording identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecording"
            }
          }
        }
      }
    },
    "/service/seriesrecording/action/cancelByEpgId": {
      "get": {
        "description": "Cancel EPG recording that was recorded as part of series",
        "tags": [
          "seriesRecording"
        ],
        "operationId": "seriesRecording.cancelByEpgId",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "Series Recording identifier",
            "type": "integer",
            "required": false
          },
          {
            "name": "epgId",
            "in": "query",
            "description": "epg program identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecording"
            }
          }
        }
      }
    },
    "/service/seriesrecording/action/cancelBySeasonNumber": {
      "get": {
        "description": "Cancel Season recording epgs that was recorded as part of series",
        "tags": [
          "seriesRecording"
        ],
        "operationId": "seriesRecording.cancelBySeasonNumber",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "Series Recording identifier",
            "type": "integer",
            "required": false
          },
          {
            "name": "seasonNumber",
            "in": "query",
            "description": "Season Number",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecording"
            }
          }
        }
      }
    },
    "/service/seriesrecording/action/delete": {
      "get": {
        "description": "Delete series recording(s). Delete series recording can be called recordings in any status",
        "tags": [
          "seriesRecording"
        ],
        "operationId": "seriesRecording.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "Series Recording identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecording"
            }
          }
        }
      }
    },
    "/service/seriesrecording/action/deleteBySeasonNumber": {
      "get": {
        "description": "Delete Season recording epgs that was recorded as part of series",
        "tags": [
          "seriesRecording"
        ],
        "operationId": "seriesRecording.deleteBySeasonNumber",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "Series Recording identifier",
            "type": "integer",
            "required": false
          },
          {
            "name": "seasonNumber",
            "in": "query",
            "description": "Season Number",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecording"
            }
          }
        }
      }
    },
    "/service/seriesrecording/action/list": {
      "get": {
        "description": "Return a list of series recordings for the household with optional filter by status and KSQL.",
        "tags": [
          "seriesRecording"
        ],
        "operationId": "seriesRecording.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaSeriesRecordingFilter`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSeriesRecordingListResponse"
            }
          }
        }
      }
    },
    "/service/session/action/get": {
      "get": {
        "description": "Parses KS",
        "tags": [
          "session"
        ],
        "operationId": "session.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "session",
            "in": "query",
            "description": "Additional KS to parse, if not passed the user's KS will be parsed",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSession"
            }
          }
        }
      }
    },
    "/service/session/action/switchUser": {
      "get": {
        "description": "Switching the user in the session by generating a new session for a new user within the same household",
        "tags": [
          "session"
        ],
        "operationId": "session.switchUser",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "userIdToSwitch",
            "in": "query",
            "description": "The identifier of the user to change",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLoginSession"
            }
          }
        }
      }
    },
    "/service/social/action/get": {
      "get": {
        "description": "Return the user object with social information according to a provided external social token",
        "tags": [
          "social"
        ],
        "operationId": "social.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "type",
            "in": "query",
            "description": "Enum Type: `KalturaSocialNetwork`\n\nSocial network type",
            "type": "string",
            "required": false,
            "enum": [
              "facebook"
            ],
            "x-enumLabels": [
              "FACEBOOK"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocial"
            }
          }
        }
      }
    },
    "/service/social/action/getByToken": {
      "get": {
        "description": "Return the user object with social information according to a provided external social token",
        "tags": [
          "social"
        ],
        "operationId": "social.getByToken",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "Partner identifier",
            "type": "integer",
            "required": false
          },
          {
            "name": "token",
            "in": "query",
            "description": "Social token",
            "type": "string",
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "Enum Type: `KalturaSocialNetwork`\n\nSocial network type",
            "type": "string",
            "required": false,
            "enum": [
              "facebook"
            ],
            "x-enumLabels": [
              "FACEBOOK"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocial"
            }
          }
        }
      }
    },
    "/service/social/action/getConfiguration": {
      "get": {
        "description": "Retrieve the social network’s configuration information",
        "tags": [
          "social"
        ],
        "operationId": "social.getConfiguration",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "Partner identifier",
            "type": "integer",
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "Enum Type: `KalturaSocialNetwork`\n\nSocial network type",
            "type": "string",
            "required": false,
            "enum": [
              "facebook"
            ],
            "x-enumLabels": [
              "FACEBOOK"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocialConfig"
            }
          }
        }
      }
    },
    "/service/social/action/login": {
      "get": {
        "description": "Login using social token",
        "tags": [
          "social"
        ],
        "operationId": "social.login",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "Partner identifier",
            "type": "integer",
            "required": false
          },
          {
            "name": "token",
            "in": "query",
            "description": "Social token",
            "type": "string",
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "Enum Type: `KalturaSocialNetwork`\n\nSocial network",
            "type": "string",
            "required": false,
            "enum": [
              "facebook"
            ],
            "x-enumLabels": [
              "FACEBOOK"
            ]
          },
          {
            "name": "udid",
            "in": "query",
            "description": "Device UDID",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaLoginResponse"
            }
          }
        }
      }
    },
    "/service/social/action/merge": {
      "get": {
        "description": "Connect an existing user in the system to an external social network user",
        "tags": [
          "social"
        ],
        "operationId": "social.merge",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "token",
            "in": "query",
            "description": "social token",
            "type": "string",
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "Enum Type: `KalturaSocialNetwork`\n\nSocial network type",
            "type": "string",
            "required": false,
            "enum": [
              "facebook"
            ],
            "x-enumLabels": [
              "FACEBOOK"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocial"
            }
          }
        }
      }
    },
    "/service/social/action/register": {
      "get": {
        "description": "Create a new user in the system using a provided external social token",
        "tags": [
          "social"
        ],
        "operationId": "social.register",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "partnerId",
            "in": "query",
            "description": "Partner identifier",
            "type": "integer",
            "required": false
          },
          {
            "name": "token",
            "in": "query",
            "description": "social token",
            "type": "string",
            "required": false
          },
          {
            "name": "type",
            "in": "query",
            "description": "Enum Type: `KalturaSocialNetwork`\n\nSocial network type",
            "type": "string",
            "required": false,
            "enum": [
              "facebook"
            ],
            "x-enumLabels": [
              "FACEBOOK"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocial"
            }
          }
        }
      }
    },
    "/service/social/action/unmerge": {
      "get": {
        "description": "Disconnect an existing user in the system from its external social network user",
        "tags": [
          "social"
        ],
        "operationId": "social.unmerge",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "type",
            "in": "query",
            "description": "Enum Type: `KalturaSocialNetwork`\n\nSocial network type",
            "type": "string",
            "required": false,
            "enum": [
              "facebook"
            ],
            "x-enumLabels": [
              "FACEBOOK"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSocial"
            }
          }
        }
      }
    },
    "/service/subscription/action/list": {
      "get": {
        "description": "Returns a list of subscriptions requested by Subscription ID or file ID",
        "tags": [
          "subscription"
        ],
        "operationId": "subscription.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[subscriptionIdIn]",
            "description": "Comma separated subscription identifiers or file identifier (only 1) to get the subscriptions by",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[mediaFileIdEqual]",
            "description": "Media-file identifier to get the subscriptions by",
            "x-group": "filter"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaSubscriptionFilter`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaSubscriptionListResponse"
            }
          }
        }
      }
    },
    "/service/system/action/getCountry": {
      "get": {
        "description": "Returns country details by the provided IP, if not provided - by the client IP",
        "tags": [
          "system"
        ],
        "operationId": "system.getCountry",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "ip",
            "in": "query",
            "description": "IP",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaCountry"
            }
          }
        }
      }
    },
    "/service/system/action/getTime": {
      "get": {
        "description": "Returns current server timestamp",
        "tags": [
          "system"
        ],
        "operationId": "system.getTime",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/system/action/getVersion": {
      "get": {
        "description": "Returns current server version",
        "tags": [
          "system"
        ],
        "operationId": "system.getVersion",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/system/action/ping": {
      "get": {
        "description": "Returns true",
        "tags": [
          "system"
        ],
        "operationId": "system.ping",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/timeshiftedtvpartnersettings/action/get": {
      "get": {
        "description": "Retrieve the account’s time-shifted TV settings (catch-up and C-DVR, Trick-play, Start-over)",
        "tags": [
          "timeShiftedTvPartnerSettings"
        ],
        "operationId": "timeShiftedTvPartnerSettings.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTimeShiftedTvPartnerSettings"
            }
          }
        }
      }
    },
    "/service/timeshiftedtvpartnersettings/action/update": {
      "get": {
        "description": "Configure the account’s time-shifted TV settings (catch-up and C-DVR, Trick-play, Start-over)",
        "tags": [
          "timeShiftedTvPartnerSettings"
        ],
        "operationId": "timeShiftedTvPartnerSettings.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "settings[catchUpEnabled]",
            "description": "Is catch-up enabled",
            "x-group": "settings"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "settings[cdvrEnabled]",
            "description": "Is c-dvr enabled",
            "x-group": "settings"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "settings[startOverEnabled]",
            "description": "Is start-over enabled",
            "x-group": "settings"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "settings[trickPlayEnabled]",
            "description": "Is trick-play enabled",
            "x-group": "settings"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "settings[recordingScheduleWindowEnabled]",
            "description": "Is recording schedule window enabled",
            "x-group": "settings"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "settings[protectionEnabled]",
            "description": "Is recording protection enabled",
            "x-group": "settings"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "settings[catchUpBufferLength]",
            "description": "Catch-up buffer length",
            "x-group": "settings"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "settings[trickPlayBufferLength]",
            "description": "Trick play buffer length",
            "x-group": "settings"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "settings[recordingScheduleWindow]",
            "description": "Recording schedule window. Indicates how long (in minutes) after the program starts it is allowed to schedule the recording",
            "x-group": "settings"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "settings[paddingBeforeProgramStarts]",
            "description": "Indicates how long (in seconds) before the program starts the recording will begin",
            "x-group": "settings"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "settings[paddingAfterProgramEnds]",
            "description": "Indicates how long (in seconds) after the program ends the recording will end",
            "x-group": "settings"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "settings[protectionPeriod]",
            "description": "Specify the time in days that a recording should be protected. Start time begins at protection request.",
            "x-group": "settings"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "settings[protectionQuotaPercentage]",
            "description": "Indicates how long (in seconds) after the program ends the recording will end",
            "x-group": "settings"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "settings[recordingLifetimePeriod]",
            "description": "Specify the time in days that a recording should be kept for user. Start time begins with the program end date.",
            "x-group": "settings"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "settings[cleanupNoticePeroid]",
            "description": "The time in days before the recording lifetime is due from which the client should be able to warn user about deletion.",
            "x-group": "settings"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "settings[seriesRecordingEnabled]",
            "description": "The time in days before the recording lifetime is due from which the client should be able to warn user about deletion.",
            "x-group": "settings"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "settings[nonEntitledChannelPlaybackEnabled]",
            "description": "Is recording playback for non-entitled channel enables",
            "x-group": "settings"
          },
          {
            "type": "boolean",
            "in": "query",
            "name": "settings[nonExistingChannelPlaybackEnabled]",
            "description": "Is recording playback for non-existing channel enables",
            "x-group": "settings"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "settings",
            "description": "Object Type: `KalturaTimeShiftedTvPartnerSettings`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/topic/action/delete": {
      "get": {
        "description": "TBD",
        "tags": [
          "topic"
        ],
        "operationId": "topic.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "Topic identifier",
            "type": "integer",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/topic/action/get": {
      "get": {
        "description": "TBD",
        "tags": [
          "topic"
        ],
        "operationId": "topic.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "description": "topic id",
            "type": "integer",
            "required": false,
            "x-dynamicEnum": {
              "path": "/service/topic/action/list",
              "method": "get",
              "array": "objects",
              "label": "name",
              "value": "id"
            },
            "x-inputType": "text"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTopic"
            }
          }
        }
      }
    },
    "/service/topic/action/list": {
      "get": {
        "description": "TBD",
        "tags": [
          "topic"
        ],
        "operationId": "topic.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageSize]",
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "x-group": "pager"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageIndex]",
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "x-group": "pager"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaTopicFilter`",
            "subGroups": []
          },
          {
            "name": "pager",
            "description": "Object Type: `KalturaFilterPager`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTopicListResponse"
            }
          }
        }
      }
    },
    "/service/topic/action/updateStatus": {
      "get": {
        "description": "TBD",
        "tags": [
          "topic"
        ],
        "operationId": "topic.updateStatus",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "id",
            "in": "query",
            "type": "integer",
            "required": false
          },
          {
            "name": "automaticIssueNotification",
            "in": "query",
            "description": "Enum Type: `KalturaTopicAutomaticIssueNotification`",
            "type": "string",
            "required": false,
            "enum": [
              "Inherit",
              "Yes",
              "No"
            ],
            "x-enumLabels": [
              "INHERIT",
              "YES",
              "NO"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/transaction/action/getPurchaseSessionId": {
      "get": {
        "description": "Retrieve the purchase session identifier",
        "tags": [
          "transaction"
        ],
        "operationId": "transaction.getPurchaseSessionId",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "purchaseSession[productId]",
            "description": "Identifier for the package from which this content is offered",
            "x-group": "purchaseSession"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "purchaseSession[contentId]",
            "description": "Identifier for the content to purchase. Relevant only if Product type = PPV",
            "x-group": "purchaseSession"
          },
          {
            "type": "string",
            "in": "query",
            "name": "purchaseSession[productType]",
            "enum": [
              "ppv",
              "subscription",
              "collection"
            ],
            "x-enumLabels": [
              "PPV",
              "SUBSCRIPTION",
              "COLLECTION"
            ],
            "description": "Enum Type: `KalturaTransactionType`\n\nPackage type. Possible values: PPV, Subscription, Collection",
            "x-group": "purchaseSession"
          },
          {
            "type": "string",
            "in": "query",
            "name": "purchaseSession[currency]",
            "description": "Identifier for paying currency, according to ISO 4217",
            "x-group": "purchaseSession"
          },
          {
            "type": "number",
            "in": "query",
            "name": "purchaseSession[price]",
            "description": "Net sum to charge – as a one-time transaction. Price must match the previously provided price for the specified content.",
            "x-group": "purchaseSession"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "purchaseSession[paymentMethodId]",
            "description": "Identifier for a pre-entered payment method. If not provided – the household’s default payment method is used",
            "x-group": "purchaseSession"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "purchaseSession[paymentGatewayId]",
            "description": "Identifier for a pre-associated payment gateway. If not provided – the account’s default payment gateway is used",
            "x-group": "purchaseSession"
          },
          {
            "type": "string",
            "in": "query",
            "name": "purchaseSession[coupon]",
            "description": "Coupon code",
            "x-group": "purchaseSession"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "purchaseSession[previewModuleId]",
            "description": "Preview module identifier (relevant only for subscription)",
            "x-group": "purchaseSession"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "purchaseSession",
            "description": "Object Type: `KalturaPurchaseSession`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/transaction/action/purchase": {
      "get": {
        "description": "Purchase specific product or subscription for a household. Upon successful charge entitlements to use the requested product or subscription are granted.",
        "tags": [
          "transaction"
        ],
        "operationId": "transaction.purchase",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "purchase[productId]",
            "description": "Identifier for the package from which this content is offered",
            "x-group": "purchase"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "purchase[contentId]",
            "description": "Identifier for the content to purchase. Relevant only if Product type = PPV",
            "x-group": "purchase"
          },
          {
            "type": "string",
            "in": "query",
            "name": "purchase[productType]",
            "enum": [
              "ppv",
              "subscription",
              "collection"
            ],
            "x-enumLabels": [
              "PPV",
              "SUBSCRIPTION",
              "COLLECTION"
            ],
            "description": "Enum Type: `KalturaTransactionType`\n\nPackage type. Possible values: PPV, Subscription, Collection",
            "x-group": "purchase"
          },
          {
            "type": "string",
            "in": "query",
            "name": "purchase[currency]",
            "description": "Identifier for paying currency, according to ISO 4217",
            "x-group": "purchase"
          },
          {
            "type": "number",
            "in": "query",
            "name": "purchase[price]",
            "description": "Net sum to charge – as a one-time transaction. Price must match the previously provided price for the specified content.",
            "x-group": "purchase"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "purchase[paymentMethodId]",
            "description": "Identifier for a pre-entered payment method. If not provided – the household’s default payment method is used",
            "x-group": "purchase"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "purchase[paymentGatewayId]",
            "description": "Identifier for a pre-associated payment gateway. If not provided – the account’s default payment gateway is used",
            "x-group": "purchase"
          },
          {
            "type": "string",
            "in": "query",
            "name": "purchase[coupon]",
            "description": "Coupon code",
            "x-group": "purchase"
          },
          {
            "name": "purchase[objectType]",
            "in": "query",
            "enum": [
              "KalturaPurchaseSession"
            ],
            "type": "string",
            "x-group": "purchase"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "purchase[previewModuleId]",
            "description": "Preview module identifier (relevant only for subscription)",
            "x-showCondition": {
              "name": "purchase[objectType]",
              "value": [
                "KalturaPurchaseSession"
              ]
            },
            "x-group": "purchase"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "purchase",
            "description": "Object Type: `KalturaPurchase`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTransaction"
            }
          }
        }
      }
    },
    "/service/transaction/action/setWaiver": {
      "get": {
        "description": "This method shall set the waiver flag on the user entitlement table and the waiver date field to the current date.",
        "tags": [
          "transaction"
        ],
        "operationId": "transaction.setWaiver",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "assetId",
            "in": "query",
            "description": "Asset identifier",
            "type": "integer",
            "required": false
          },
          {
            "name": "transactionType",
            "in": "query",
            "description": "Enum Type: `KalturaTransactionType`\n\nThe transaction type",
            "type": "string",
            "required": false,
            "enum": [
              "ppv",
              "subscription",
              "collection"
            ],
            "x-enumLabels": [
              "PPV",
              "SUBSCRIPTION",
              "COLLECTION"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/transaction/action/updateStatus": {
      "get": {
        "description": "Updates a pending purchase transaction state.",
        "tags": [
          "transaction"
        ],
        "operationId": "transaction.updateStatus",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "paymentGatewayId",
            "in": "query",
            "description": "Payment gateway identifier",
            "type": "string",
            "required": false
          },
          {
            "name": "externalTransactionId",
            "in": "query",
            "description": "external transaction identifier",
            "type": "string",
            "required": false
          },
          {
            "name": "signature",
            "in": "query",
            "description": "Security signature to validate the caller is a payment gateway adapter application",
            "type": "string",
            "required": false
          },
          {
            "type": "string",
            "in": "query",
            "name": "status[adapterTransactionStatus]",
            "enum": [
              "OK",
              "PENDING",
              "FAILED"
            ],
            "x-enumLabels": [
              "OK",
              "PENDING",
              "FAILED"
            ],
            "description": "Enum Type: `KalturaTransactionAdapterStatus`\n\nPayment gateway adapter application state for the transaction to update",
            "x-group": "status"
          },
          {
            "type": "string",
            "in": "query",
            "name": "status[externalId]",
            "description": "External transaction identifier",
            "x-group": "status"
          },
          {
            "type": "string",
            "in": "query",
            "name": "status[externalStatus]",
            "description": "Payment gateway transaction status",
            "x-group": "status"
          },
          {
            "type": "string",
            "in": "query",
            "name": "status[externalMessage]",
            "description": "Payment gateway message",
            "x-group": "status"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "status[failReason]",
            "description": "The reason the transaction failed",
            "x-group": "status"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "status",
            "description": "Object Type: `KalturaTransactionStatus`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/transaction/action/validateReceipt": {
      "get": {
        "description": "Verifies PPV/Subscription/Collection client purchase (such as InApp) and entitles the user.",
        "tags": [
          "transaction"
        ],
        "operationId": "transaction.validateReceipt",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "externalReceipt[productId]",
            "description": "Identifier for the package from which this content is offered",
            "x-group": "externalReceipt"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "externalReceipt[contentId]",
            "description": "Identifier for the content to purchase. Relevant only if Product type = PPV",
            "x-group": "externalReceipt"
          },
          {
            "type": "string",
            "in": "query",
            "name": "externalReceipt[productType]",
            "enum": [
              "ppv",
              "subscription",
              "collection"
            ],
            "x-enumLabels": [
              "PPV",
              "SUBSCRIPTION",
              "COLLECTION"
            ],
            "description": "Enum Type: `KalturaTransactionType`\n\nPackage type. Possible values: PPV, Subscription, Collection",
            "x-group": "externalReceipt"
          },
          {
            "type": "string",
            "in": "query",
            "name": "externalReceipt[receiptId]",
            "description": "A unique identifier that was provided by the In-App billing service to validate the purchase",
            "x-group": "externalReceipt"
          },
          {
            "type": "string",
            "in": "query",
            "name": "externalReceipt[paymentGatewayName]",
            "description": "The payment gateway name for the In-App billing service to be used. Possible values: Google/Apple",
            "x-group": "externalReceipt"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "externalReceipt",
            "description": "Object Type: `KalturaExternalReceipt`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaTransaction"
            }
          }
        }
      }
    },
    "/service/transactionhistory/action/list": {
      "get": {
        "description": "Gets user or household transaction history.",
        "tags": [
          "transactionHistory"
        ],
        "operationId": "transactionHistory.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[entityReferenceEqual]",
            "enum": [
              "user",
              "household"
            ],
            "x-enumLabels": [
              "USER",
              "HOUSEHOLD"
            ],
            "description": "Enum Type: `KalturaEntityReferenceBy`\n\nReference type to filter by",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[startDateGreaterThanOrEqual]",
            "description": "Filter transactions later than specific date",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[endDateLessThanOrEqual]",
            "description": "Filter transactions earlier than specific date",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageSize]",
            "description": "The number of objects to retrieve. Possible range 1 ≤ value ≤ 50. If omitted or value &lt; 1 - will be set to 25. If a value &gt; 50 provided – will be set to 50",
            "x-group": "pager"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "pager[pageIndex]",
            "description": "The page number for which {pageSize} of objects should be retrieved",
            "x-group": "pager"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaTransactionHistoryFilter`",
            "subGroups": []
          },
          {
            "name": "pager",
            "description": "Object Type: `KalturaFilterPager`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaBillingTransactionListResponse"
            }
          }
        }
      }
    },
    "/service/userassetrule/action/list": {
      "get": {
        "description": "Retrieve all the rules (parental, geo, device or user-type) that applies for this user and asset.",
        "tags": [
          "userAssetRule"
        ],
        "operationId": "userAssetRule.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[assetIdEqual]",
            "description": "Asset identifier to filter by",
            "x-group": "filter"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[assetTypeEqual]",
            "description": "Asset type to filter by - 0 = EPG, 1 = media",
            "x-group": "filter"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaUserAssetRuleFilter`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserAssetRuleListResponse"
            }
          }
        }
      }
    },
    "/service/userassetslistitem/action/add": {
      "get": {
        "description": "Adds a new item to user’s private asset list",
        "tags": [
          "userAssetsListItem"
        ],
        "operationId": "userAssetsListItem.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "string",
            "in": "query",
            "name": "userAssetsListItem[id]",
            "description": "Asset identifier",
            "x-group": "userAssetsListItem"
          },
          {
            "type": "integer",
            "in": "query",
            "name": "userAssetsListItem[orderIndex]",
            "description": "The order index of the asset in the list",
            "x-group": "userAssetsListItem"
          },
          {
            "type": "string",
            "in": "query",
            "name": "userAssetsListItem[type]",
            "enum": [
              "all",
              "media"
            ],
            "x-enumLabels": [
              "ALL",
              "MEDIA"
            ],
            "description": "Enum Type: `KalturaUserAssetsListItemType`\n\nThe type of the asset",
            "x-group": "userAssetsListItem"
          },
          {
            "type": "string",
            "in": "query",
            "name": "userAssetsListItem[listType]",
            "enum": [
              "all",
              "watch",
              "purchase",
              "library"
            ],
            "x-enumLabels": [
              "ALL",
              "WATCH",
              "PURCHASE",
              "LIBRARY"
            ],
            "description": "Enum Type: `KalturaUserAssetsListType`\n\nThe type of the list",
            "x-group": "userAssetsListItem"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "userAssetsListItem",
            "description": "Object Type: `KalturaUserAssetsListItem`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserAssetsListItem"
            }
          }
        }
      }
    },
    "/service/userassetslistitem/action/delete": {
      "get": {
        "description": "Deletes an item from user’s private asset list",
        "tags": [
          "userAssetsListItem"
        ],
        "operationId": "userAssetsListItem.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "assetId",
            "in": "query",
            "description": "Asset id to delete",
            "type": "string",
            "required": false
          },
          {
            "name": "listType",
            "in": "query",
            "description": "Enum Type: `KalturaUserAssetsListType`\n\nAsset list type to delete from",
            "type": "string",
            "required": false,
            "enum": [
              "all",
              "watch",
              "purchase",
              "library"
            ],
            "x-enumLabels": [
              "ALL",
              "WATCH",
              "PURCHASE",
              "LIBRARY"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/userassetslistitem/action/get": {
      "get": {
        "description": "Get an item from user’s private asset list",
        "tags": [
          "userAssetsListItem"
        ],
        "operationId": "userAssetsListItem.get",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "assetId",
            "in": "query",
            "description": "Asset id to get",
            "type": "string",
            "required": false
          },
          {
            "name": "listType",
            "in": "query",
            "description": "Enum Type: `KalturaUserAssetsListType`\n\nAsset list type to get from",
            "type": "string",
            "required": false,
            "enum": [
              "all",
              "watch",
              "purchase",
              "library"
            ],
            "x-enumLabels": [
              "ALL",
              "WATCH",
              "PURCHASE",
              "LIBRARY"
            ]
          },
          {
            "name": "itemType",
            "in": "query",
            "description": "Enum Type: `KalturaUserAssetsListItemType`\n\nitem type to get",
            "type": "string",
            "required": false,
            "enum": [
              "all",
              "media"
            ],
            "x-enumLabels": [
              "ALL",
              "MEDIA"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserAssetsListItem"
            }
          }
        }
      }
    },
    "/service/userloginpin/action/add": {
      "get": {
        "description": "Generate a time and usage expiry login-PIN that can allow a single login per PIN. If an active login-PIN already exists. Calling this API again for same user will add another login-PIN",
        "tags": [
          "userLoginPin"
        ],
        "operationId": "userLoginPin.add",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "secret",
            "in": "query",
            "description": "Additional security parameter for optional enhanced security",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserLoginPin"
            }
          }
        }
      }
    },
    "/service/userloginpin/action/delete": {
      "get": {
        "description": "Immediately expire all active login-PINs for a user",
        "tags": [
          "userLoginPin"
        ],
        "operationId": "userLoginPin.delete",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "pinCode",
            "in": "query",
            "description": "Login pin code to expire",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/userloginpin/action/deleteAll": {
      "get": {
        "description": "Immediately expire all active login-PINs for a user",
        "tags": [
          "userLoginPin"
        ],
        "operationId": "userLoginPin.deleteAll",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          }
        }
      }
    },
    "/service/userloginpin/action/update": {
      "get": {
        "description": "Set a time and usage expiry login-PIN that can allow a single login per PIN. If an active login-PIN already exists. Calling this API again for same user will add another login-PIN",
        "tags": [
          "userLoginPin"
        ],
        "operationId": "userLoginPin.update",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "name": "pinCode",
            "in": "query",
            "description": "Device Identifier",
            "type": "string",
            "required": false
          },
          {
            "name": "secret",
            "in": "query",
            "description": "Additional security parameter to validate the login",
            "type": "string",
            "required": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserLoginPin"
            }
          }
        }
      }
    },
    "/service/userrole/action/list": {
      "get": {
        "description": "Retrieving user roles by identifiers, if filter is empty, returns all partner roles",
        "tags": [
          "userRole"
        ],
        "operationId": "userRole.list",
        "parameters": [
          {
            "name": "format",
            "enum": [
              1,
              2,
              3
            ],
            "x-enumLabels": [
              "JSON",
              "XML",
              "PHP"
            ],
            "description": "The format of the response",
            "in": "query",
            "type": "integer",
            "x-global": true
          },
          {
            "type": "integer",
            "in": "query",
            "name": "filter[orderBy]",
            "x-group": "filter"
          },
          {
            "type": "string",
            "in": "query",
            "name": "filter[idIn]",
            "description": "Comma separated roles identifiers",
            "x-group": "filter"
          }
        ],
        "x-parameterGroups": [
          {
            "name": "filter",
            "description": "Object Type: `KalturaUserRoleFilter`",
            "subGroups": []
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/KalturaUserRoleListResponse"
            }
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "announcement"
    },
    {
      "name": "appToken"
    },
    {
      "name": "asset"
    },
    {
      "name": "assetComment"
    },
    {
      "name": "assetFile"
    },
    {
      "name": "assetHistory"
    },
    {
      "name": "assetStatistics"
    },
    {
      "name": "bookmark"
    },
    {
      "name": "cDVRAdapterProfile"
    },
    {
      "name": "cdnAdapterProfile"
    },
    {
      "name": "cdnPartnerSettings"
    },
    {
      "name": "channel"
    },
    {
      "name": "coupon"
    },
    {
      "name": "entitlement"
    },
    {
      "name": "exportTask"
    },
    {
      "name": "externalChannelProfile"
    },
    {
      "name": "favorite"
    },
    {
      "name": "followTvSeries"
    },
    {
      "name": "homeNetwork"
    },
    {
      "name": "household"
    },
    {
      "name": "householdDevice"
    },
    {
      "name": "householdLimitations"
    },
    {
      "name": "householdPaymentGateway"
    },
    {
      "name": "householdPaymentMethod"
    },
    {
      "name": "householdPremiumService"
    },
    {
      "name": "householdQuota"
    },
    {
      "name": "householdUser"
    },
    {
      "name": "inboxMessage"
    },
    {
      "name": "licensedUrl"
    },
    {
      "name": "messageTemplate"
    },
    {
      "name": "notification"
    },
    {
      "name": "notificationsPartnerSettings"
    },
    {
      "name": "notificationsSettings"
    },
    {
      "name": "ossAdapterProfile"
    },
    {
      "name": "ottCategory"
    },
    {
      "name": "ottUser"
    },
    {
      "name": "parentalRule"
    },
    {
      "name": "partnerConfiguration"
    },
    {
      "name": "paymentGatewayProfile"
    },
    {
      "name": "paymentMethodProfile"
    },
    {
      "name": "personalFeed"
    },
    {
      "name": "pin"
    },
    {
      "name": "ppv"
    },
    {
      "name": "productPrice"
    },
    {
      "name": "purchaseSettings"
    },
    {
      "name": "recommendationProfile"
    },
    {
      "name": "recording"
    },
    {
      "name": "region"
    },
    {
      "name": "registrySettings"
    },
    {
      "name": "seriesRecording"
    },
    {
      "name": "session"
    },
    {
      "name": "social"
    },
    {
      "name": "subscription"
    },
    {
      "name": "system"
    },
    {
      "name": "timeShiftedTvPartnerSettings"
    },
    {
      "name": "topic"
    },
    {
      "name": "transaction"
    },
    {
      "name": "transactionHistory"
    },
    {
      "name": "userAssetRule"
    },
    {
      "name": "userAssetsListItem"
    },
    {
      "name": "userLoginPin"
    },
    {
      "name": "userRole"
    }
  ]
}